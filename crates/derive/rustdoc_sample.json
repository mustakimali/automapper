{
    "root": "0:0:2327",
    "crate_version": "0.1.0",
    "includes_private": true,
    "index": {
        "0:4:2311": {
            "id": "0:4:2311",
            "crate_id": 0,
            "name": "Test",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    3,
                    0
                ],
                "end": [
                    8,
                    1
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "struct": {
                    "kind": {
                        "plain": {
                            "fields": [
                                "0:5:2312",
                                "0:6:2313",
                                "0:7:713",
                                "0:8:1155"
                            ],
                            "fields_stripped": false
                        }
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "impls": [
                        "a:2:3213:247-0:4:2311",
                        "a:2:35900:3123-0:4:2311",
                        "a:2:3248:7738-0:4:2311",
                        "a:2:26043:237-0:4:2311",
                        "a:2:26102:2596-0:4:2311",
                        "a:2:35899:2780-0:4:2311",
                        "b:2:3832-0:4:2311",
                        "b:2:2990-0:4:2311",
                        "b:2:2720-0:4:2311",
                        "b:2:2717-0:4:2311",
                        "b:2:3005-0:4:2311",
                        "b:2:2994-0:4:2311",
                        "b:2:3000-0:4:2311"
                    ]
                }
            }
        },
        "2:13394:19429": {
            "id": "2:13394:19429",
            "crate_id": 2,
            "name": "trim_ascii_start",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```",
            "links": {
                "u8::is_ascii_whitespace": "2:1061:32914"
            },
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": true,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13272:26735": {
            "id": "2:13272:26735",
            "crate_id": 2,
            "name": "ceil_char_boundary",
            "span": null,
            "visibility": "public",
            "docs": "Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```",
            "links": {
                "str::floor_char_boundary": "2:13270:26734"
            },
            "attrs": [
                "#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "index",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "primitive": "usize"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13299:23545": {
            "id": "2:13299:23545",
            "crate_id": 2,
            "name": "lines",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```",
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Lines",
                                "id": "2:38029:2979",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "b:2:2990-0:4:2311": {
            "id": "b:2:2990-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            },
                            {
                                "name": "U",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "U"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "From",
                                                    "id": "2:2967:144",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "type": {
                                                                        "generic": "T"
                                                                    }
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Into",
                        "id": "2:2964:163",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "U"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:2993:2611"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "a:2:3213:247-0:4:2311": {
            "id": "a:2:3213:247-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Sync",
                        "id": "2:3213:247",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "b:2:3000-0:9:2314": {
            "id": "b:2:3000-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            },
                            {
                                "name": "U",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "U"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "TryFrom",
                                                    "id": "2:2974:257",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "type": {
                                                                        "generic": "T"
                                                                    }
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "TryInto",
                        "id": "2:2970:258",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "U"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:3003:137",
                        "2:3004:1813"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "2:13297:24193": {
            "id": "2:13297:24193",
            "crate_id": 2,
            "name": "split_whitespace",
            "span": null,
            "visibility": "public",
            "docs": "Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```",
            "links": {
                "str::split_ascii_whitespace": "2:13298:24190"
            },
            "attrs": [
                "#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]",
                "#[rustc_diagnostic_item = \"str_split_whitespace\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "SplitWhitespace",
                                "id": "2:38049:7412",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13301:24185": {
            "id": "2:13301:24185",
            "crate_id": 2,
            "name": "encode_utf16",
            "span": null,
            "visibility": "public",
            "docs": "Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```",
            "links": {},
            "attrs": [
                "#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "EncodeUtf16",
                                "id": "2:38067:7410",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13267:1000": {
            "id": "2:13267:1000",
            "crate_id": 2,
            "name": "len",
            "span": null,
            "visibility": "public",
            "docs": "Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```",
            "links": {
                "prim@char": "1:11826:471"
            },
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "primitive": "usize"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": true,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13305:19653": {
            "id": "2:13305:19653",
            "crate_id": 2,
            "name": "starts_with",
            "span": null,
            "visibility": "public",
            "docs": "Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "primitive": "bool"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "b:2:2994-0:9:2314": {
            "id": "b:2:2994-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "From",
                        "id": "2:2967:144",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "T"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:2996:834"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "0:7:713": {
            "id": "0:7:713",
            "crate_id": 0,
            "name": "expected",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    6,
                    4
                ],
                "end": [
                    6,
                    17
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "struct_field": {
                    "primitive": "u64"
                }
            }
        },
        "0:9:2314": {
            "id": "0:9:2314",
            "crate_id": 0,
            "name": "Test2",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    10,
                    0
                ],
                "end": [
                    15,
                    1
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "struct": {
                    "kind": {
                        "plain": {
                            "fields": [
                                "0:10:2312",
                                "0:11:2313",
                                "0:12:713",
                                "0:13:1155"
                            ],
                            "fields_stripped": false
                        }
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "impls": [
                        "a:2:3213:247-0:9:2314",
                        "a:2:35900:3123-0:9:2314",
                        "a:2:3248:7738-0:9:2314",
                        "a:2:26043:237-0:9:2314",
                        "a:2:26102:2596-0:9:2314",
                        "a:2:35899:2780-0:9:2314",
                        "b:2:3832-0:9:2314",
                        "b:2:2990-0:9:2314",
                        "b:2:2720-0:9:2314",
                        "b:2:2717-0:9:2314",
                        "b:2:3005-0:9:2314",
                        "b:2:2994-0:9:2314",
                        "b:2:3000-0:9:2314"
                    ]
                }
            }
        },
        "2:13365:26749": {
            "id": "2:13365:26749",
            "crate_id": 2,
            "name": "trim_right",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```",
            "links": {},
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]",
                "#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"
            ],
            "deprecation": {
                "since": "1.33.0",
                "note": "superseded by `trim_end`"
            },
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13281:19608": {
            "id": "2:13281:19608",
            "crate_id": 2,
            "name": "get_mut",
            "span": null,
            "visibility": "public",
            "docs": "Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```",
            "links": {
                "`None`": "2:35807:191"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "i",
                                {
                                    "generic": "I"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "borrowed_ref": {
                                                        "lifetime": null,
                                                        "mutable": true,
                                                        "type": {
                                                            "qualified_path": {
                                                                "name": "Output",
                                                                "args": {
                                                                    "angle_bracketed": {
                                                                        "args": [],
                                                                        "bindings": []
                                                                    }
                                                                },
                                                                "self_type": {
                                                                    "generic": "I"
                                                                },
                                                                "trait": {
                                                                    "name": "SliceIndex",
                                                                    "id": "2:11056:239",
                                                                    "args": {
                                                                        "angle_bracketed": {
                                                                            "args": [
                                                                                {
                                                                                    "type": {
                                                                                        "primitive": "str"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "bindings": []
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "I",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "I"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "SliceIndex",
                                                    "id": "2:11056:239",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "type": {
                                                                        "primitive": "str"
                                                                    }
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "b:2:3832-0:9:2314": {
            "id": "b:2:3832-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "T"
                                    },
                                    "bounds": [
                                        {
                                            "outlives": "'static"
                                        },
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Sized",
                                                    "id": "2:26044:2595",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "maybe"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Any",
                        "id": "2:3830:70",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:3834:1826"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "2:13366:26750": {
            "id": "2:13366:26750",
            "crate_id": 2,
            "name": "trim_matches",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": "'a",
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "DoubleEndedSearcher",
                                                    "id": "2:12994:7404",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13395:19430": {
            "id": "2:13395:19430",
            "crate_id": 2,
            "name": "trim_ascii_end",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```",
            "links": {
                "u8::is_ascii_whitespace": "2:1061:32914"
            },
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": true,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "0:12:713": {
            "id": "0:12:713",
            "crate_id": 0,
            "name": "expected",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    13,
                    4
                ],
                "end": [
                    13,
                    17
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "struct_field": {
                    "primitive": "u64"
                }
            }
        },
        "5:5685:27452": {
            "id": "5:5685:27452",
            "crate_id": 5,
            "name": "into_boxed_bytes",
            "span": null,
            "visibility": "public",
            "docs": "Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```",
            "links": {},
            "attrs": [
                "#[must_use = \"`self` will be dropped if the result is not used\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "resolved_path": {
                                        "name": "Box",
                                        "id": "5:306:2597",
                                        "args": {
                                            "angle_bracketed": {
                                                "args": [
                                                    {
                                                        "type": {
                                                            "primitive": "str"
                                                        }
                                                    }
                                                ],
                                                "bindings": []
                                            }
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Box",
                                "id": "5:306:2597",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "slice": {
                                                        "primitive": "u8"
                                                    }
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13349:26742": {
            "id": "2:13349:26742",
            "crate_id": 2,
            "name": "rmatches",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```",
            "links": {
                "self::pattern": "2:12968:7409",
                "`DoubleEndedIterator`": "2:8342:129",
                "prim@char": "1:11826:471",
                "str::matches": "2:13346:2565"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "RMatches",
                                "id": "2:37997:7427",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13346:2565": {
            "id": "2:13346:2565",
            "crate_id": 2,
            "name": "matches",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```",
            "links": {
                "self::pattern": "2:12968:7409",
                "`DoubleEndedIterator`": "2:8342:129",
                "prim@char": "1:11826:471",
                "str::rmatches": "2:13349:26742"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Matches",
                                "id": "2:37979:7426",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13393:18689": {
            "id": "2:13393:18689",
            "crate_id": 2,
            "name": "make_ascii_lowercase",
            "span": null,
            "visibility": "public",
            "docs": "Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```",
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": null,
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13337:19648": {
            "id": "2:13337:19648",
            "crate_id": 2,
            "name": "rsplitn",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```",
            "links": {
                "prim@char": "1:11826:471",
                "str::splitn": "2:13334:19646",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "n",
                                {
                                    "primitive": "usize"
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "RSplitN",
                                "id": "2:37897:7396",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13331:26741": {
            "id": "2:13331:26741",
            "crate_id": 2,
            "name": "rsplit_terminator",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```",
            "links": {
                "self::pattern": "2:12968:7409",
                "str::split": "2:13319:19640",
                "prim@char": "1:11826:471",
                "str::split_terminator": "2:13328:26740"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "RSplitTerminator",
                                "id": "2:37843:7428",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13358:26745": {
            "id": "2:13358:26745",
            "crate_id": 2,
            "name": "trim",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```",
            "links": {},
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]",
                "#[rustc_diagnostic_item = \"str_trim\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13291:19638": {
            "id": "2:13291:19638",
            "crate_id": 2,
            "name": "split_at_checked",
            "span": null,
            "visibility": "public",
            "docs": "Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```",
            "links": {
                "str::split_at_mut_checked": "2:13292:19639"
            },
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "mid",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "tuple": [
                                                        {
                                                            "borrowed_ref": {
                                                                "lifetime": null,
                                                                "mutable": false,
                                                                "type": {
                                                                    "primitive": "str"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "borrowed_ref": {
                                                                "lifetime": null,
                                                                "mutable": false,
                                                                "type": {
                                                                    "primitive": "str"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13372:18415": {
            "id": "2:13372:18415",
            "crate_id": 2,
            "name": "strip_prefix",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [
                "#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "prefix",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "borrowed_ref": {
                                                        "lifetime": "'a",
                                                        "mutable": false,
                                                        "type": {
                                                            "primitive": "str"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "a:2:35900:3123-0:4:2311": {
            "id": "a:2:35900:3123-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "RefUnwindSafe",
                        "id": "2:35900:3123",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "2:13315:2617": {
            "id": "2:13315:2617",
            "crate_id": 2,
            "name": "rfind",
            "span": null,
            "visibility": "public",
            "docs": "Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```",
            "links": {
                "`None`": "2:35807:191",
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "primitive": "usize"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13381:26753": {
            "id": "2:13381:26753",
            "crate_id": 2,
            "name": "trim_left_matches",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [
                "#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"
            ],
            "deprecation": {
                "since": "1.33.0",
                "note": "superseded by `trim_start_matches`"
            },
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": "'a",
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "0:8:1155": {
            "id": "0:8:1155",
            "crate_id": 0,
            "name": "name",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    7,
                    4
                ],
                "end": [
                    7,
                    16
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "struct_field": {
                    "resolved_path": {
                        "name": "String",
                        "id": "5:7744:243",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    }
                }
            }
        },
        "2:13278:19611": {
            "id": "2:13278:19611",
            "crate_id": 2,
            "name": "as_mut_ptr",
            "span": null,
            "visibility": "public",
            "docs": "Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.",
            "links": {
                "`u8`": "1:11845:1856"
            },
            "attrs": [
                "#[rustc_never_returns_null_ptr]",
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "raw_pointer": {
                                "mutable": true,
                                "type": {
                                    "primitive": "u8"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13270:26734": {
            "id": "2:13270:26734",
            "crate_id": 2,
            "name": "floor_char_boundary",
            "span": null,
            "visibility": "public",
            "docs": "Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```",
            "links": {},
            "attrs": [
                "#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "index",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "primitive": "usize"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "5:5692:27454": {
            "id": "5:5692:27454",
            "crate_id": 5,
            "name": "to_lowercase",
            "span": null,
            "visibility": "public",
            "docs": "Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```",
            "links": {
                "`String`": "5:7744:243"
            },
            "attrs": [
                "#[cfg(not(no_global_oom_handling))]",
                "#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "String",
                                "id": "5:7744:243",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "b:2:2717-0:9:2314": {
            "id": "b:2:2717-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "T"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Sized",
                                                    "id": "2:26044:2595",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "maybe"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Borrow",
                        "id": "2:2711:102",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "T"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:2719:2550"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "2:13389:18683": {
            "id": "2:13389:18683",
            "crate_id": 2,
            "name": "is_ascii",
            "span": null,
            "visibility": "public",
            "docs": "Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```",
            "links": {},
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "primitive": "bool"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": true,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13360:26746": {
            "id": "2:13360:26746",
            "crate_id": 2,
            "name": "trim_start",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```",
            "links": {},
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]",
                "#[rustc_diagnostic_item = \"str_trim_start\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:3009:1811": {
            "id": "2:3009:1811",
            "crate_id": 2,
            "name": "try_from",
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "value",
                                {
                                    "generic": "U"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Result",
                                "id": "2:35938:226",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "generic": "T"
                                                }
                                            },
                                            {
                                                "type": {
                                                    "qualified_path": {
                                                        "name": "Error",
                                                        "args": {
                                                            "angle_bracketed": {
                                                                "args": [],
                                                                "bindings": []
                                                            }
                                                        },
                                                        "self_type": {
                                                            "generic": "T"
                                                        },
                                                        "trait": {
                                                            "name": "TryFrom",
                                                            "id": "2:2974:257",
                                                            "args": {
                                                                "angle_bracketed": {
                                                                    "args": [
                                                                        {
                                                                            "type": {
                                                                                "generic": "U"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "bindings": []
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13364:26748": {
            "id": "2:13364:26748",
            "crate_id": 2,
            "name": "trim_left",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```",
            "links": {},
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]",
                "#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"
            ],
            "deprecation": {
                "since": "1.33.0",
                "note": "superseded by `trim_start`"
            },
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "0:13:1155": {
            "id": "0:13:1155",
            "crate_id": 0,
            "name": "name",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    14,
                    4
                ],
                "end": [
                    14,
                    16
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "struct_field": {
                    "resolved_path": {
                        "name": "String",
                        "id": "5:7744:243",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    }
                }
            }
        },
        "2:3004:1813": {
            "id": "2:3004:1813",
            "crate_id": 2,
            "name": "try_into",
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "generic": "Self"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Result",
                                "id": "2:35938:226",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "generic": "U"
                                                }
                                            },
                                            {
                                                "type": {
                                                    "qualified_path": {
                                                        "name": "Error",
                                                        "args": {
                                                            "angle_bracketed": {
                                                                "args": [],
                                                                "bindings": []
                                                            }
                                                        },
                                                        "self_type": {
                                                            "generic": "U"
                                                        },
                                                        "trait": {
                                                            "name": "TryFrom",
                                                            "id": "2:2974:257",
                                                            "args": {
                                                                "angle_bracketed": {
                                                                    "args": [
                                                                        {
                                                                            "type": {
                                                                                "generic": "T"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "bindings": []
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "b:2:3000-0:4:2311": {
            "id": "b:2:3000-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            },
                            {
                                "name": "U",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "U"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "TryFrom",
                                                    "id": "2:2974:257",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "type": {
                                                                        "generic": "T"
                                                                    }
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "TryInto",
                        "id": "2:2970:258",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "U"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:3003:137",
                        "2:3004:1813"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "a:2:3248:7738-0:9:2314": {
            "id": "a:2:3248:7738-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Freeze",
                        "id": "2:3248:7738",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "a:2:35899:2780-0:4:2311": {
            "id": "a:2:35899:2780-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "UnwindSafe",
                        "id": "2:35899:2780",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "2:13294:24184": {
            "id": "2:13294:24184",
            "crate_id": 2,
            "name": "chars",
            "span": null,
            "visibility": "public",
            "docs": "Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```",
            "links": {
                "prim@char": "1:11826:471"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Chars",
                                "id": "2:37745:7416",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "a:2:26102:2596-0:9:2314": {
            "id": "a:2:26102:2596-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Unpin",
                        "id": "2:26102:2596",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "2:13362:26747": {
            "id": "2:13362:26747",
            "crate_id": 2,
            "name": "trim_end",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```",
            "links": {},
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]",
                "#[rustc_diagnostic_item = \"str_trim_end\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13290:19635": {
            "id": "2:13290:19635",
            "crate_id": 2,
            "name": "split_at_mut",
            "span": null,
            "visibility": "public",
            "docs": "Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```",
            "links": {
                "str::split_at": "2:13289:19634",
                "str::split_at_mut_checked": "2:13292:19639"
            },
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "mid",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "tuple": [
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "primitive": "str"
                                        }
                                    }
                                },
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "primitive": "str"
                                        }
                                    }
                                }
                            ]
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13399:2767": {
            "id": "2:13399:2767",
            "crate_id": 2,
            "name": "escape_default",
            "span": null,
            "visibility": "public",
            "docs": "Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```",
            "links": {
                "`char::escape_default`": "2:5025:2767"
            },
            "attrs": [
                "#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "EscapeDefault",
                                "id": "2:38083:2768",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13295:24286": {
            "id": "2:13295:24286",
            "crate_id": 2,
            "name": "char_indices",
            "span": null,
            "visibility": "public",
            "docs": "Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```",
            "links": {
                "prim@char": "1:11826:471"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "CharIndices",
                                "id": "2:37751:7415",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13400:26757": {
            "id": "2:13400:26757",
            "crate_id": 2,
            "name": "escape_unicode",
            "span": null,
            "visibility": "public",
            "docs": "Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```",
            "links": {
                "`char::escape_unicode`": "2:5022:26757"
            },
            "attrs": [
                "#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "EscapeUnicode",
                                "id": "2:38092:7421",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:2719:2550": {
            "id": "2:2719:2550",
            "crate_id": 2,
            "name": "borrow",
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [
                "#[rustc_diagnostic_item = \"noop_method_borrow\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "generic": "T"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13268:2618": {
            "id": "2:13268:2618",
            "crate_id": 2,
            "name": "is_empty",
            "span": null,
            "visibility": "public",
            "docs": "Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```",
            "links": {},
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "primitive": "bool"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": true,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "5:5702:3007": {
            "id": "5:5702:3007",
            "crate_id": 5,
            "name": "repeat",
            "span": null,
            "visibility": "public",
            "docs": "Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```",
            "links": {
                "`String`": "5:7744:243"
            },
            "attrs": [
                "#[cfg(not(no_global_oom_handling))]",
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "n",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "String",
                                "id": "5:7744:243",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13287:26737": {
            "id": "2:13287:26737",
            "crate_id": 2,
            "name": "slice_unchecked",
            "span": null,
            "visibility": "public",
            "docs": "Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```",
            "links": {
                "`str`": "1:11832:1726",
                "str::slice_mut_unchecked": "2:13288:26738",
                "crate::ops::Index": "2:33357:2850"
            },
            "attrs": [
                "#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]",
                "#[must_use]"
            ],
            "deprecation": {
                "since": "1.29.0",
                "note": "use `get_unchecked(begin..end)` instead"
            },
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "begin",
                                {
                                    "primitive": "usize"
                                }
                            ],
                            [
                                "end",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": true,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "0:11:2313": {
            "id": "0:11:2313",
            "crate_id": 0,
            "name": "right",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    12,
                    4
                ],
                "end": [
                    12,
                    14
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "struct_field": {
                    "primitive": "u64"
                }
            }
        },
        "b:2:2990-0:9:2314": {
            "id": "b:2:2990-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            },
                            {
                                "name": "U",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "U"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "From",
                                                    "id": "2:2967:144",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "type": {
                                                                        "generic": "T"
                                                                    }
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Into",
                        "id": "2:2964:163",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "U"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:2993:2611"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "5:5684": {
            "id": "5:5684",
            "crate_id": 5,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": "Methods for string slices.",
            "links": {},
            "attrs": [
                "#[cfg(not(test))]"
            ],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": null,
                    "for": {
                        "primitive": "str"
                    },
                    "items": [
                        "5:5685:27452",
                        "5:5686:7749",
                        "5:5689:27453",
                        "5:5692:27454",
                        "5:5700:27455",
                        "5:5701:27456",
                        "5:5702:3007",
                        "5:5703:18685",
                        "5:5704:18686"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": null
                }
            }
        },
        "2:13266": {
            "id": "2:13266",
            "crate_id": 2,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [
                "#[cfg(not(test))]"
            ],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": null,
                    "for": {
                        "primitive": "str"
                    },
                    "items": [
                        "2:13267:1000",
                        "2:13268:2618",
                        "2:13269:26733",
                        "2:13270:26734",
                        "2:13272:26735",
                        "2:13275:20886",
                        "2:13276:26736",
                        "2:13277:336",
                        "2:13278:19611",
                        "2:13279:19607",
                        "2:13281:19608",
                        "2:13283:19609",
                        "2:13285:19610",
                        "2:13287:26737",
                        "2:13288:26738",
                        "2:13289:19634",
                        "2:13290:19635",
                        "2:13291:19638",
                        "2:13292:19639",
                        "2:13294:24184",
                        "2:13295:24286",
                        "2:13296:18281",
                        "2:13297:24193",
                        "2:13298:24190",
                        "2:13299:23545",
                        "2:13300:26739",
                        "2:13301:24185",
                        "2:13302:19652",
                        "2:13305:19653",
                        "2:13308:19654",
                        "2:13311:2659",
                        "2:13315:2617",
                        "2:13319:19640",
                        "2:13322:19642",
                        "2:13325:19644",
                        "2:13328:26740",
                        "2:13331:26741",
                        "2:13334:19646",
                        "2:13337:19648",
                        "2:13340:19650",
                        "2:13343:19651",
                        "2:13346:2565",
                        "2:13349:26742",
                        "2:13352:26743",
                        "2:13355:26744",
                        "2:13358:26745",
                        "2:13360:26746",
                        "2:13362:26747",
                        "2:13364:26748",
                        "2:13365:26749",
                        "2:13366:26750",
                        "2:13369:26751",
                        "2:13372:18415",
                        "2:13375:19655",
                        "2:13378:26752",
                        "2:13381:26753",
                        "2:13384:26754",
                        "2:13387:26755",
                        "2:13389:18683",
                        "2:13390:19426",
                        "2:13391:18687",
                        "2:13392:18688",
                        "2:13393:18689",
                        "2:13394:19429",
                        "2:13395:19430",
                        "2:13396:19431",
                        "2:13397:26756",
                        "2:13399:2767",
                        "2:13400:26757"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": null
                }
            }
        },
        "2:3834:1826": {
            "id": "2:3834:1826",
            "crate_id": 2,
            "name": "type_id",
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "TypeId",
                                "id": "2:33526:7476",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13275:20886": {
            "id": "2:13275:20886",
            "crate_id": 2,
            "name": "as_bytes",
            "span": null,
            "visibility": "public",
            "docs": "Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```",
            "links": {
                "`from_utf8`": "2:12515:7413"
            },
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "slice": {
                                        "primitive": "u8"
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": true,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13325:19644": {
            "id": "2:13325:19644",
            "crate_id": 2,
            "name": "rsplit",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```",
            "links": {
                "self::pattern": "2:12968:7409",
                "`DoubleEndedIterator`": "2:8342:129",
                "prim@char": "1:11826:471",
                "str::split": "2:13319:19640"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "RSplit",
                                "id": "2:37793:7394",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:2993:2611": {
            "id": "2:2993:2611",
            "crate_id": 2,
            "name": "into",
            "span": null,
            "visibility": "default",
            "docs": "Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.",
            "links": {
                "From": "2:2967:144"
            },
            "attrs": [
                "#[track_caller]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "generic": "Self"
                                }
                            ]
                        ],
                        "output": {
                            "generic": "U"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:2996:834": {
            "id": "2:2996:834",
            "crate_id": 2,
            "name": "from",
            "span": null,
            "visibility": "default",
            "docs": "Returns the argument unchanged.",
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "t",
                                {
                                    "generic": "T"
                                }
                            ]
                        ],
                        "output": {
                            "generic": "T"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13311:2659": {
            "id": "2:13311:2659",
            "crate_id": 2,
            "name": "find",
            "span": null,
            "visibility": "public",
            "docs": "Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```",
            "links": {
                "`None`": "2:35807:191",
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "primitive": "usize"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13397:26756": {
            "id": "2:13397:26756",
            "crate_id": 2,
            "name": "escape_debug",
            "span": null,
            "visibility": "public",
            "docs": "Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```",
            "links": {
                "`char::escape_debug`": "2:5024:26756"
            },
            "attrs": [
                "#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "EscapeDebug",
                                "id": "2:38074:7420",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "0:10:2312": {
            "id": "0:10:2312",
            "crate_id": 0,
            "name": "left",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    11,
                    4
                ],
                "end": [
                    11,
                    13
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "struct_field": {
                    "primitive": "u64"
                }
            }
        },
        "2:13334:19646": {
            "id": "2:13334:19646",
            "crate_id": 2,
            "name": "splitn",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409",
                "str::rsplitn": "2:13337:19648"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "n",
                                {
                                    "primitive": "usize"
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "SplitN",
                                "id": "2:37879:7398",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13391:18687": {
            "id": "2:13391:18687",
            "crate_id": 2,
            "name": "eq_ignore_ascii_case",
            "span": null,
            "visibility": "public",
            "docs": "Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```",
            "links": {},
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "other",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "primitive": "str"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "primitive": "bool"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13355:26744": {
            "id": "2:13355:26744",
            "crate_id": 2,
            "name": "rmatch_indices",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```",
            "links": {
                "self::pattern": "2:12968:7409",
                "`DoubleEndedIterator`": "2:8342:129",
                "prim@char": "1:11826:471",
                "str::match_indices": "2:13352:26743"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "RMatchIndices",
                                "id": "2:37943:7425",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13392:18688": {
            "id": "2:13392:18688",
            "crate_id": 2,
            "name": "make_ascii_uppercase",
            "span": null,
            "visibility": "public",
            "docs": "Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```",
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": null,
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "a:2:26043:237-0:4:2311": {
            "id": "a:2:26043:237-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Send",
                        "id": "2:26043:237",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "2:13343:19651": {
            "id": "2:13343:19651",
            "crate_id": 2,
            "name": "rsplit_once",
            "span": null,
            "visibility": "public",
            "docs": "Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```",
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "delimiter",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "tuple": [
                                                        {
                                                            "borrowed_ref": {
                                                                "lifetime": "'a",
                                                                "mutable": false,
                                                                "type": {
                                                                    "primitive": "str"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "borrowed_ref": {
                                                                "lifetime": "'a",
                                                                "mutable": false,
                                                                "type": {
                                                                    "primitive": "str"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "b:2:3005-0:4:2311": {
            "id": "b:2:3005-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            },
                            {
                                "name": "U",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "U"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Into",
                                                    "id": "2:2964:163",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "type": {
                                                                        "generic": "T"
                                                                    }
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "TryFrom",
                        "id": "2:2974:257",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "U"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:3008:137",
                        "2:3009:1811"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "b:2:3005-0:9:2314": {
            "id": "b:2:3005-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            },
                            {
                                "name": "U",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "U"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Into",
                                                    "id": "2:2964:163",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "type": {
                                                                        "generic": "T"
                                                                    }
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "TryFrom",
                        "id": "2:2974:257",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "U"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:3008:137",
                        "2:3009:1811"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "b:2:2720-0:4:2311": {
            "id": "b:2:2720-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "T"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Sized",
                                                    "id": "2:26044:2595",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "maybe"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "BorrowMut",
                        "id": "2:2714:103",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "T"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:2722:17921"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "2:13300:26739": {
            "id": "2:13300:26739",
            "crate_id": 2,
            "name": "lines_any",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over the lines of a string.",
            "links": {},
            "attrs": [
                "#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"
            ],
            "deprecation": {
                "since": "1.4.0",
                "note": "use lines() instead now"
            },
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "LinesAny",
                                "id": "2:38039:7423",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "0:5:2312": {
            "id": "0:5:2312",
            "crate_id": 0,
            "name": "left",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    4,
                    4
                ],
                "end": [
                    4,
                    13
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "struct_field": {
                    "primitive": "u64"
                }
            }
        },
        "5:5700:27455": {
            "id": "5:5700:27455",
            "crate_id": 5,
            "name": "to_uppercase",
            "span": null,
            "visibility": "public",
            "docs": "Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```",
            "links": {
                "`String`": "5:7744:243"
            },
            "attrs": [
                "#[cfg(not(no_global_oom_handling))]",
                "#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "String",
                                "id": "5:7744:243",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13279:19607": {
            "id": "2:13279:19607",
            "crate_id": 2,
            "name": "get",
            "span": null,
            "visibility": "public",
            "docs": "Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```",
            "links": {
                "`None`": "2:35807:191"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "i",
                                {
                                    "generic": "I"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "borrowed_ref": {
                                                        "lifetime": null,
                                                        "mutable": false,
                                                        "type": {
                                                            "qualified_path": {
                                                                "name": "Output",
                                                                "args": {
                                                                    "angle_bracketed": {
                                                                        "args": [],
                                                                        "bindings": []
                                                                    }
                                                                },
                                                                "self_type": {
                                                                    "generic": "I"
                                                                },
                                                                "trait": {
                                                                    "name": "SliceIndex",
                                                                    "id": "2:11056:239",
                                                                    "args": {
                                                                        "angle_bracketed": {
                                                                            "args": [
                                                                                {
                                                                                    "type": {
                                                                                        "primitive": "str"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "bindings": []
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "I",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "I"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "SliceIndex",
                                                    "id": "2:11056:239",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "type": {
                                                                        "primitive": "str"
                                                                    }
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "5:5686:7749": {
            "id": "5:5686:7749",
            "crate_id": 5,
            "name": "replace",
            "span": null,
            "visibility": "public",
            "docs": "Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```",
            "links": {
                "`String`": "5:7744:243"
            },
            "attrs": [
                "#[cfg(not(no_global_oom_handling))]",
                "#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "from",
                                {
                                    "generic": "P"
                                }
                            ],
                            [
                                "to",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "primitive": "str"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "String",
                                "id": "5:7744:243",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "a:2:26102:2596-0:4:2311": {
            "id": "a:2:26102:2596-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Unpin",
                        "id": "2:26102:2596",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "a:2:26043:237-0:9:2314": {
            "id": "a:2:26043:237-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Send",
                        "id": "2:26043:237",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "a:2:35899:2780-0:9:2314": {
            "id": "a:2:35899:2780-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "UnwindSafe",
                        "id": "2:35899:2780",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "2:13292:19639": {
            "id": "2:13292:19639",
            "crate_id": 2,
            "name": "split_at_mut_checked",
            "span": null,
            "visibility": "public",
            "docs": "Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```",
            "links": {
                "str::split_at_checked": "2:13291:19638"
            },
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "mid",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "tuple": [
                                                        {
                                                            "borrowed_ref": {
                                                                "lifetime": null,
                                                                "mutable": true,
                                                                "type": {
                                                                    "primitive": "str"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "borrowed_ref": {
                                                                "lifetime": null,
                                                                "mutable": true,
                                                                "type": {
                                                                    "primitive": "str"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13387:26755": {
            "id": "2:13387:26755",
            "crate_id": 2,
            "name": "parse",
            "span": null,
            "visibility": "public",
            "docs": "Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```",
            "links": {
                "FromStr::Err": "2:12929:136",
                "`FromStr`": "2:12928:2914"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Result",
                                "id": "2:35938:226",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "generic": "F"
                                                }
                                            },
                                            {
                                                "type": {
                                                    "qualified_path": {
                                                        "name": "Err",
                                                        "args": {
                                                            "angle_bracketed": {
                                                                "args": [],
                                                                "bindings": []
                                                            }
                                                        },
                                                        "self_type": {
                                                            "generic": "F"
                                                        },
                                                        "trait": {
                                                            "name": "FromStr",
                                                            "id": "2:12928:2914",
                                                            "args": {
                                                                "angle_bracketed": {
                                                                    "args": [],
                                                                    "bindings": []
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "F",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "F"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "FromStr",
                                                    "id": "2:12928:2914",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13269:26733": {
            "id": "2:13269:26733",
            "crate_id": 2,
            "name": "is_char_boundary",
            "span": null,
            "visibility": "public",
            "docs": "Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```",
            "links": {},
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "index",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "primitive": "bool"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13352:26743": {
            "id": "2:13352:26743",
            "crate_id": 2,
            "name": "match_indices",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```",
            "links": {
                "self::pattern": "2:12968:7409",
                "`DoubleEndedIterator`": "2:8342:129",
                "prim@char": "1:11826:471",
                "str::rmatch_indices": "2:13355:26744"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "MatchIndices",
                                "id": "2:37925:7424",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13390:19426": {
            "id": "2:13390:19426",
            "crate_id": 2,
            "name": "as_ascii",
            "span": null,
            "visibility": "public",
            "docs": "If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.",
            "links": {
                "`ascii::Char`": "2:33712:7547",
                "Self::is_ascii": "2:13389:18683"
            },
            "attrs": [
                "#[unstable(feature = \"ascii_char\", issue = \"110998\")]",
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "borrowed_ref": {
                                                        "lifetime": null,
                                                        "mutable": false,
                                                        "type": {
                                                            "slice": {
                                                                "resolved_path": {
                                                                    "name": "AsciiChar",
                                                                    "id": "2:33712:7547",
                                                                    "args": {
                                                                        "angle_bracketed": {
                                                                            "args": [],
                                                                            "bindings": []
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": true,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "0:0:2327": {
            "id": "0:0:2327",
            "crate_id": 0,
            "name": "usage",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    1,
                    0
                ],
                "end": [
                    40,
                    1
                ]
            },
            "visibility": "public",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "module": {
                    "is_crate": true,
                    "items": [
                        "0:4:2311",
                        "0:9:2314",
                        "0:14:2315"
                    ],
                    "is_stripped": false
                }
            }
        },
        "2:13277:336": {
            "id": "2:13277:336",
            "crate_id": 2,
            "name": "as_ptr",
            "span": null,
            "visibility": "public",
            "docs": "Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```",
            "links": {
                "str::as_mut_ptr": "2:13278:19611",
                "`u8`": "1:11845:1856"
            },
            "attrs": [
                "#[rustc_never_returns_null_ptr]",
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "raw_pointer": {
                                "mutable": false,
                                "type": {
                                    "primitive": "u8"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": true,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "a:2:3213:247-0:9:2314": {
            "id": "a:2:3213:247-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Sync",
                        "id": "2:3213:247",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "5:5701:27456": {
            "id": "5:5701:27456",
            "crate_id": 5,
            "name": "into_string",
            "span": null,
            "visibility": "public",
            "docs": "Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```",
            "links": {
                "`Box<str>`": "5:306:2597",
                "`String`": "5:7744:243"
            },
            "attrs": [
                "#[must_use = \"`self` will be dropped if the result is not used\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "resolved_path": {
                                        "name": "Box",
                                        "id": "5:306:2597",
                                        "args": {
                                            "angle_bracketed": {
                                                "args": [
                                                    {
                                                        "type": {
                                                            "primitive": "str"
                                                        }
                                                    }
                                                ],
                                                "bindings": []
                                            }
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "String",
                                "id": "5:7744:243",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13384:26754": {
            "id": "2:13384:26754",
            "crate_id": 2,
            "name": "trim_right_matches",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [
                "#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"
            ],
            "deprecation": {
                "since": "1.33.0",
                "note": "superseded by `trim_end_matches`"
            },
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": "'a",
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13285:19610": {
            "id": "2:13285:19610",
            "crate_id": 2,
            "name": "get_unchecked_mut",
            "span": null,
            "visibility": "public",
            "docs": "Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```",
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "i",
                                {
                                    "generic": "I"
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": true,
                                "type": {
                                    "qualified_path": {
                                        "name": "Output",
                                        "args": {
                                            "angle_bracketed": {
                                                "args": [],
                                                "bindings": []
                                            }
                                        },
                                        "self_type": {
                                            "generic": "I"
                                        },
                                        "trait": {
                                            "name": "SliceIndex",
                                            "id": "2:11056:239",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [
                                                        {
                                                            "type": {
                                                                "primitive": "str"
                                                            }
                                                        }
                                                    ],
                                                    "bindings": []
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "I",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "I"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "SliceIndex",
                                                    "id": "2:11056:239",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "type": {
                                                                        "primitive": "str"
                                                                    }
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": true,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13298:24190": {
            "id": "2:13298:24190",
            "crate_id": 2,
            "name": "split_ascii_whitespace",
            "span": null,
            "visibility": "public",
            "docs": "Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```",
            "links": {
                "str::split_whitespace": "2:13297:24193"
            },
            "attrs": [
                "#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "SplitAsciiWhitespace",
                                "id": "2:38058:7411",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "b:2:2994-0:4:2311": {
            "id": "b:2:2994-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "From",
                        "id": "2:2967:144",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "T"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:2996:834"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "a:2:3248:7738-0:4:2311": {
            "id": "a:2:3248:7738-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Freeze",
                        "id": "2:3248:7738",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "2:13340:19650": {
            "id": "2:13340:19650",
            "crate_id": 2,
            "name": "split_once",
            "span": null,
            "visibility": "public",
            "docs": "Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```",
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "delimiter",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "tuple": [
                                                        {
                                                            "borrowed_ref": {
                                                                "lifetime": "'a",
                                                                "mutable": false,
                                                                "type": {
                                                                    "primitive": "str"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "borrowed_ref": {
                                                                "lifetime": "'a",
                                                                "mutable": false,
                                                                "type": {
                                                                    "primitive": "str"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "b:2:3832-0:4:2311": {
            "id": "b:2:3832-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "T"
                                    },
                                    "bounds": [
                                        {
                                            "outlives": "'static"
                                        },
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Sized",
                                                    "id": "2:26044:2595",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "maybe"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Any",
                        "id": "2:3830:70",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:3834:1826"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "0:14:2315": {
            "id": "0:14:2315",
            "crate_id": 0,
            "name": "it_works",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    17,
                    0
                ],
                "end": [
                    28,
                    1
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [],
                        "output": null,
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:3003:137": {
            "id": "2:3003:137",
            "crate_id": 2,
            "name": "Error",
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "assoc_type": {
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "bounds": [],
                    "default": {
                        "qualified_path": {
                            "name": "Error",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            },
                            "self_type": {
                                "generic": "U"
                            },
                            "trait": {
                                "name": "TryFrom",
                                "id": "2:2974:257",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "generic": "T"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "2:13396:19431": {
            "id": "2:13396:19431",
            "crate_id": 2,
            "name": "trim_ascii",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```",
            "links": {
                "u8::is_ascii_whitespace": "2:1061:32914"
            },
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": true,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "b:2:2717-0:4:2311": {
            "id": "b:2:2717-0:4:2311",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "T"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Sized",
                                                    "id": "2:26044:2595",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "maybe"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "Borrow",
                        "id": "2:2711:102",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "T"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test",
                            "id": "0:4:2311",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:2719:2550"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        },
        "2:13369:26751": {
            "id": "2:13369:26751",
            "crate_id": 2,
            "name": "trim_start_matches",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": "'a",
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "0:6:2313": {
            "id": "0:6:2313",
            "crate_id": 0,
            "name": "right",
            "span": {
                "filename": "crates/usage/src/lib.rs",
                "begin": [
                    5,
                    4
                ],
                "end": [
                    5,
                    14
                ]
            },
            "visibility": "crate",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "struct_field": {
                    "primitive": "u64"
                }
            }
        },
        "2:13328:26740": {
            "id": "2:13328:26740",
            "crate_id": 2,
            "name": "split_terminator",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```",
            "links": {
                "self::pattern": "2:12968:7409",
                "str::split": "2:13319:19640",
                "prim@char": "1:11826:471",
                "`DoubleEndedIterator`": "2:8342:129",
                "str::rsplit_terminator": "2:13331:26741"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "SplitTerminator",
                                "id": "2:37825:7429",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13319:19640": {
            "id": "2:13319:19640",
            "crate_id": 2,
            "name": "split",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace",
            "links": {
                "self::pattern": "2:12968:7409",
                "`DoubleEndedIterator`": "2:8342:129",
                "prim@char": "1:11826:471",
                "str::split_whitespace": "2:13297:24193",
                "str::rsplit": "2:13325:19644"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Split",
                                "id": "2:37775:2983",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13378:26752": {
            "id": "2:13378:26752",
            "crate_id": 2,
            "name": "trim_end_matches",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [
                "#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": "'a",
                                "mutable": false,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13289:19634": {
            "id": "2:13289:19634",
            "crate_id": 2,
            "name": "split_at",
            "span": null,
            "visibility": "public",
            "docs": "Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```",
            "links": {
                "str::split_at_checked": "2:13291:19638",
                "str::split_at_mut": "2:13290:19635"
            },
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "mid",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "tuple": [
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "primitive": "str"
                                        }
                                    }
                                },
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "primitive": "str"
                                        }
                                    }
                                }
                            ]
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "5:5704:18686": {
            "id": "5:5704:18686",
            "crate_id": 5,
            "name": "to_ascii_lowercase",
            "span": null,
            "visibility": "public",
            "docs": "Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase",
            "links": {
                "str::make_ascii_lowercase": "2:13393:18689"
            },
            "attrs": [
                "#[cfg(not(no_global_oom_handling))]",
                "#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "String",
                                "id": "5:7744:243",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "5:5703:18685": {
            "id": "5:5703:18685",
            "crate_id": 5,
            "name": "to_ascii_uppercase",
            "span": null,
            "visibility": "public",
            "docs": "Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase",
            "links": {
                "str::make_ascii_uppercase": "2:13392:18688"
            },
            "attrs": [
                "#[cfg(not(no_global_oom_handling))]",
                "#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "String",
                                "id": "5:7744:243",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13322:19642": {
            "id": "2:13322:19642",
            "crate_id": 2,
            "name": "split_inclusive",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "SplitInclusive",
                                "id": "2:12783:7400",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'a"
                                            },
                                            {
                                                "type": {
                                                    "generic": "P"
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13375:19655": {
            "id": "2:13375:19655",
            "crate_id": 2,
            "name": "strip_suffix",
            "span": null,
            "visibility": "public",
            "docs": "Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [
                "#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "suffix",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Option",
                                "id": "2:35805:194",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "type": {
                                                    "borrowed_ref": {
                                                        "lifetime": "'a",
                                                        "mutable": false,
                                                        "type": {
                                                            "primitive": "str"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "5:5689:27453": {
            "id": "5:5689:27453",
            "crate_id": 5,
            "name": "replacen",
            "span": null,
            "visibility": "public",
            "docs": "Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```",
            "links": {
                "`String`": "5:7744:243"
            },
            "attrs": [
                "#[cfg(not(no_global_oom_handling))]",
                "#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ],
                            [
                                "to",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "primitive": "str"
                                        }
                                    }
                                }
                            ],
                            [
                                "count",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "String",
                                "id": "5:7744:243",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13288:26738": {
            "id": "2:13288:26738",
            "crate_id": 2,
            "name": "slice_mut_unchecked",
            "span": null,
            "visibility": "public",
            "docs": "Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.",
            "links": {
                "`str`": "1:11832:1726",
                "crate::ops::IndexMut": "2:3491:2851",
                "str::slice_unchecked": "2:13287:26737"
            },
            "attrs": [
                "#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"
            ],
            "deprecation": {
                "since": "1.29.0",
                "note": "use `get_unchecked_mut(begin..end)` instead"
            },
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "begin",
                                {
                                    "primitive": "usize"
                                }
                            ],
                            [
                                "end",
                                {
                                    "primitive": "usize"
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": true,
                                "type": {
                                    "primitive": "str"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": true,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13283:19609": {
            "id": "2:13283:19609",
            "crate_id": 2,
            "name": "get_unchecked",
            "span": null,
            "visibility": "public",
            "docs": "Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```",
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "i",
                                {
                                    "generic": "I"
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": false,
                                "type": {
                                    "qualified_path": {
                                        "name": "Output",
                                        "args": {
                                            "angle_bracketed": {
                                                "args": [],
                                                "bindings": []
                                            }
                                        },
                                        "self_type": {
                                            "generic": "I"
                                        },
                                        "trait": {
                                            "name": "SliceIndex",
                                            "id": "2:11056:239",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [
                                                        {
                                                            "type": {
                                                                "primitive": "str"
                                                            }
                                                        }
                                                    ],
                                                    "bindings": []
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "I",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "I"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "SliceIndex",
                                                    "id": "2:11056:239",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "type": {
                                                                        "primitive": "str"
                                                                    }
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": true,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13296:18281": {
            "id": "2:13296:18281",
            "crate_id": 2,
            "name": "bytes",
            "span": null,
            "visibility": "public",
            "docs": "An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```",
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "resolved_path": {
                                "name": "Bytes",
                                "id": "2:37761:2982",
                                "args": {
                                    "angle_bracketed": {
                                        "args": [
                                            {
                                                "lifetime": "'_"
                                            }
                                        ],
                                        "bindings": []
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13302:19652": {
            "id": "2:13302:19652",
            "crate_id": 2,
            "name": "contains",
            "span": null,
            "visibility": "public",
            "docs": "Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "primitive": "bool"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:13276:26736": {
            "id": "2:13276:26736",
            "crate_id": 2,
            "name": "as_bytes_mut",
            "span": null,
            "visibility": "public",
            "docs": "Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```",
            "links": {},
            "attrs": [
                "#[must_use]"
            ],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": true,
                                "type": {
                                    "slice": {
                                        "primitive": "u8"
                                    }
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": true,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:3008:137": {
            "id": "2:3008:137",
            "crate_id": 2,
            "name": "Error",
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "assoc_type": {
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "bounds": [],
                    "default": {
                        "resolved_path": {
                            "name": "Infallible",
                            "id": "2:25967:3157",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    }
                }
            }
        },
        "a:2:35900:3123-0:9:2314": {
            "id": "a:2:35900:3123-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "RefUnwindSafe",
                        "id": "2:35900:3123",
                        "args": {
                            "angle_bracketed": {
                                "args": [],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [],
                    "negative": false,
                    "synthetic": true,
                    "blanket_impl": null
                }
            }
        },
        "2:13308:19654": {
            "id": "2:13308:19654",
            "crate_id": 2,
            "name": "ends_with",
            "span": null,
            "visibility": "public",
            "docs": "Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```",
            "links": {
                "prim@char": "1:11826:471",
                "self::pattern": "2:12968:7409"
            },
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": "'a",
                                        "mutable": false,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ],
                            [
                                "pat",
                                {
                                    "generic": "P"
                                }
                            ]
                        ],
                        "output": {
                            "primitive": "bool"
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [
                            {
                                "name": "'a",
                                "kind": {
                                    "lifetime": {
                                        "outlives": []
                                    }
                                }
                            },
                            {
                                "name": "P",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "P"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Pattern",
                                                    "id": "2:12974:7405",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            },
                            {
                                "bound_predicate": {
                                    "type": {
                                        "qualified_path": {
                                            "name": "Searcher",
                                            "args": {
                                                "angle_bracketed": {
                                                    "args": [],
                                                    "bindings": []
                                                }
                                            },
                                            "self_type": {
                                                "generic": "P"
                                            },
                                            "trait": {
                                                "name": "Pattern",
                                                "id": "2:12974:7405",
                                                "args": {
                                                    "angle_bracketed": {
                                                        "args": [
                                                            {
                                                                "lifetime": "'a"
                                                            }
                                                        ],
                                                        "bindings": []
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "ReverseSearcher",
                                                    "id": "2:12989:7406",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [
                                                                {
                                                                    "lifetime": "'a"
                                                                }
                                                            ],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "none"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "2:2722:17921": {
            "id": "2:2722:17921",
            "crate_id": 2,
            "name": "borrow_mut",
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "function": {
                    "decl": {
                        "inputs": [
                            [
                                "self",
                                {
                                    "borrowed_ref": {
                                        "lifetime": null,
                                        "mutable": true,
                                        "type": {
                                            "generic": "Self"
                                        }
                                    }
                                }
                            ]
                        ],
                        "output": {
                            "borrowed_ref": {
                                "lifetime": null,
                                "mutable": true,
                                "type": {
                                    "generic": "T"
                                }
                            }
                        },
                        "c_variadic": false
                    },
                    "generics": {
                        "params": [],
                        "where_predicates": []
                    },
                    "header": {
                        "const": false,
                        "unsafe": false,
                        "async": false,
                        "abi": "Rust"
                    },
                    "has_body": true
                }
            }
        },
        "b:2:2720-0:9:2314": {
            "id": "b:2:2720-0:9:2314",
            "crate_id": 0,
            "name": null,
            "span": null,
            "visibility": "default",
            "docs": null,
            "links": {},
            "attrs": [],
            "deprecation": null,
            "inner": {
                "impl": {
                    "is_unsafe": false,
                    "generics": {
                        "params": [
                            {
                                "name": "T",
                                "kind": {
                                    "type": {
                                        "bounds": [],
                                        "default": null,
                                        "synthetic": false
                                    }
                                }
                            }
                        ],
                        "where_predicates": [
                            {
                                "bound_predicate": {
                                    "type": {
                                        "generic": "T"
                                    },
                                    "bounds": [
                                        {
                                            "trait_bound": {
                                                "trait": {
                                                    "name": "Sized",
                                                    "id": "2:26044:2595",
                                                    "args": {
                                                        "angle_bracketed": {
                                                            "args": [],
                                                            "bindings": []
                                                        }
                                                    }
                                                },
                                                "generic_params": [],
                                                "modifier": "maybe"
                                            }
                                        }
                                    ],
                                    "generic_params": []
                                }
                            }
                        ]
                    },
                    "provided_trait_methods": [],
                    "trait": {
                        "name": "BorrowMut",
                        "id": "2:2714:103",
                        "args": {
                            "angle_bracketed": {
                                "args": [
                                    {
                                        "type": {
                                            "generic": "T"
                                        }
                                    }
                                ],
                                "bindings": []
                            }
                        }
                    },
                    "for": {
                        "resolved_path": {
                            "name": "Test2",
                            "id": "0:9:2314",
                            "args": {
                                "angle_bracketed": {
                                    "args": [],
                                    "bindings": []
                                }
                            }
                        }
                    },
                    "items": [
                        "2:2722:17921"
                    ],
                    "negative": false,
                    "synthetic": false,
                    "blanket_impl": {
                        "generic": "T"
                    }
                }
            }
        }
    },
    "paths": {
        "2:38350:7445": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "StrSearcherImpl"
            ],
            "kind": "enum"
        },
        "1:8040:127": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "DirBuilder"
            ],
            "kind": "struct"
        },
        "2:44916:4252": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint32x2x2_t"
            ],
            "kind": "struct"
        },
        "2:13735:7551": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "poll_fn",
                "PollFn"
            ],
            "kind": "struct"
        },
        "2:45156:4276": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly64x1x2_t"
            ],
            "kind": "struct"
        },
        "2:4452:24608": {
            "crate_id": 2,
            "path": [
                "core",
                "asserting",
                "TryCaptureWithDebug"
            ],
            "kind": "struct"
        },
        "16:6504:12759": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "aranges",
                "ArangeHeader"
            ],
            "kind": "struct"
        },
        "1:11833:1816": {
            "crate_id": 1,
            "path": [
                "std",
                "tuple"
            ],
            "kind": "primitive"
        },
        "16:6300:12745": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "dwarf",
                "DwarfPackage"
            ],
            "kind": "struct"
        },
        "1:11843:906": {
            "crate_id": 1,
            "path": [
                "std",
                "i64"
            ],
            "kind": "primitive"
        },
        "2:30078:7771": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "Shr"
            ],
            "kind": "trait"
        },
        "2:3439:7316": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "deref",
                "DerefPure"
            ],
            "kind": "trait"
        },
        "2:11334:7389": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "SplitMut"
            ],
            "kind": "struct"
        },
        "2:12706:7924": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "SplitNInternal"
            ],
            "kind": "struct"
        },
        "6:3648:11281": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ip_mreqn"
            ],
            "kind": "struct"
        },
        "17:15376:17320": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageResourceDirectoryString"
            ],
            "kind": "struct"
        },
        "16:5756:12725": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "EhHdrTableIter"
            ],
            "kind": "struct"
        },
        "1:10291:3000": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "stdio",
                "Stderr"
            ],
            "kind": "struct"
        },
        "2:33374:213": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "range",
                "RangeFull"
            ],
            "kind": "struct"
        },
        "1:5586:3152": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "Termination"
            ],
            "kind": "trait"
        },
        "17:13146:13201": {
            "crate_id": 17,
            "path": [
                "object",
                "archive",
                "AixFileHeader"
            ],
            "kind": "struct"
        },
        "6:4766:11369": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "pthread_cond_t"
            ],
            "kind": "struct"
        },
        "17:11016:12940": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "archive",
                "ArchiveMemberIterator"
            ],
            "kind": "struct"
        },
        "17:13797:16523": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "MachHeader32"
            ],
            "kind": "struct"
        },
        "5:6785:2622": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "into_iter",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "16:6353:12748": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "endian_slice",
                "EndianSlice"
            ],
            "kind": "struct"
        },
        "5:7057:7472": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "in_place_drop",
                "InPlaceDrop"
            ],
            "kind": "struct"
        },
        "17:2037:12993": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "symbol",
                "ElfSymbolIterator"
            ],
            "kind": "struct"
        },
        "6:584:8547": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "linger"
            ],
            "kind": "struct"
        },
        "2:46076:23989": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "m32x4"
            ],
            "kind": "struct"
        },
        "2:10406:7347": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "LowerHex"
            ],
            "kind": "trait"
        },
        "2:44655:4226": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly8x16x3_t"
            ],
            "kind": "struct"
        },
        "5:7033:7471": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "set_len_on_drop",
                "SetLenOnDrop"
            ],
            "kind": "struct"
        },
        "1:11384:3030": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "net",
                "TcpListener"
            ],
            "kind": "struct"
        },
        "2:37581:7384": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "Chunks"
            ],
            "kind": "struct"
        },
        "16:8093:12815": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "AttrsIter"
            ],
            "kind": "struct"
        },
        "2:3462:142": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "function",
                "FnOnce"
            ],
            "kind": "trait"
        },
        "5:894:101": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "binary_heap",
                "BinaryHeap"
            ],
            "kind": "struct"
        },
        "11:1064:11707": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "EntryRef"
            ],
            "kind": "enum"
        },
        "17:13538:16040": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Verneed"
            ],
            "kind": "struct"
        },
        "1:11205:3160": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "process",
                "CommandEnvs"
            ],
            "kind": "struct"
        },
        "18:615:17549": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "SearcherRevKind"
            ],
            "kind": "enum"
        },
        "2:38695:164": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "into_future",
                "IntoFuture"
            ],
            "kind": "trait"
        },
        "2:38489:7910": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "LinesMap"
            ],
            "kind": "struct"
        },
        "5:7524:2838": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "UnorderedKeyError"
            ],
            "kind": "struct"
        },
        "6:4156:11319": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "load_command"
            ],
            "kind": "struct"
        },
        "2:16884:24131": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroU8Inner"
            ],
            "kind": "struct"
        },
        "2:36903:73": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "rt",
                "Argument"
            ],
            "kind": "struct"
        },
        "1:10726:162": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "time",
                "Instant"
            ],
            "kind": "struct"
        },
        "2:9868:91": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicPtr"
            ],
            "kind": "struct"
        },
        "16:2572:11806": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugLocListsBase"
            ],
            "kind": "struct"
        },
        "17:11877:13057": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "load_command",
                "LoadCommandIterator"
            ],
            "kind": "struct"
        },
        "16:6079:12740": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "UnwindTableRow"
            ],
            "kind": "struct"
        },
        "1:7757:18534": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace_rs",
                "Bomb"
            ],
            "kind": "struct"
        },
        "16:2338:11795": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "Encoding"
            ],
            "kind": "struct"
        },
        "11:2420:2622": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "table",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "17:12433:12887": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "relocation",
                "Relocation"
            ],
            "kind": "struct"
        },
        "2:38402:7431": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "lossy",
                "Utf8Chunks"
            ],
            "kind": "struct"
        },
        "1:6957:3230": {
            "crate_id": 1,
            "path": [
                "std",
                "std_float",
                "StdFloat"
            ],
            "kind": "trait"
        },
        "2:10414:7346": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "UpperExp"
            ],
            "kind": "trait"
        },
        "2:11252:2983": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "Split"
            ],
            "kind": "struct"
        },
        "1:1107:2814": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "OccupiedError"
            ],
            "kind": "struct"
        },
        "6:504:8537": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "utimbuf"
            ],
            "kind": "struct"
        },
        "2:33712:7547": {
            "crate_id": 2,
            "path": [
                "core",
                "ascii",
                "ascii_char",
                "AsciiChar"
            ],
            "kind": "enum"
        },
        "6:3642:11280": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ip_mreq"
            ],
            "kind": "struct"
        },
        "17:13211:16019": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "FileHeader64"
            ],
            "kind": "struct"
        },
        "6:5004:11391": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "__c_anonymous_ifr_ifru"
            ],
            "kind": "union"
        },
        "6:1032:8945": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "sockaddr"
            ],
            "kind": "struct"
        },
        "2:33357:2850": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "index",
                "Index"
            ],
            "kind": "trait"
        },
        "6:4687:11364": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "shmid_ds"
            ],
            "kind": "struct"
        },
        "1:9187:3177": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mutex",
                "MappedMutexGuard"
            ],
            "kind": "struct"
        },
        "2:35978:2797": {
            "crate_id": 2,
            "path": [
                "core",
                "result",
                "Iter"
            ],
            "kind": "struct"
        },
        "2:44260:4191": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly16x4_t"
            ],
            "kind": "struct"
        },
        "5:1395:2813": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "entry",
                "VacantEntry"
            ],
            "kind": "struct"
        },
        "16:6494:12758": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "aranges",
                "ArangeHeaderIter"
            ],
            "kind": "struct"
        },
        "2:26102:2596": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "Unpin"
            ],
            "kind": "trait"
        },
        "5:3875:2836": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "linked_list",
                "CursorMut"
            ],
            "kind": "struct"
        },
        "6:3706:3107": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "stat"
            ],
            "kind": "struct"
        },
        "1:944:2803": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "ValuesMut"
            ],
            "kind": "struct"
        },
        "9:480:11584": {
            "crate_id": 9,
            "path": [
                "miniz_oxide",
                "DataFormat"
            ],
            "kind": "enum"
        },
        "1:8298:2943": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "IoSlice"
            ],
            "kind": "struct"
        },
        "2:45924:3251": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i16x8"
            ],
            "kind": "struct"
        },
        "17:15760:17347": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageFunctionEntry"
            ],
            "kind": "struct"
        },
        "17:13497:16037": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Versym"
            ],
            "kind": "struct"
        },
        "2:44785:4239": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint16x8x4_t"
            ],
            "kind": "struct"
        },
        "5:2357:26505": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "navigate",
                "LazyLeafHandle"
            ],
            "kind": "enum"
        },
        "1:8159:2996": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "error",
                "ErrorKind"
            ],
            "kind": "enum"
        },
        "17:12089:13059": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "section",
                "MachOSectionInternal"
            ],
            "kind": "struct"
        },
        "6:4388:11345": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "vnode_info"
            ],
            "kind": "struct"
        },
        "2:10408:7348": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "UpperHex"
            ],
            "kind": "trait"
        },
        "16:6385:12749": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "reader",
                "ReaderOffsetId"
            ],
            "kind": "struct"
        },
        "1:1481:156": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "set",
                "HashSet"
            ],
            "kind": "struct"
        },
        "2:46721:3294": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u32x16"
            ],
            "kind": "struct"
        },
        "5:1496:99": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "BTreeMap"
            ],
            "kind": "struct"
        },
        "2:44238:4189": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int16x4_t"
            ],
            "kind": "struct"
        },
        "5:4536:2963": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "write_iter_wrapping",
                "Guard"
            ],
            "kind": "struct"
        },
        "14:0:2453": {
            "crate_id": 14,
            "path": [
                "rustc_demangle"
            ],
            "kind": "module"
        },
        "16:3029:11825": {
            "crate_id": 16,
            "path": [
                "gimli",
                "arch",
                "Arm"
            ],
            "kind": "struct"
        },
        "2:35767:3025": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "socket_addr",
                "SocketAddrV4"
            ],
            "kind": "struct"
        },
        "2:46294:3258": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i32x8"
            ],
            "kind": "struct"
        },
        "6:4312:11337": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_affinity_policy"
            ],
            "kind": "struct"
        },
        "5:1625:2805": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "IntoValues"
            ],
            "kind": "struct"
        },
        "5:7592:2622": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "into_iter",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "17:14189:16547": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DylibModule32"
            ],
            "kind": "struct"
        },
        "16:2854:11819": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugFrameOffset"
            ],
            "kind": "struct"
        },
        "2:35824:173": {
            "crate_id": 2,
            "path": [
                "core",
                "option",
                "Item"
            ],
            "kind": "struct"
        },
        "2:2772:134": {
            "crate_id": 2,
            "path": [
                "core",
                "cmp",
                "Eq"
            ],
            "kind": "trait"
        },
        "17:13089:13199": {
            "crate_id": 17,
            "path": [
                "object",
                "archive",
                "Header"
            ],
            "kind": "struct"
        },
        "1:8369:3028": {
            "crate_id": 1,
            "path": [
                "std",
                "net",
                "tcp",
                "IntoIncoming"
            ],
            "kind": "struct"
        },
        "17:11715:13047": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "attributes",
                "AttributesSubsection"
            ],
            "kind": "struct"
        },
        "2:4574:7508": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "lazy",
                "LazyCell"
            ],
            "kind": "struct"
        },
        "2:33449:214": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "range",
                "RangeInclusive"
            ],
            "kind": "struct"
        },
        "2:37734:7419": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "error",
                "ParseBoolError"
            ],
            "kind": "struct"
        },
        "6:3774:11290": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "stack_t"
            ],
            "kind": "struct"
        },
        "2:45738:3250": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i16x4"
            ],
            "kind": "struct"
        },
        "16:2548:11805": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "LocationListsOffset"
            ],
            "kind": "struct"
        },
        "16:6634:12767": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "DebugLine"
            ],
            "kind": "struct"
        },
        "17:13959:16532": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "FvmlibCommand"
            ],
            "kind": "struct"
        },
        "1:10801:2916": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "os_str",
                "bytes",
                "Slice"
            ],
            "kind": "struct"
        },
        "6:3812:11295": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "radvisory"
            ],
            "kind": "struct"
        },
        "16:2788:11816": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugStrOffsetsIndex"
            ],
            "kind": "struct"
        },
        "2:34130:7492": {
            "crate_id": 2,
            "path": [
                "core",
                "async_iter",
                "from_iter",
                "FromIter"
            ],
            "kind": "struct"
        },
        "2:16411:3362": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "cmp",
                "eq",
                "SimdPartialEq"
            ],
            "kind": "trait"
        },
        "2:44575:4218": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint8x8x4_t"
            ],
            "kind": "struct"
        },
        "16:3669:11830": {
            "crate_id": 16,
            "path": [
                "gimli",
                "arch",
                "X86_64"
            ],
            "kind": "struct"
        },
        "16:6802:11738": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "LineSequence"
            ],
            "kind": "struct"
        },
        "11:1105:11708": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "OccupiedEntryRef"
            ],
            "kind": "struct"
        },
        "16:7144:12784": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "DieReference"
            ],
            "kind": "enum"
        },
        "17:16165:17518": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "FunAux32"
            ],
            "kind": "struct"
        },
        "1:4975:3111": {
            "crate_id": 1,
            "path": [
                "std",
                "panic",
                "always_abort"
            ],
            "kind": "function"
        },
        "2:44515:4212": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int8x8x4_t"
            ],
            "kind": "struct"
        },
        "17:12422:13150": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "relocation",
                "RelocationIterator"
            ],
            "kind": "struct"
        },
        "11:2545:28681": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "bitmask",
                "BitMaskIter"
            ],
            "kind": "struct"
        },
        "1:894:2622": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "5:7721:2898": {
            "crate_id": 5,
            "path": [
                "alloc",
                "ffi",
                "c_str",
                "IntoStringError"
            ],
            "kind": "struct"
        },
        "18:435:17563": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "rarebytes",
                "RareNeedleBytes"
            ],
            "kind": "struct"
        },
        "17:13424:16032": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Rela64"
            ],
            "kind": "struct"
        },
        "1:8344:2982": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "Bytes"
            ],
            "kind": "struct"
        },
        "11:1900:2815": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "Intersection"
            ],
            "kind": "struct"
        },
        "1:373:2763": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "scoped",
                "Scope"
            ],
            "kind": "struct"
        },
        "2:44487:4209": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly64x2_t"
            ],
            "kind": "struct"
        },
        "2:3456:140": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "function",
                "Fn"
            ],
            "kind": "trait"
        },
        "1:4374:3086": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "net",
                "listener",
                "UnixListener"
            ],
            "kind": "struct"
        },
        "1:11824:417": {
            "crate_id": 1,
            "path": [
                "std",
                "bool"
            ],
            "kind": "primitive"
        },
        "2:2714:103": {
            "crate_id": 2,
            "path": [
                "core",
                "borrow",
                "BorrowMut"
            ],
            "kind": "trait"
        },
        "1:1075:2811": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "Entry"
            ],
            "kind": "enum"
        },
        "17:15168:17301": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageAuxSymbolWeak"
            ],
            "kind": "struct"
        },
        "1:8918:3154": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "ExitStatus"
            ],
            "kind": "struct"
        },
        "6:4839:11377": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "time_value_t"
            ],
            "kind": "struct"
        },
        "2:17005:23980": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroIsizeInner"
            ],
            "kind": "struct"
        },
        "2:34439:2942": {
            "crate_id": 2,
            "path": [
                "core",
                "io",
                "borrowed_buf",
                "BorrowedCursor"
            ],
            "kind": "struct"
        },
        "2:34629:7729": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "scan",
                "Scan"
            ],
            "kind": "struct"
        },
        "2:13889:3377": {
            "crate_id": 2,
            "path": [
                "core",
                "task",
                "wake",
                "Waker"
            ],
            "kind": "struct"
        },
        "2:16524:24591": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "bignum",
                "Big32x40"
            ],
            "kind": "struct"
        },
        "6:4340:11207": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "mstats"
            ],
            "kind": "struct"
        },
        "17:15390:17322": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageResourceDataEntry"
            ],
            "kind": "struct"
        },
        "2:16630:24047": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "dec2flt",
                "common",
                "BiasedFp"
            ],
            "kind": "struct"
        },
        "17:14855:17284": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageFileHeader"
            ],
            "kind": "struct"
        },
        "2:5267:435": {
            "crate_id": 2,
            "path": [
                "core",
                "ffi",
                "c_void"
            ],
            "kind": "enum"
        },
        "1:6603:3182": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "poison",
                "PoisonError"
            ],
            "kind": "struct"
        },
        "1:5765:3174": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "barrier",
                "Barrier"
            ],
            "kind": "struct"
        },
        "1:3608:2944": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "IoSliceMut"
            ],
            "kind": "struct"
        },
        "11:772:2799": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "Keys"
            ],
            "kind": "struct"
        },
        "17:14977:17290": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageNtHeaders32"
            ],
            "kind": "struct"
        },
        "17:15289:17312": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageTlsDirectory64"
            ],
            "kind": "struct"
        },
        "1:4299:3085": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "net",
                "datagram",
                "UnixDatagram"
            ],
            "kind": "struct"
        },
        "2:4364:2963": {
            "crate_id": 2,
            "path": [
                "core",
                "array",
                "Guard"
            ],
            "kind": "struct"
        },
        "16:7695:12803": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "rnglists",
                "RawRange"
            ],
            "kind": "struct"
        },
        "2:44208:4186": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint8x8_t"
            ],
            "kind": "struct"
        },
        "2:46265:3252": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i16x16"
            ],
            "kind": "struct"
        },
        "2:34535:7722": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "filter_map",
                "FilterMap"
            ],
            "kind": "struct"
        },
        "17:15249:17308": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageExportDirectory"
            ],
            "kind": "struct"
        },
        "17:11524:13039": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "comdat",
                "ElfComdatSectionIterator"
            ],
            "kind": "struct"
        },
        "17:11497:12986": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "comdat",
                "ElfComdatIterator"
            ],
            "kind": "struct"
        },
        "14:31:11720": {
            "crate_id": 14,
            "path": [
                "rustc_demangle",
                "v0",
                "Demangle"
            ],
            "kind": "struct"
        },
        "2:15537:3232": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "lane_count",
                "LaneCount"
            ],
            "kind": "struct"
        },
        "16:7052:12782": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "loclists",
                "LocListIter"
            ],
            "kind": "struct"
        },
        "9:500:11588": {
            "crate_id": 9,
            "path": [
                "miniz_oxide",
                "StreamResult"
            ],
            "kind": "struct"
        },
        "16:6872:12774": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "CompleteLineProgram"
            ],
            "kind": "struct"
        },
        "17:15266:17309": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageImportByName"
            ],
            "kind": "struct"
        },
        "16:6948:12777": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "loclists",
                "DebugLoc"
            ],
            "kind": "struct"
        },
        "6:3889:11301": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ifa_msghdr"
            ],
            "kind": "struct"
        },
        "17:14933:17288": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageOptionalHeader64"
            ],
            "kind": "struct"
        },
        "2:3585:211": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "range",
                "RangeBounds"
            ],
            "kind": "trait"
        },
        "2:45755:3256": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i32x2"
            ],
            "kind": "struct"
        },
        "2:51256:4287": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "aarch64",
                "neon",
                "float64x2x2_t"
            ],
            "kind": "struct"
        },
        "2:16299:3371": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "ptr",
                "const_ptr",
                "SimdConstPtr"
            ],
            "kind": "trait"
        },
        "2:44835:4244": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly16x8x3_t"
            ],
            "kind": "struct"
        },
        "1:11825:1177": {
            "crate_id": 1,
            "path": [
                "std",
                "never"
            ],
            "kind": "primitive"
        },
        "1:8974:3196": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "SendError"
            ],
            "kind": "struct"
        },
        "1:884:2798": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "IterMut"
            ],
            "kind": "struct"
        },
        "17:14038:16538": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "SubLibraryCommand"
            ],
            "kind": "struct"
        },
        "2:38509:7916": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "IsAsciiWhitespace"
            ],
            "kind": "struct"
        },
        "2:46427:23981": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "m32x8"
            ],
            "kind": "struct"
        },
        "2:10402:7340": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Octal"
            ],
            "kind": "trait"
        },
        "2:10350:226": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Result"
            ],
            "kind": "type_alias"
        },
        "17:15426:17326": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageDynamicRelocation64"
            ],
            "kind": "struct"
        },
        "2:44635:4224": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly8x8x4_t"
            ],
            "kind": "struct"
        },
        "1:2315:2918": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "DirEntry"
            ],
            "kind": "struct"
        },
        "6:4429:11349": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "task_thread_times_info"
            ],
            "kind": "struct"
        },
        "17:13437:16033": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "ProgramHeader32"
            ],
            "kind": "struct"
        },
        "16:6962:12778": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "loclists",
                "DebugLocLists"
            ],
            "kind": "struct"
        },
        "2:38831:24622": {
            "crate_id": 2,
            "path": [
                "core",
                "escape",
                "EscapeIterInner"
            ],
            "kind": "struct"
        },
        "6:590:8548": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "sigval"
            ],
            "kind": "struct"
        },
        "6:3851:11298": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "kevent64_s"
            ],
            "kind": "struct"
        },
        "17:13844:16526": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "LcStr"
            ],
            "kind": "struct"
        },
        "2:34497:7715": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "copied",
                "Copied"
            ],
            "kind": "struct"
        },
        "17:13946:16531": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "Fvmlib"
            ],
            "kind": "struct"
        },
        "16:4743:12435": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwAddr"
            ],
            "kind": "struct"
        },
        "2:44665:4227": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly8x16x4_t"
            ],
            "kind": "struct"
        },
        "2:51265:4288": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "aarch64",
                "neon",
                "float64x2x3_t"
            ],
            "kind": "struct"
        },
        "2:38819:7313": {
            "crate_id": 2,
            "path": [
                "core",
                "alloc",
                "AllocError"
            ],
            "kind": "struct"
        },
        "1:8289:3011": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "util",
                "Sink"
            ],
            "kind": "struct"
        },
        "1:8586:3136": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "PrefixComponent"
            ],
            "kind": "struct"
        },
        "17:15368:17319": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageResourceDirectoryEntry"
            ],
            "kind": "struct"
        },
        "2:2344:7332": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "unique",
                "Unique"
            ],
            "kind": "struct"
        },
        "17:13399:16030": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Rela32"
            ],
            "kind": "struct"
        },
        "2:16939:24168": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroUsizeInner"
            ],
            "kind": "struct"
        },
        "1:7802:2765": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "local",
                "AccessError"
            ],
            "kind": "struct"
        },
        "1:9199:234": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "rwlock",
                "RwLockReadGuard"
            ],
            "kind": "struct"
        },
        "17:13581:16043": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "NoteHeader64"
            ],
            "kind": "struct"
        },
        "11:1674:28668": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "scopeguard",
                "ScopeGuard"
            ],
            "kind": "struct"
        },
        "5:7639:2793": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "TryReserveError"
            ],
            "kind": "struct"
        },
        "6:554:8543": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "hostent"
            ],
            "kind": "struct"
        },
        "6:4140:11318": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "segment_command_64"
            ],
            "kind": "struct"
        },
        "17:12683:13163": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "segment",
                "XcoffSegmentIterator"
            ],
            "kind": "struct"
        },
        "2:34124:2768": {
            "crate_id": 2,
            "path": [
                "core",
                "ascii",
                "EscapeDefault"
            ],
            "kind": "struct"
        },
        "11:2349:2813": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "table",
                "VacantEntry"
            ],
            "kind": "struct"
        },
        "16:4802:12448": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwCc"
            ],
            "kind": "struct"
        },
        "2:34645:7730": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "skip",
                "Skip"
            ],
            "kind": "struct"
        },
        "2:46220:3246": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i8x32"
            ],
            "kind": "struct"
        },
        "1:6089:18545": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "list",
                "Channel"
            ],
            "kind": "struct"
        },
        "1:8515:3134": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "Prefix"
            ],
            "kind": "enum"
        },
        "2:33389:210": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "range",
                "Range"
            ],
            "kind": "struct"
        },
        "17:15214:17306": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageBaseRelocation"
            ],
            "kind": "struct"
        },
        "17:11115:12950": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "section",
                "CoffSectionIterator"
            ],
            "kind": "struct"
        },
        "17:14847:17283": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "MaskedRichHeaderEntry"
            ],
            "kind": "struct"
        },
        "2:33469:216": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "range",
                "RangeToInclusive"
            ],
            "kind": "struct"
        },
        "2:2974:257": {
            "crate_id": 2,
            "path": [
                "core",
                "convert",
                "TryFrom"
            ],
            "kind": "trait"
        },
        "1:9139:18072": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "select",
                "Selected"
            ],
            "kind": "enum"
        },
        "2:11203:2797": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "Iter"
            ],
            "kind": "struct"
        },
        "2:34379:2895": {
            "crate_id": 2,
            "path": [
                "core",
                "ffi",
                "c_str",
                "FromBytesUntilNulError"
            ],
            "kind": "struct"
        },
        "2:12968:7409": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern"
            ],
            "kind": "module"
        },
        "6:4327:11340": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_throughput_qos_policy"
            ],
            "kind": "struct"
        },
        "2:34818:7733": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "zip",
                "Zip"
            ],
            "kind": "struct"
        },
        "17:14091:16542": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "RoutinesCommand32"
            ],
            "kind": "struct"
        },
        "5:6143:8131": {
            "crate_id": 5,
            "path": [
                "alloc",
                "sync",
                "ArcInner"
            ],
            "kind": "struct"
        },
        "1:10481:18389": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "Mode"
            ],
            "kind": "struct"
        },
        "17:12543:13160": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "section",
                "XcoffSection"
            ],
            "kind": "struct"
        },
        "5:4172:26406": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "drain",
                "drop",
                "DropGuard"
            ],
            "kind": "struct"
        },
        "6:4857:11379": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_identifier_info"
            ],
            "kind": "struct"
        },
        "16:6398:12750": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "abbrev",
                "DebugAbbrev"
            ],
            "kind": "struct"
        },
        "17:16069:17511": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "SymbolBytes"
            ],
            "kind": "struct"
        },
        "17:3264:13060": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "section",
                "MachOSectionIterator"
            ],
            "kind": "struct"
        },
        "2:46602:3253": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i16x32"
            ],
            "kind": "struct"
        },
        "2:45195:4280": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly64x2x3_t"
            ],
            "kind": "struct"
        },
        "17:14986:17291": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageRomHeaders"
            ],
            "kind": "struct"
        },
        "2:38029:2979": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "Lines"
            ],
            "kind": "struct"
        },
        "2:46026:24057": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "m8x16"
            ],
            "kind": "struct"
        },
        "17:10720:29959": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "ComdatSectionIteratorInternal"
            ],
            "kind": "enum"
        },
        "16:5415:29054": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "util",
                "sealed",
                "CapacityFull"
            ],
            "kind": "struct"
        },
        "2:37761:2982": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "Bytes"
            ],
            "kind": "struct"
        },
        "6:595:8549": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "itimerval"
            ],
            "kind": "struct"
        },
        "2:46315:3264": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i64x4"
            ],
            "kind": "struct"
        },
        "6:4984:11388": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ifdevmtu"
            ],
            "kind": "struct"
        },
        "1:11848:1850": {
            "crate_id": 1,
            "path": [
                "std",
                "u64"
            ],
            "kind": "primitive"
        },
        "17:12278:13145": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "section",
                "PeRelocationIterator"
            ],
            "kind": "struct"
        },
        "6:3747:11288": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "pthread_rwlockattr_t"
            ],
            "kind": "struct"
        },
        "17:9755:12870": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "AddressSize"
            ],
            "kind": "enum"
        },
        "1:4107:3054": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "ffi",
                "os_str",
                "OsStrExt"
            ],
            "kind": "trait"
        },
        "5:3703:182": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "linked_list",
                "LinkedList"
            ],
            "kind": "struct"
        },
        "1:3067:137": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "error",
                "Error"
            ],
            "kind": "struct"
        },
        "16:2528:11804": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugLineStrOffset"
            ],
            "kind": "struct"
        },
        "2:38758:3376": {
            "crate_id": 2,
            "path": [
                "core",
                "task",
                "wake",
                "RawWakerVTable"
            ],
            "kind": "struct"
        },
        "17:10524:12913": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SegmentIterator"
            ],
            "kind": "struct"
        },
        "1:7698:18280": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace_rs",
                "symbolize",
                "SymbolName"
            ],
            "kind": "struct"
        },
        "17:15197:17304": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageRelocation"
            ],
            "kind": "struct"
        },
        "1:10443:2937": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "OpenOptions"
            ],
            "kind": "struct"
        },
        "17:2234:13012": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "relocation",
                "ElfSectionRelocationIterator"
            ],
            "kind": "struct"
        },
        "2:26013:12824": {
            "crate_id": 2,
            "path": [
                "core",
                "error",
                "tags",
                "Value"
            ],
            "kind": "struct"
        },
        "17:12530:13161": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "section",
                "XcoffSectionIterator"
            ],
            "kind": "struct"
        },
        "17:10185:12876": {
            "crate_id": 17,
            "path": [
                "object",
                "endian",
                "U16Bytes"
            ],
            "kind": "struct"
        },
        "2:34213:7531": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "decode",
                "DecodeUtf16Error"
            ],
            "kind": "struct"
        },
        "16:4560:12367": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwEnd"
            ],
            "kind": "struct"
        },
        "1:8657:3139": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "Ancestors"
            ],
            "kind": "struct"
        },
        "17:13272:16022": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "SectionHeader64"
            ],
            "kind": "struct"
        },
        "17:15222:17307": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageArchiveMemberHeader"
            ],
            "kind": "struct"
        },
        "17:15010:17292": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "AnonObjectHeader"
            ],
            "kind": "struct"
        },
        "16:7528:12791": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "pubnames",
                "PubNamesEntry"
            ],
            "kind": "struct"
        },
        "17:14994:17279": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "Guid"
            ],
            "kind": "struct"
        },
        "1:957:2806": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "RawEntryBuilderMut"
            ],
            "kind": "struct"
        },
        "17:13814:16524": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "MachHeader64"
            ],
            "kind": "struct"
        },
        "9:236:3135": {
            "crate_id": 9,
            "path": [
                "miniz_oxide",
                "inflate",
                "core",
                "State"
            ],
            "kind": "enum"
        },
        "17:10399:2982": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "util",
                "Bytes"
            ],
            "kind": "struct"
        },
        "2:35849:2622": {
            "crate_id": 2,
            "path": [
                "core",
                "option",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "2:15450:26034": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "swizzle",
                "deinterleave",
                "Even"
            ],
            "kind": "struct"
        },
        "17:13832:16525": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "LoadCommand"
            ],
            "kind": "struct"
        },
        "17:15992:17510": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "AuxHeader64"
            ],
            "kind": "struct"
        },
        "2:38578:7935": {
            "crate_id": 2,
            "path": [
                "core",
                "time",
                "TryFromFloatSecsErrorKind"
            ],
            "kind": "enum"
        },
        "2:3344:7769": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "Not"
            ],
            "kind": "trait"
        },
        "2:3213:247": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "Sync"
            ],
            "kind": "trait"
        },
        "5:2265:2737": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "mem",
                "replace",
                "PanicGuard"
            ],
            "kind": "struct"
        },
        "1:4137:3056": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "fs",
                "FileExt"
            ],
            "kind": "trait"
        },
        "6:4396:11346": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "vnode_info_path"
            ],
            "kind": "struct"
        },
        "17:11214:12948": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "comdat",
                "CoffComdatIterator"
            ],
            "kind": "struct"
        },
        "6:3798:11293": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ftrimactivefile_t"
            ],
            "kind": "struct"
        },
        "2:15:2568": {
            "crate_id": 2,
            "path": [
                "core",
                "write"
            ],
            "kind": "macro"
        },
        "18:453:7542": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "twoway",
                "Reverse"
            ],
            "kind": "struct"
        },
        "1:10502:2877": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "os",
                "JoinPathsError"
            ],
            "kind": "struct"
        },
        "1:10757:18643": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "personality",
                "dwarf",
                "eh",
                "EHContext"
            ],
            "kind": "struct"
        },
        "2:45977:3313": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "f32x4"
            ],
            "kind": "struct"
        },
        "2:6163:7723": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "flatten",
                "FlatMap"
            ],
            "kind": "struct"
        },
        "2:16684:3035": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "dec2flt",
                "ParseFloatError"
            ],
            "kind": "struct"
        },
        "1:1922:2874": {
            "crate_id": 1,
            "path": [
                "std",
                "env",
                "ArgsOs"
            ],
            "kind": "struct"
        },
        "2:16928:23964": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroU128Inner"
            ],
            "kind": "struct"
        },
        "17:13723:16520": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DyldCacheMappingInfo"
            ],
            "kind": "struct"
        },
        "16:5686:12721": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "addr",
                "DebugAddr"
            ],
            "kind": "struct"
        },
        "2:45006:4261": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "float32x4x2_t"
            ],
            "kind": "struct"
        },
        "17:12353:13147": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "import",
                "ImportDescriptorIterator"
            ],
            "kind": "struct"
        },
        "2:4440:24615": {
            "crate_id": 2,
            "path": [
                "core",
                "asserting",
                "TryCaptureWithoutDebug"
            ],
            "kind": "struct"
        },
        "6:4970:11386": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "os_unfair_lock_s"
            ],
            "kind": "struct"
        },
        "2:38517:7911": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "BytesIsNotEmpty"
            ],
            "kind": "struct"
        },
        "16:4641:12379": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwVirtuality"
            ],
            "kind": "struct"
        },
        "17:11293:12978": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "import",
                "ImportType"
            ],
            "kind": "enum"
        },
        "17:15356:17318": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageResourceDirectory"
            ],
            "kind": "struct"
        },
        "1:7688:12899": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace_rs",
                "symbolize",
                "Symbol"
            ],
            "kind": "struct"
        },
        "17:12671:13194": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "comdat",
                "XcoffComdatSectionIterator"
            ],
            "kind": "struct"
        },
        "1:672:2772": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace",
                "BacktraceFrame"
            ],
            "kind": "struct"
        },
        "1:8363:3029": {
            "crate_id": 1,
            "path": [
                "std",
                "net",
                "tcp",
                "Incoming"
            ],
            "kind": "struct"
        },
        "16:6466:12756": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "abbrev",
                "AttributeSpecification"
            ],
            "kind": "struct"
        },
        "2:8313:2594": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "collect",
                "Extend"
            ],
            "kind": "trait"
        },
        "1:11809:18670": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace_rs",
                "print",
                "PrintFmt"
            ],
            "kind": "enum"
        },
        "17:15473:17331": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageLoadConfigDirectory32"
            ],
            "kind": "struct"
        },
        "18:0:2457": {
            "crate_id": 18,
            "path": [
                "memchr"
            ],
            "kind": "module"
        },
        "17:14147:16545": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DysymtabCommand"
            ],
            "kind": "struct"
        },
        "2:819:190": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "NonZero"
            ],
            "kind": "struct"
        },
        "5:4377:2797": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "iter",
                "Iter"
            ],
            "kind": "struct"
        },
        "1:8408:3024": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "net",
                "addr",
                "SocketAddr"
            ],
            "kind": "struct"
        },
        "17:15418:17325": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageDynamicRelocation32"
            ],
            "kind": "struct"
        },
        "17:10997:12939": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "archive",
                "ArchiveFile"
            ],
            "kind": "struct"
        },
        "1:6729:233": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "rwlock",
                "RwLock"
            ],
            "kind": "struct"
        },
        "6:4571:11355": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "image_offset"
            ],
            "kind": "struct"
        },
        "2:7724:7535": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "zip",
                "TrustedRandomAccess"
            ],
            "kind": "trait"
        },
        "2:35899:2780": {
            "crate_id": 2,
            "path": [
                "core",
                "panic",
                "unwind_safe",
                "UnwindSafe"
            ],
            "kind": "trait"
        },
        "2:2958:77": {
            "crate_id": 2,
            "path": [
                "core",
                "convert",
                "AsRef"
            ],
            "kind": "trait"
        },
        "17:11189:12953": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "symbol",
                "CoffSymbol"
            ],
            "kind": "struct"
        },
        "18:361:17558": {
            "crate_id": 18,
            "path": [
                "memchr",
                "cow",
                "CowBytes"
            ],
            "kind": "struct"
        },
        "2:12745:7923": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "MatchesInternal"
            ],
            "kind": "struct"
        },
        "6:4322:11339": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_latency_qos_policy"
            ],
            "kind": "struct"
        },
        "2:16815:3036": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "error",
                "ParseIntError"
            ],
            "kind": "struct"
        },
        "11:2148:2813": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "VacantEntry"
            ],
            "kind": "struct"
        },
        "2:3264:3227": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "Sub"
            ],
            "kind": "trait"
        },
        "17:12516:13170": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "file",
                "XcoffFile"
            ],
            "kind": "struct"
        },
        "5:221:7335": {
            "crate_id": 5,
            "path": [
                "alloc",
                "boxed",
                "thin",
                "ThinBox"
            ],
            "kind": "struct"
        },
        "6:4349:11342": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "vm_range_t"
            ],
            "kind": "struct"
        },
        "2:46750:3315": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "f32x16"
            ],
            "kind": "struct"
        },
        "1:3590:2945": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "Read"
            ],
            "kind": "trait"
        },
        "2:15396:7542": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "swizzle",
                "reverse",
                "Reverse"
            ],
            "kind": "struct"
        },
        "18:495:29984": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "twoway",
                "SuffixOrdering"
            ],
            "kind": "enum"
        },
        "0:0:2327": {
            "crate_id": 0,
            "path": [
                "usage"
            ],
            "kind": "module"
        },
        "17:11467:12992": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "symbol",
                "ElfSymbol"
            ],
            "kind": "struct"
        },
        "11:1085:28692": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "KeyOrRef"
            ],
            "kind": "enum"
        },
        "11:123:28667": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "RawTable"
            ],
            "kind": "struct"
        },
        "1:5142:204": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "PathBuf"
            ],
            "kind": "struct"
        },
        "2:27856:7767": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "BitOr"
            ],
            "kind": "trait"
        },
        "1:11850:969": {
            "crate_id": 1,
            "path": [
                "std",
                "isize"
            ],
            "kind": "primitive"
        },
        "1:5395:3145": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "Child"
            ],
            "kind": "struct"
        },
        "5:7665:2754": {
            "crate_id": 5,
            "path": [
                "alloc",
                "ffi",
                "c_str",
                "CString"
            ],
            "kind": "struct"
        },
        "5:1223:27561": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "append",
                "MergeIter"
            ],
            "kind": "struct"
        },
        "2:44447:4205": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint32x4_t"
            ],
            "kind": "struct"
        },
        "1:7840:2748": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "Thread"
            ],
            "kind": "struct"
        },
        "6:4963:11385": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "log2phys"
            ],
            "kind": "struct"
        },
        "17:15608:17336": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageArmRuntimeFunctionEntry"
            ],
            "kind": "struct"
        },
        "11:873:2809": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "RawVacantEntryMut"
            ],
            "kind": "struct"
        },
        "1:1616:2801": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "set",
                "Drain"
            ],
            "kind": "struct"
        },
        "6:4451:11351": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "rusage_info_v1"
            ],
            "kind": "struct"
        },
        "2:32009:7773": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "BitOrAssign"
            ],
            "kind": "trait"
        },
        "16:6532:12760": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "aranges",
                "ArangeEntryIter"
            ],
            "kind": "struct"
        },
        "17:12768:12879": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "ObjectKind"
            ],
            "kind": "enum"
        },
        "16:8226:12823": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "value",
                "ValueType"
            ],
            "kind": "enum"
        },
        "1:8414:3029": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "net",
                "listener",
                "Incoming"
            ],
            "kind": "struct"
        },
        "2:35042:7707": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "sources",
                "repeat_n",
                "RepeatN"
            ],
            "kind": "struct"
        },
        "1:963:2807": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "RawEntryMut"
            ],
            "kind": "enum"
        },
        "1:4101:3055": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "ffi",
                "os_str",
                "OsStringExt"
            ],
            "kind": "trait"
        },
        "6:5291:11537": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "aarch64",
                "align",
                "__darwin_arm_neon_state64"
            ],
            "kind": "struct"
        },
        "6:4362:11344": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "vinfo_stat"
            ],
            "kind": "struct"
        },
        "17:10350:12911": {
            "crate_id": 17,
            "path": [
                "object",
                "endian",
                "I64Bytes"
            ],
            "kind": "struct"
        },
        "2:15418:26030": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "swizzle",
                "rotate_elements_right",
                "Rotate"
            ],
            "kind": "struct"
        },
        "2:8395:2593": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "exact_size",
                "ExactSizeIterator"
            ],
            "kind": "trait"
        },
        "16:0:2455": {
            "crate_id": 16,
            "path": [
                "gimli"
            ],
            "kind": "module"
        },
        "13:196:28694": {
            "crate_id": 13,
            "path": [
                "std_detect",
                "detect",
                "cache",
                "Initializer"
            ],
            "kind": "struct"
        },
        "2:33411:212": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "range",
                "RangeFrom"
            ],
            "kind": "struct"
        },
        "17:14111:16543": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "RoutinesCommand64"
            ],
            "kind": "struct"
        },
        "6:3655:11282": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ip_mreq_source"
            ],
            "kind": "struct"
        },
        "17:14386:16560": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "BuildVersionCommand"
            ],
            "kind": "struct"
        },
        "17:256:29136": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "util",
                "DebugByte"
            ],
            "kind": "struct"
        },
        "2:15406:26030": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "swizzle",
                "rotate_elements_left",
                "Rotate"
            ],
            "kind": "struct"
        },
        "5:6090:71": {
            "crate_id": 5,
            "path": [
                "alloc",
                "sync",
                "Arc"
            ],
            "kind": "struct"
        },
        "2:46009:3320": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "f64x4"
            ],
            "kind": "struct"
        },
        "2:38371:7447": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "TwoWaySearcher"
            ],
            "kind": "struct"
        },
        "1:6525:3187": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "once_lock",
                "OnceLock"
            ],
            "kind": "struct"
        },
        "1:7291:22887": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "wstr",
                "WStrUnits"
            ],
            "kind": "struct"
        },
        "1:6213:18261": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "zero",
                "ZeroToken"
            ],
            "kind": "struct"
        },
        "2:35930:2756": {
            "crate_id": 2,
            "path": [
                "core",
                "pin",
                "Pin"
            ],
            "kind": "struct"
        },
        "2:11056:239": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "index",
                "SliceIndex"
            ],
            "kind": "trait"
        },
        "16:7590:12797": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "rnglists",
                "DebugRanges"
            ],
            "kind": "struct"
        },
        "17:13594:16044": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "HashHeader"
            ],
            "kind": "struct"
        },
        "1:3901:3031": {
            "crate_id": 1,
            "path": [
                "std",
                "net",
                "tcp",
                "TcpStream"
            ],
            "kind": "struct"
        },
        "2:38058:7411": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "SplitAsciiWhitespace"
            ],
            "kind": "struct"
        },
        "1:1613:2622": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "set",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "1:5651:3190": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "Sender"
            ],
            "kind": "struct"
        },
        "11:1893:2802": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "ExtractIf"
            ],
            "kind": "struct"
        },
        "2:37610:7387": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "ChunksExactMut"
            ],
            "kind": "struct"
        },
        "2:34232:2768": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "EscapeDefault"
            ],
            "kind": "struct"
        },
        "17:15273:17310": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageThunkData64"
            ],
            "kind": "struct"
        },
        "2:8012:3009": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "sources",
                "empty",
                "Empty"
            ],
            "kind": "struct"
        },
        "1:5096:18346": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "fmt",
                "DebugHelper"
            ],
            "kind": "struct"
        },
        "2:2148:24491": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "metadata",
                "PtrComponents"
            ],
            "kind": "struct"
        },
        "17:14516:16569": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DataInCodeEntry"
            ],
            "kind": "struct"
        },
        "14:187:11728": {
            "crate_id": 14,
            "path": [
                "rustc_demangle",
                "SizeLimitedFmtAdapter"
            ],
            "kind": "struct"
        },
        "2:8256:7713": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "accum",
                "Sum"
            ],
            "kind": "trait"
        },
        "17:11865:13101": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "file",
                "MachOComdatSectionIterator"
            ],
            "kind": "struct"
        },
        "17:13509:16038": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Verdef"
            ],
            "kind": "struct"
        },
        "16:7306:29151": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "OperationEvaluationResult"
            ],
            "kind": "enum"
        },
        "17:261:29140": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "util",
                "DebugLen"
            ],
            "kind": "struct"
        },
        "2:4070:2622": {
            "crate_id": 2,
            "path": [
                "core",
                "array",
                "iter",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "17:13375:16028": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Syminfo64"
            ],
            "kind": "struct"
        },
        "2:16753:23986": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "flt2dec",
                "Sign"
            ],
            "kind": "enum"
        },
        "2:44845:4245": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly16x8x4_t"
            ],
            "kind": "struct"
        },
        "2:46448:3247": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i8x64"
            ],
            "kind": "struct"
        },
        "1:11827:1878": {
            "crate_id": 1,
            "path": [
                "std",
                "unit"
            ],
            "kind": "primitive"
        },
        "15:306:11745": {
            "crate_id": 15,
            "path": [
                "addr2line",
                "LocationRangeUnitIter"
            ],
            "kind": "struct"
        },
        "1:11461:7309": {
            "crate_id": 1,
            "path": [
                "std",
                "alloc",
                "System"
            ],
            "kind": "struct"
        },
        "2:16366:7791": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "ptr",
                "mut_ptr",
                "SimdMutPtr",
                "with_exposed_provenance"
            ],
            "kind": "function"
        },
        "1:9240:2951": {
            "crate_id": 1,
            "path": [
                "std",
                "time",
                "SystemTime"
            ],
            "kind": "struct"
        },
        "2:26132:7323": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "Tuple"
            ],
            "kind": "trait"
        },
        "2:35841:2798": {
            "crate_id": 2,
            "path": [
                "core",
                "option",
                "IterMut"
            ],
            "kind": "struct"
        },
        "1:9258:3224": {
            "crate_id": 1,
            "path": [
                "std",
                "time",
                "SystemTimeError"
            ],
            "kind": "struct"
        },
        "16:6749:12770": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "LineInstructions"
            ],
            "kind": "struct"
        },
        "1:568:2743": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "Packet"
            ],
            "kind": "struct"
        },
        "1:8357:2979": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "Lines"
            ],
            "kind": "struct"
        },
        "2:51209:4282": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "aarch64",
                "neon",
                "float64x1_t"
            ],
            "kind": "struct"
        },
        "2:34620:7728": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "rev",
                "Rev"
            ],
            "kind": "struct"
        },
        "1:8350:2983": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "Split"
            ],
            "kind": "struct"
        },
        "17:15176:17302": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageAuxSymbolSection"
            ],
            "kind": "struct"
        },
        "1:3527:3010": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "util",
                "Repeat"
            ],
            "kind": "struct"
        },
        "2:37660:7372": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "ArrayChunksMut"
            ],
            "kind": "struct"
        },
        "2:44856:4246": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int32x2x2_t"
            ],
            "kind": "struct"
        },
        "6:4473:11352": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "rusage_info_v2"
            ],
            "kind": "struct"
        },
        "2:45635:3249": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i16x2"
            ],
            "kind": "struct"
        },
        "17:12238:13116": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "section",
                "PeSegment"
            ],
            "kind": "struct"
        },
        "1:4159:3058": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "fs",
                "OpenOptionsExt"
            ],
            "kind": "trait"
        },
        "14:7:11720": {
            "crate_id": 14,
            "path": [
                "rustc_demangle",
                "legacy",
                "Demangle"
            ],
            "kind": "struct"
        },
        "2:8293:145": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "collect",
                "FromIterator"
            ],
            "kind": "trait"
        },
        "16:7656:12801": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "rnglists",
                "RawRngListEntry"
            ],
            "kind": "enum"
        },
        "2:16444:3361": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "cmp",
                "ord",
                "SimdOrd"
            ],
            "kind": "trait"
        },
        "16:2998:11823": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DwoId"
            ],
            "kind": "struct"
        },
        "1:4006:3032": {
            "crate_id": 1,
            "path": [
                "std",
                "net",
                "udp",
                "UdpSocket"
            ],
            "kind": "struct"
        },
        "16:5802:12728": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "CieOffsetEncoding"
            ],
            "kind": "enum"
        },
        "2:16709:24493": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "diy_float",
                "Fp"
            ],
            "kind": "struct"
        },
        "1:9496:138": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "File"
            ],
            "kind": "struct"
        },
        "16:4531:12361": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwDs"
            ],
            "kind": "struct"
        },
        "4:0:2447": {
            "crate_id": 4,
            "path": [
                "rustc_std_workspace_core"
            ],
            "kind": "module"
        },
        "17:12189:13142": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "file",
                "PeComdatIterator"
            ],
            "kind": "struct"
        },
        "17:15463:17330": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageEpilogueDynamicRelocationHeader"
            ],
            "kind": "struct"
        },
        "16:6560:12762": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "index",
                "DebugCuIndex"
            ],
            "kind": "struct"
        },
        "17:14284:16553": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "UuidCommand"
            ],
            "kind": "struct"
        },
        "2:45813:3280": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u8x16"
            ],
            "kind": "struct"
        },
        "17:10915:29946": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SectionRelocationIteratorInternal"
            ],
            "kind": "enum"
        },
        "1:4444:3082": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "net",
                "stream",
                "UnixStream"
            ],
            "kind": "struct"
        },
        "1:9819:18455": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "net",
                "Socket"
            ],
            "kind": "struct"
        },
        "1:6489:3179": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "once",
                "OnceState"
            ],
            "kind": "struct"
        },
        "1:3484:2987": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "stdio",
                "IsTerminal"
            ],
            "kind": "trait"
        },
        "17:15748:17346": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageDebugMisc"
            ],
            "kind": "struct"
        },
        "2:16285:2948": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "num",
                "sealed",
                "Sealed"
            ],
            "kind": "trait"
        },
        "6:4864:11380": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_extended_info"
            ],
            "kind": "struct"
        },
        "5:40:2852": {
            "crate_id": 5,
            "path": [
                "alloc",
                "raw_vec",
                "RawVec"
            ],
            "kind": "struct"
        },
        "17:15957:17509": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "AuxHeader32"
            ],
            "kind": "struct"
        },
        "1:7888:2876": {
            "crate_id": 1,
            "path": [
                "std",
                "env",
                "VarError"
            ],
            "kind": "enum"
        },
        "16:5781:12727": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "EhFrame"
            ],
            "kind": "struct"
        },
        "2:28029:7768": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "BitXor"
            ],
            "kind": "trait"
        },
        "6:0:1005": {
            "crate_id": 6,
            "path": [
                "libc"
            ],
            "kind": "module"
        },
        "2:37134:157": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "sip",
                "Hasher"
            ],
            "kind": "struct"
        },
        "1:6165:3377": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "waker",
                "Waker"
            ],
            "kind": "struct"
        },
        "2:2069:1361": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr"
            ],
            "kind": "module"
        },
        "1:379:2764": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "scoped",
                "ScopedJoinHandle"
            ],
            "kind": "struct"
        },
        "2:46353:24054": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "m8x32"
            ],
            "kind": "struct"
        },
        "1:10673:7934": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "time",
                "Nanoseconds"
            ],
            "kind": "struct"
        },
        "6:4049:11311": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "proc_bsdinfo"
            ],
            "kind": "struct"
        },
        "16:4502:12355": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwLle"
            ],
            "kind": "struct"
        },
        "2:36862:24475": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "rt",
                "Count"
            ],
            "kind": "enum"
        },
        "1:5065:18346": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "fmt",
                "DebugHelper"
            ],
            "kind": "struct"
        },
        "17:12808:12882": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "SymbolIndex"
            ],
            "kind": "struct"
        },
        "2:10055:25094": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "builders",
                "PadAdapterState"
            ],
            "kind": "struct"
        },
        "16:2878:11820": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "EhFrameOffset"
            ],
            "kind": "struct"
        },
        "2:26045:244": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "StructuralPartialEq"
            ],
            "kind": "trait"
        },
        "1:4574:3088": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "process",
                "ExitStatusExt"
            ],
            "kind": "trait"
        },
        "6:1114:8953": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "fsid_t"
            ],
            "kind": "struct"
        },
        "2:2611:7791": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "with_exposed_provenance"
            ],
            "kind": "function"
        },
        "2:26134:114": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "ConstParamTy"
            ],
            "kind": "trait"
        },
        "17:12175:13130": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "file",
                "PeFile"
            ],
            "kind": "struct"
        },
        "5:3465:2802": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "ExtractIf"
            ],
            "kind": "struct"
        },
        "9:53:11604": {
            "crate_id": 9,
            "path": [
                "miniz_oxide",
                "inflate",
                "core",
                "DecompressorOxide"
            ],
            "kind": "struct"
        },
        "2:45586:3278": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u8x4"
            ],
            "kind": "struct"
        },
        "1:10285:3002": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "stdio",
                "Stdin"
            ],
            "kind": "struct"
        },
        "2:44271:4192": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int32x2_t"
            ],
            "kind": "struct"
        },
        "5:1898:2802": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "ExtractIf"
            ],
            "kind": "struct"
        },
        "6:1335:9091": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sysdir_search_path_directory_t"
            ],
            "kind": "enum"
        },
        "2:44616:4222": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly8x8x2_t"
            ],
            "kind": "struct"
        },
        "2:44706:4231": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int16x8x2_t"
            ],
            "kind": "struct"
        },
        "5:7694:7846": {
            "crate_id": 5,
            "path": [
                "alloc",
                "ffi",
                "c_str",
                "FromBytesWithNulErrorKind"
            ],
            "kind": "enum"
        },
        "16:4062:12007": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwTag"
            ],
            "kind": "struct"
        },
        "16:5075:12514": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwMacro"
            ],
            "kind": "struct"
        },
        "2:45175:4278": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly64x1x4_t"
            ],
            "kind": "struct"
        },
        "2:34224:7421": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "EscapeUnicode"
            ],
            "kind": "struct"
        },
        "16:4771:12440": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwId"
            ],
            "kind": "struct"
        },
        "2:34419:2912": {
            "crate_id": 2,
            "path": [
                "core",
                "ffi",
                "VaList"
            ],
            "kind": "struct"
        },
        "1:7173:23020": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "backtrace",
                "_print",
                "DisplayBacktrace"
            ],
            "kind": "struct"
        },
        "2:15433:26026": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "swizzle",
                "interleave",
                "Lo"
            ],
            "kind": "struct"
        },
        "2:45671:3285": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u16x4"
            ],
            "kind": "struct"
        },
        "17:15616:17337": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageArm64RuntimeFunctionEntry"
            ],
            "kind": "struct"
        },
        "15:327:11749": {
            "crate_id": 15,
            "path": [
                "addr2line",
                "RangeAttributes"
            ],
            "kind": "struct"
        },
        "2:32698:7776": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "ShrAssign"
            ],
            "kind": "trait"
        },
        "1:2469:2924": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "symlink_metadata"
            ],
            "kind": "function"
        },
        "1:11841:894": {
            "crate_id": 1,
            "path": [
                "std",
                "i16"
            ],
            "kind": "primitive"
        },
        "19:0:1294": {
            "crate_id": 19,
            "path": [
                "panic_unwind"
            ],
            "kind": "module"
        },
        "11:351:28670": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "FullBucketsIndices"
            ],
            "kind": "struct"
        },
        "6:510:8538": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "timeval"
            ],
            "kind": "struct"
        },
        "2:44736:4234": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint16x4x2_t"
            ],
            "kind": "struct"
        },
        "6:4845:11378": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_basic_info"
            ],
            "kind": "struct"
        },
        "2:2967:144": {
            "crate_id": 2,
            "path": [
                "core",
                "convert",
                "From"
            ],
            "kind": "trait"
        },
        "17:11051:12967": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "file",
                "CoffCommon"
            ],
            "kind": "struct"
        },
        "17:14051:16539": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "PreboundDylibCommand"
            ],
            "kind": "struct"
        },
        "2:33277:7487": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "control_flow",
                "ControlFlow"
            ],
            "kind": "enum"
        },
        "2:4862:7505": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "RefMut"
            ],
            "kind": "struct"
        },
        "1:8075:2835": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "cursor",
                "Cursor"
            ],
            "kind": "struct"
        },
        "2:27337:3228": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "SubAssign"
            ],
            "kind": "trait"
        },
        "1:3032:18424": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "error",
                "repr_bitpacked",
                "Repr"
            ],
            "kind": "struct"
        },
        "2:12046:7383": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "ChunkByMut"
            ],
            "kind": "struct"
        },
        "5:7842:7468": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "splice",
                "Splice"
            ],
            "kind": "struct"
        },
        "5:1379:2811": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "entry",
                "Entry"
            ],
            "kind": "enum"
        },
        "2:16917:23983": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroU64Inner"
            ],
            "kind": "struct"
        },
        "6:4497:11353": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "rusage_info_v3"
            ],
            "kind": "struct"
        },
        "6:5302:11539": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "long_array",
                "ctl_info"
            ],
            "kind": "struct"
        },
        "5:7475:2832": {
            "crate_id": 5,
            "path": [
                "alloc",
                "alloc",
                "Global"
            ],
            "kind": "struct"
        },
        "2:44695:4230": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int16x4x4_t"
            ],
            "kind": "struct"
        },
        "6:516:8539": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "timespec"
            ],
            "kind": "struct"
        },
        "5:3809:26406": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "linked_list",
                "drop",
                "DropGuard"
            ],
            "kind": "struct"
        },
        "2:36609:7347": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "num",
                "LowerHex"
            ],
            "kind": "struct"
        },
        "15:0:2454": {
            "crate_id": 15,
            "path": [
                "addr2line"
            ],
            "kind": "module"
        },
        "6:548:8542": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "ipv6_mreq"
            ],
            "kind": "struct"
        },
        "11:2301:2811": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "table",
                "Entry"
            ],
            "kind": "enum"
        },
        "2:45994:3319": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "f64x2"
            ],
            "kind": "struct"
        },
        "2:44805:4241": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly16x4x3_t"
            ],
            "kind": "struct"
        },
        "1:902:2799": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "Keys"
            ],
            "kind": "struct"
        },
        "2:3208:117": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "Copy"
            ],
            "kind": "trait"
        },
        "18:420:153": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "rabinkarp",
                "Hash"
            ],
            "kind": "struct"
        },
        "17:10671:29944": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "ComdatIteratorInternal"
            ],
            "kind": "enum"
        },
        "16:6940:29067": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "lists",
                "ListsHeader"
            ],
            "kind": "struct"
        },
        "18:545:17553": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "FinderRev"
            ],
            "kind": "struct"
        },
        "2:3459:141": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "function",
                "FnMut"
            ],
            "kind": "trait"
        },
        "10:0:2450": {
            "crate_id": 10,
            "path": [
                "adler"
            ],
            "kind": "module"
        },
        "2:35545:170": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "ip_addr",
                "IpAddr"
            ],
            "kind": "enum"
        },
        "3:0:505": {
            "crate_id": 3,
            "path": [
                "compiler_builtins"
            ],
            "kind": "module"
        },
        "2:46108:3281": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u8x32"
            ],
            "kind": "struct"
        },
        "2:35583:3022": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "ip_addr",
                "Ipv6Addr"
            ],
            "kind": "struct"
        },
        "16:5960:12735": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "PartialFrameDescriptionEntry"
            ],
            "kind": "struct"
        },
        "16:5897:12733": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "Augmentation"
            ],
            "kind": "struct"
        },
        "1:11844:887": {
            "crate_id": 1,
            "path": [
                "std",
                "i128"
            ],
            "kind": "primitive"
        },
        "1:8059:18313": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "buffered",
                "linewritershim",
                "LineWriterShim"
            ],
            "kind": "struct"
        },
        "17:12408:13140": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "relocation",
                "RelocationBlockIterator"
            ],
            "kind": "struct"
        },
        "5:1239:26522": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "borrow",
                "DormantMutRef"
            ],
            "kind": "struct"
        },
        "2:5274:2913": {
            "crate_id": 2,
            "path": [
                "core",
                "ffi",
                "VaListImpl"
            ],
            "kind": "struct"
        },
        "16:542:28894": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "RegisterRuleMap"
            ],
            "kind": "struct"
        },
        "16:7633:29039": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "rnglists",
                "RangeListsFormat"
            ],
            "kind": "enum"
        },
        "5:7564:26372": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set_val",
                "SetValZST"
            ],
            "kind": "struct"
        },
        "2:10619:157": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "Hasher"
            ],
            "kind": "trait"
        },
        "5:1132:26406": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "binary_heap",
                "drop",
                "DropGuard"
            ],
            "kind": "struct"
        },
        "17:13606:16045": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "GnuHashHeader"
            ],
            "kind": "struct"
        },
        "16:5722:12723": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "EhFrameHdr"
            ],
            "kind": "struct"
        },
        "14:160:11720": {
            "crate_id": 14,
            "path": [
                "rustc_demangle",
                "Demangle"
            ],
            "kind": "struct"
        },
        "16:4424:12323": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwForm"
            ],
            "kind": "struct"
        },
        "1:1859:2856": {
            "crate_id": 1,
            "path": [
                "std",
                "env",
                "Vars"
            ],
            "kind": "struct"
        },
        "16:4587:12371": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwAccess"
            ],
            "kind": "struct"
        },
        "5:5298:3172": {
            "crate_id": 5,
            "path": [
                "alloc",
                "rc",
                "Weak"
            ],
            "kind": "struct"
        },
        "11:1880:2797": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "Iter"
            ],
            "kind": "struct"
        },
        "5:306:2597": {
            "crate_id": 5,
            "path": [
                "alloc",
                "boxed",
                "Box"
            ],
            "kind": "struct"
        },
        "11:2466:2802": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "table",
                "ExtractIf"
            ],
            "kind": "struct"
        },
        "1:1098:2813": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "VacantEntry"
            ],
            "kind": "struct"
        },
        "16:6427:12752": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "abbrev",
                "AbbreviationsCache"
            ],
            "kind": "struct"
        },
        "2:7840:7702": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "range",
                "Step"
            ],
            "kind": "trait"
        },
        "2:10400:128": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Display"
            ],
            "kind": "trait"
        },
        "16:6574:12763": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "index",
                "DebugTuIndex"
            ],
            "kind": "struct"
        },
        "1:938:2802": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "ExtractIf"
            ],
            "kind": "struct"
        },
        "1:7987:2939": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "Metadata"
            ],
            "kind": "struct"
        },
        "17:14341:16557": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "EncryptionInfoCommand32"
            ],
            "kind": "struct"
        },
        "1:5799:3116": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "condvar",
                "Condvar"
            ],
            "kind": "struct"
        },
        "6:5223:11527": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "bpf_hdr"
            ],
            "kind": "struct"
        },
        "2:27404:7764": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "MulAssign"
            ],
            "kind": "trait"
        },
        "2:15951:3231": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "vector",
                "Simd"
            ],
            "kind": "struct"
        },
        "17:10044:12906": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "SegmentFlags"
            ],
            "kind": "enum"
        },
        "17:10622:29956": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SectionIteratorInternal"
            ],
            "kind": "enum"
        },
        "17:15655:17341": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageEnclaveConfig32"
            ],
            "kind": "struct"
        },
        "2:12983:7407": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "Searcher"
            ],
            "kind": "trait"
        },
        "1:7536:23281": {
            "crate_id": 1,
            "path": [
                "std",
                "panicking",
                "Hook"
            ],
            "kind": "enum"
        },
        "7:78:11563": {
            "crate_id": 7,
            "path": [
                "unwind",
                "libunwind",
                "_Unwind_Action"
            ],
            "kind": "enum"
        },
        "16:5769:12726": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "EhHdrTable"
            ],
            "kind": "struct"
        },
        "17:12201:13143": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "file",
                "PeComdat"
            ],
            "kind": "struct"
        },
        "11:1725:156": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "HashSet"
            ],
            "kind": "struct"
        },
        "17:12724:12922": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "FileKind"
            ],
            "kind": "enum"
        },
        "1:4151:3057": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "fs",
                "PermissionsExt"
            ],
            "kind": "trait"
        },
        "2:51217:4283": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "aarch64",
                "neon",
                "float64x2_t"
            ],
            "kind": "struct"
        },
        "2:15661:3234": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "masks",
                "MaskElement"
            ],
            "kind": "trait"
        },
        "17:2203:12987": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "relocation",
                "ElfDynamicRelocationIterator"
            ],
            "kind": "struct"
        },
        "2:46525:3282": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u8x64"
            ],
            "kind": "struct"
        },
        "16:7741:12805": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "str",
                "DebugStrOffsets"
            ],
            "kind": "struct"
        },
        "1:11830:335": {
            "crate_id": 1,
            "path": [
                "std",
                "array"
            ],
            "kind": "primitive"
        },
        "18:507:29988": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "twoway",
                "ApproximateByteSet"
            ],
            "kind": "struct"
        },
        "16:2438:11800": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugAddrIndex"
            ],
            "kind": "struct"
        },
        "16:6782:12771": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "ColumnType"
            ],
            "kind": "enum"
        },
        "17:12300:13146": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "export",
                "ExportTarget"
            ],
            "kind": "enum"
        },
        "1:11852:1422": {
            "crate_id": 1,
            "path": [
                "std",
                "reference"
            ],
            "kind": "primitive"
        },
        "2:11528:7397": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "RSplitNMut"
            ],
            "kind": "struct"
        },
        "17:14012:16536": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "SubClientCommand"
            ],
            "kind": "struct"
        },
        "17:9916:12903": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "SymbolScope"
            ],
            "kind": "enum"
        },
        "16:5347:12717": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwEhPe"
            ],
            "kind": "struct"
        },
        "2:22:819": {
            "crate_id": 2,
            "path": [
                "core",
                "format_args"
            ],
            "kind": "macro"
        },
        "2:13192:119": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "lossy",
                "Debug"
            ],
            "kind": "struct"
        },
        "2:33489:2787": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "range",
                "Bound"
            ],
            "kind": "enum"
        },
        "17:16121:17515": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "FileAux64"
            ],
            "kind": "struct"
        },
        "2:33313:7330": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "coroutine",
                "CoroutineState"
            ],
            "kind": "enum"
        },
        "6:3804:11294": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "fspecread_t"
            ],
            "kind": "struct"
        },
        "2:10404:7339": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Binary"
            ],
            "kind": "trait"
        },
        "1:8601:3137": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "Component"
            ],
            "kind": "enum"
        },
        "2:16895:23978": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroU16Inner"
            ],
            "kind": "struct"
        },
        "2:51235:4285": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "aarch64",
                "neon",
                "float64x1x3_t"
            ],
            "kind": "struct"
        },
        "2:16352:3372": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "ptr",
                "mut_ptr",
                "SimdMutPtr"
            ],
            "kind": "trait"
        },
        "2:36835:24474": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "rt",
                "Placeholder"
            ],
            "kind": "struct"
        },
        "1:8901:3153": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "CommandArgs"
            ],
            "kind": "struct"
        },
        "11:785:2800": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "Values"
            ],
            "kind": "struct"
        },
        "2:11372:7401": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "SplitInclusiveMut"
            ],
            "kind": "struct"
        },
        "17:14587:16573": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "RelocationInfo"
            ],
            "kind": "struct"
        },
        "2:34247:7524": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "EscapeDebugInner"
            ],
            "kind": "enum"
        },
        "16:7428:12787": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "EvaluationResult"
            ],
            "kind": "enum"
        },
        "2:45717:3244": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i8x8"
            ],
            "kind": "struct"
        },
        "2:35711:24053": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "parser",
                "AddrKind"
            ],
            "kind": "enum"
        },
        "6:4700:11365": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "proc_threadinfo"
            ],
            "kind": "struct"
        },
        "11:1140:11709": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "VacantEntryRef"
            ],
            "kind": "struct"
        },
        "1:10585:18523": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_inner",
                "do_exec",
                "Reset"
            ],
            "kind": "struct"
        },
        "17:16138:17516": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "CsectAux32"
            ],
            "kind": "struct"
        },
        "1:5515:3149": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "Stdio"
            ],
            "kind": "struct"
        },
        "17:13116:13200": {
            "crate_id": 17,
            "path": [
                "object",
                "archive",
                "AixHeader"
            ],
            "kind": "struct"
        },
        "2:35733:3033": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "parser",
                "AddrParseError"
            ],
            "kind": "struct"
        },
        "17:11547:13040": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "note",
                "Note"
            ],
            "kind": "struct"
        },
        "16:6588:12764": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "index",
                "UnitIndex"
            ],
            "kind": "struct"
        },
        "2:45945:3257": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i32x4"
            ],
            "kind": "struct"
        },
        "2:3450:2592": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "drop",
                "Drop"
            ],
            "kind": "trait"
        },
        "5:1533:2797": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "Iter"
            ],
            "kind": "struct"
        },
        "2:34391:2982": {
            "crate_id": 2,
            "path": [
                "core",
                "ffi",
                "c_str",
                "Bytes"
            ],
            "kind": "struct"
        },
        "17:15678:17342": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageEnclaveConfig64"
            ],
            "kind": "struct"
        },
        "16:5831:12730": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "SectionBaseAddresses"
            ],
            "kind": "struct"
        },
        "1:8374:3020": {
            "crate_id": 1,
            "path": [
                "std",
                "net",
                "Shutdown"
            ],
            "kind": "enum"
        },
        "17:11841:13099": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "file",
                "MachOComdatIterator"
            ],
            "kind": "struct"
        },
        "1:9106:18286": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "list",
                "Position"
            ],
            "kind": "struct"
        },
        "2:34488:7714": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "cloned",
                "Cloned"
            ],
            "kind": "struct"
        },
        "17:14066:16540": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DylinkerCommand"
            ],
            "kind": "struct"
        },
        "2:15663:3233": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "masks",
                "Mask"
            ],
            "kind": "struct"
        },
        "2:44505:4211": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int8x8x3_t"
            ],
            "kind": "struct"
        },
        "2:44875:4248": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int32x2x4_t"
            ],
            "kind": "struct"
        },
        "1:2073:198": {
            "crate_id": 1,
            "path": [
                "std",
                "ffi",
                "os_str",
                "OsString"
            ],
            "kind": "struct"
        },
        "17:14260:16551": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "TwolevelHint"
            ],
            "kind": "struct"
        },
        "1:10288:3004": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "stdio",
                "Stdout"
            ],
            "kind": "struct"
        },
        "2:3274:7761": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "Neg"
            ],
            "kind": "trait"
        },
        "2:46153:3287": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u16x16"
            ],
            "kind": "struct"
        },
        "2:35938:226": {
            "crate_id": 2,
            "path": [
                "core",
                "result",
                "Result"
            ],
            "kind": "enum"
        },
        "9:390:11586": {
            "crate_id": 9,
            "path": [
                "miniz_oxide",
                "MZFlush"
            ],
            "kind": "enum"
        },
        "2:16439:3363": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "cmp",
                "ord",
                "SimdPartialOrd"
            ],
            "kind": "trait"
        },
        "17:12647:13159": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "comdat",
                "XcoffComdatIterator"
            ],
            "kind": "struct"
        },
        "1:9915:2867": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "os",
                "SplitPaths"
            ],
            "kind": "struct"
        },
        "2:51275:4289": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "aarch64",
                "neon",
                "float64x2x4_t"
            ],
            "kind": "struct"
        },
        "16:4913:12467": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwIdx"
            ],
            "kind": "struct"
        },
        "2:13598:7553": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "async_drop",
                "AsyncDropInPlace"
            ],
            "kind": "struct"
        },
        "5:7067:7473": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "in_place_drop",
                "InPlaceDstDataSrcBufDrop"
            ],
            "kind": "struct"
        },
        "17:14246:16550": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "TwolevelHintsCommand"
            ],
            "kind": "struct"
        },
        "16:5307:12700": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwOp"
            ],
            "kind": "struct"
        },
        "5:6005:2801": {
            "crate_id": 5,
            "path": [
                "alloc",
                "string",
                "Drain"
            ],
            "kind": "struct"
        },
        "2:7725:7536": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "zip",
                "TrustedRandomAccessNoCoerce"
            ],
            "kind": "trait"
        },
        "6:4952:11384": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "mach_task_basic_info"
            ],
            "kind": "struct"
        },
        "17:12494:13118": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "rich",
                "RichHeaderInfo"
            ],
            "kind": "struct"
        },
        "2:38207:7440": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "CharArraySearcher"
            ],
            "kind": "struct"
        },
        "2:44676:4228": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int16x4x2_t"
            ],
            "kind": "struct"
        },
        "11:671:2797": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "Iter"
            ],
            "kind": "struct"
        },
        "16:8259:12824": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "value",
                "Value"
            ],
            "kind": "enum"
        },
        "17:9886:12902": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "SymbolKind"
            ],
            "kind": "enum"
        },
        "2:35805:194": {
            "crate_id": 2,
            "path": [
                "core",
                "option",
                "Option"
            ],
            "kind": "enum"
        },
        "5:4570:26410": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "truncate",
                "Dropper"
            ],
            "kind": "struct"
        },
        "14:220:11730": {
            "crate_id": 14,
            "path": [
                "rustc_demangle",
                "SizeLimitExhausted"
            ],
            "kind": "struct"
        },
        "2:37621:7373": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "ArrayWindows"
            ],
            "kind": "struct"
        },
        "17:14235:16549": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DylibReference"
            ],
            "kind": "struct"
        },
        "17:11405:12988": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "section",
                "ElfSection"
            ],
            "kind": "struct"
        },
        "6:4924:11383": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "vm_statistics64"
            ],
            "kind": "struct"
        },
        "16:2458:11801": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugArangesOffset"
            ],
            "kind": "struct"
        },
        "6:4317:11338": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_background_policy"
            ],
            "kind": "struct"
        },
        "16:3778:11838": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwSect"
            ],
            "kind": "struct"
        },
        "6:3999:11309": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "lconv"
            ],
            "kind": "struct"
        },
        "16:7570:12795": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "pubtypes",
                "DebugPubTypes"
            ],
            "kind": "struct"
        },
        "2:38178:7438": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "CharSearcher"
            ],
            "kind": "struct"
        },
        "2:11486:7398": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "SplitN"
            ],
            "kind": "struct"
        },
        "1:953:2805": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "IntoValues"
            ],
            "kind": "struct"
        },
        "6:1411:9092": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sysdir_search_path_domain_mask_t"
            ],
            "kind": "enum"
        },
        "6:4997:11390": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ifkpi"
            ],
            "kind": "struct"
        },
        "6:1148:3081": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "sockaddr_un"
            ],
            "kind": "struct"
        },
        "16:4856:12456": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwOrd"
            ],
            "kind": "struct"
        },
        "16:5863:12732": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "CieOrFde"
            ],
            "kind": "enum"
        },
        "17:10954:12937": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "archive",
                "ArchiveKind"
            ],
            "kind": "enum"
        },
        "16:2936:11822": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "SectionId"
            ],
            "kind": "enum"
        },
        "1:1861:2857": {
            "crate_id": 1,
            "path": [
                "std",
                "env",
                "VarsOs"
            ],
            "kind": "struct"
        },
        "2:45842:3286": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u16x8"
            ],
            "kind": "struct"
        },
        "16:2808:11817": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugTypesOffset"
            ],
            "kind": "struct"
        },
        "17:9807:12886": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "SectionKind"
            ],
            "kind": "enum"
        },
        "5:1614:2804": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "IntoKeys"
            ],
            "kind": "struct"
        },
        "6:3863:11299": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "dqblk"
            ],
            "kind": "struct"
        },
        "18:604:17556": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "SearcherRev"
            ],
            "kind": "struct"
        },
        "20:0:2309": {
            "crate_id": 20,
            "path": [
                "lazy_to_map_derive"
            ],
            "kind": "module"
        },
        "5:3277:100": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "BTreeSet"
            ],
            "kind": "struct"
        },
        "1:1974:2887": {
            "crate_id": 1,
            "path": [
                "std",
                "error",
                "Report"
            ],
            "kind": "struct"
        },
        "2:38687:24473": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "async_drop",
                "Noop"
            ],
            "kind": "struct"
        },
        "5:2182:2837": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "CursorMutKey"
            ],
            "kind": "struct"
        },
        "2:11514:7399": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "SplitNMut"
            ],
            "kind": "struct"
        },
        "1:5772:3175": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "barrier",
                "BarrierWaitResult"
            ],
            "kind": "struct"
        },
        "11:1564:11710": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "rustc_entry",
                "RustcEntry"
            ],
            "kind": "enum"
        },
        "5:5798:7471": {
            "crate_id": 5,
            "path": [
                "alloc",
                "string",
                "retain",
                "SetLenOnDrop"
            ],
            "kind": "struct"
        },
        "6:3833:11296": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "Dl_info"
            ],
            "kind": "struct"
        },
        "2:26027:7503": {
            "crate_id": 2,
            "path": [
                "core",
                "error",
                "tags",
                "Ref"
            ],
            "kind": "struct"
        },
        "6:3790:11292": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "fpunchhole_t"
            ],
            "kind": "struct"
        },
        "2:10836:24254": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "sort",
                "merge",
                "MergeHole"
            ],
            "kind": "struct"
        },
        "2:27270:3226": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "AddAssign"
            ],
            "kind": "trait"
        },
        "6:4221:11326": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sembuf"
            ],
            "kind": "struct"
        },
        "16:2748:11814": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugStrOffset"
            ],
            "kind": "struct"
        },
        "16:6246:206": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "Pointer"
            ],
            "kind": "enum"
        },
        "2:36105:86": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicI16"
            ],
            "kind": "struct"
        },
        "2:34526:7721": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "filter",
                "Filter"
            ],
            "kind": "struct"
        },
        "11:2551:28680": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "Fallibility"
            ],
            "kind": "enum"
        },
        "1:2485:2929": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "canonicalize"
            ],
            "kind": "function"
        },
        "1:11831:1692": {
            "crate_id": 1,
            "path": [
                "std",
                "slice"
            ],
            "kind": "primitive"
        },
        "2:45688:3291": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u32x2"
            ],
            "kind": "struct"
        },
        "1:2318:2919": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "read"
            ],
            "kind": "function"
        },
        "6:4077:11312": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "proc_taskallinfo"
            ],
            "kind": "struct"
        },
        "17:14560:16572": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "Nlist64"
            ],
            "kind": "struct"
        },
        "2:25967:3157": {
            "crate_id": 2,
            "path": [
                "core",
                "convert",
                "Infallible"
            ],
            "kind": "enum"
        },
        "2:34588:7726": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "map",
                "Map"
            ],
            "kind": "struct"
        },
        "1:1089:2812": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "OccupiedEntry"
            ],
            "kind": "struct"
        },
        "17:11702:13046": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "attributes",
                "AttributesSubsectionIterator"
            ],
            "kind": "struct"
        },
        "1:10932:18521": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "sync",
                "mutex",
                "pthread",
                "AllocatedMutex"
            ],
            "kind": "struct"
        },
        "1:4221:3064": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "fs",
                "DirBuilderExt"
            ],
            "kind": "trait"
        },
        "1:7997:2937": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "OpenOptions"
            ],
            "kind": "struct"
        },
        "17:14212:16548": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DylibModule64"
            ],
            "kind": "struct"
        },
        "2:36595:7339": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "num",
                "Binary"
            ],
            "kind": "struct"
        },
        "1:2232:128": {
            "crate_id": 1,
            "path": [
                "std",
                "ffi",
                "os_str",
                "Display"
            ],
            "kind": "struct"
        },
        "6:4175:11321": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sockaddr_inarp"
            ],
            "kind": "struct"
        },
        "2:38513:7917": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "IsNotEmpty"
            ],
            "kind": "struct"
        },
        "16:4468:12344": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwAte"
            ],
            "kind": "struct"
        },
        "2:37647:7371": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "ArrayChunks"
            ],
            "kind": "struct"
        },
        "6:4609:11360": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "vol_attributes_attr_t"
            ],
            "kind": "struct"
        },
        "2:5333:3012": {
            "crate_id": 2,
            "path": [
                "core",
                "io",
                "borrowed_buf",
                "BorrowedBuf"
            ],
            "kind": "struct"
        },
        "2:2039:7690": {
            "crate_id": 2,
            "path": [
                "core",
                "mem",
                "Discriminant"
            ],
            "kind": "struct"
        },
        "17:14723:17280": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageDosHeader"
            ],
            "kind": "struct"
        },
        "16:3810:11847": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwSectV2"
            ],
            "kind": "struct"
        },
        "17:12076:13058": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "section",
                "MachOSection"
            ],
            "kind": "struct"
        },
        "1:10864:2915": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "os_str",
                "bytes",
                "Buf"
            ],
            "kind": "struct"
        },
        "16:2303:11766": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "Format"
            ],
            "kind": "enum"
        },
        "2:33429:215": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "range",
                "RangeTo"
            ],
            "kind": "struct"
        },
        "1:9126:12785": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "select",
                "Operation"
            ],
            "kind": "struct"
        },
        "1:10439:18656": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "FileAttr"
            ],
            "kind": "struct"
        },
        "16:7539:12792": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "pubnames",
                "DebugPubNames"
            ],
            "kind": "struct"
        },
        "2:2937:2948": {
            "crate_id": 2,
            "path": [
                "core",
                "convert",
                "num",
                "private",
                "Sealed"
            ],
            "kind": "trait"
        },
        "11:1907:2816": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "Difference"
            ],
            "kind": "struct"
        },
        "9:176:11690": {
            "crate_id": 9,
            "path": [
                "miniz_oxide",
                "inflate",
                "stream",
                "InflateState"
            ],
            "kind": "struct"
        },
        "17:13455:16034": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "ProgramHeader64"
            ],
            "kind": "struct"
        },
        "1:2467:2923": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "metadata"
            ],
            "kind": "function"
        },
        "17:11313:12979": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "import",
                "ImportObjectData"
            ],
            "kind": "struct"
        },
        "16:872:29140": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "endian_slice",
                "DebugLen"
            ],
            "kind": "struct"
        },
        "6:5279:11536": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "aarch64",
                "align",
                "__darwin_arm_thread_state64"
            ],
            "kind": "struct"
        },
        "17:11621:13016": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "version",
                "VersionTable"
            ],
            "kind": "struct"
        },
        "2:10654:2953": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "BuildHasher"
            ],
            "kind": "trait"
        },
        "2:3830:70": {
            "crate_id": 2,
            "path": [
                "core",
                "any",
                "Any"
            ],
            "kind": "trait"
        },
        "16:8136:12817": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "EntriesCursor"
            ],
            "kind": "struct"
        },
        "2:4853:7504": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "BorrowRefMut"
            ],
            "kind": "struct"
        },
        "6:4773:11370": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sockaddr_storage"
            ],
            "kind": "struct"
        },
        "17:11799:13098": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "dyld_cache",
                "DyldCacheImageIterator"
            ],
            "kind": "struct"
        },
        "16:3475:11828": {
            "crate_id": 16,
            "path": [
                "gimli",
                "arch",
                "RiscV"
            ],
            "kind": "struct"
        },
        "2:44985:4259": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "float32x2x3_t"
            ],
            "kind": "struct"
        },
        "1:8046:2796": {
            "crate_id": 1,
            "path": [
                "std",
                "hash",
                "random",
                "RandomState"
            ],
            "kind": "struct"
        },
        "17:10877:12919": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "DynamicRelocationIterator"
            ],
            "kind": "struct"
        },
        "5:6525:3380": {
            "crate_id": 5,
            "path": [
                "alloc",
                "task",
                "LocalWake"
            ],
            "kind": "trait"
        },
        "1:10975:3178": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "sync",
                "once",
                "queue",
                "Once"
            ],
            "kind": "struct"
        },
        "1:2010:787": {
            "crate_id": 1,
            "path": [
                "std",
                "ffi"
            ],
            "kind": "module"
        },
        "17:12887:12926": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "ObjectMap"
            ],
            "kind": "struct"
        },
        "2:3740:7331": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "unsize",
                "DispatchFromDyn"
            ],
            "kind": "trait"
        },
        "1:10603:18527": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_inner",
                "posix_spawn",
                "PosixSpawnattr"
            ],
            "kind": "struct"
        },
        "2:26998:7762": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "Rem"
            ],
            "kind": "trait"
        },
        "2:34475:2980": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "chain",
                "Chain"
            ],
            "kind": "struct"
        },
        "18:470:29987": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "twoway",
                "Shift"
            ],
            "kind": "enum"
        },
        "17:11042:12942": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "archive",
                "ArchiveMember"
            ],
            "kind": "struct"
        },
        "2:36911:7336": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Alignment"
            ],
            "kind": "enum"
        },
        "2:35052:7708": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "sources",
                "repeat_with",
                "RepeatWith"
            ],
            "kind": "struct"
        },
        "17:14298:16554": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "RpathCommand"
            ],
            "kind": "struct"
        },
        "6:4752:11367": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "pthread_rwlock_t"
            ],
            "kind": "struct"
        },
        "17:12485:13154": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "resource",
                "ResourceNameOrId"
            ],
            "kind": "enum"
        },
        "16:5385:12719": {
            "crate_id": 16,
            "path": [
                "gimli",
                "endianity",
                "LittleEndian"
            ],
            "kind": "struct"
        },
        "17:15039:17294": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "AnonObjectHeaderBigobj"
            ],
            "kind": "struct"
        },
        "9:355:11601": {
            "crate_id": 9,
            "path": [
                "miniz_oxide",
                "inflate",
                "TINFLStatus"
            ],
            "kind": "enum"
        },
        "17:15092:17295": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageSymbolBytes"
            ],
            "kind": "struct"
        },
        "2:13581:24581": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "async_drop",
                "AsyncDropOwning"
            ],
            "kind": "struct"
        },
        "9:0:2449": {
            "crate_id": 9,
            "path": [
                "miniz_oxide"
            ],
            "kind": "module"
        },
        "1:1844:696": {
            "crate_id": 1,
            "path": [
                "std",
                "env"
            ],
            "kind": "module"
        },
        "17:11142:12917": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "symbol",
                "SymbolTable"
            ],
            "kind": "struct"
        },
        "1:3300:19169": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "stdio",
                "StdoutRaw"
            ],
            "kind": "struct"
        },
        "17:10759:12917": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SymbolTable"
            ],
            "kind": "struct"
        },
        "2:34175:24159": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "convert",
                "CharErrorKind"
            ],
            "kind": "enum"
        },
        "5:1259:27556": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "dedup_sorted_iter",
                "DedupSortedIter"
            ],
            "kind": "struct"
        },
        "2:44298:4195": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int64x1_t"
            ],
            "kind": "struct"
        },
        "5:3339:2817": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "SymmetricDifference"
            ],
            "kind": "struct"
        },
        "1:2635:2992": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "buffered",
                "bufreader",
                "BufReader"
            ],
            "kind": "struct"
        },
        "16:7755:12806": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "str",
                "DebugLineStr"
            ],
            "kind": "struct"
        },
        "2:24445:7336": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "alignment",
                "Alignment"
            ],
            "kind": "struct"
        },
        "10:44:11695": {
            "crate_id": 10,
            "path": [
                "adler",
                "Adler32"
            ],
            "kind": "struct"
        },
        "5:3352:26391": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "IntersectionInner"
            ],
            "kind": "enum"
        },
        "2:35627:24490": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "ip_addr",
                "fmt",
                "Span"
            ],
            "kind": "struct"
        },
        "16:3614:11829": {
            "crate_id": 16,
            "path": [
                "gimli",
                "arch",
                "X86"
            ],
            "kind": "struct"
        },
        "1:8944:3156": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "ExitCode"
            ],
            "kind": "struct"
        },
        "16:8175:12819": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "EntriesTreeNode"
            ],
            "kind": "struct"
        },
        "6:4083:11313": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "xsw_usage"
            ],
            "kind": "struct"
        },
        "17:11419:12917": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "symbol",
                "SymbolTable"
            ],
            "kind": "struct"
        },
        "5:4142:2801": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "drain",
                "Drain"
            ],
            "kind": "struct"
        },
        "1:1625:2815": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "set",
                "Intersection"
            ],
            "kind": "struct"
        },
        "17:11102:12951": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "section",
                "CoffSegment"
            ],
            "kind": "struct"
        },
        "16:7769:12807": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "UnitOffset"
            ],
            "kind": "struct"
        },
        "1:4771:3072": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "fd",
                "raw",
                "FromRawFd"
            ],
            "kind": "trait"
        },
        "2:44895:4250": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int32x4x3_t"
            ],
            "kind": "struct"
        },
        "17:14402:16561": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "BuildToolVersion"
            ],
            "kind": "struct"
        },
        "1:11344:3031": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "net",
                "TcpStream"
            ],
            "kind": "struct"
        },
        "2:16313:7791": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "ptr",
                "const_ptr",
                "SimdConstPtr",
                "with_exposed_provenance"
            ],
            "kind": "function"
        },
        "17:13972:16533": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "Dylib"
            ],
            "kind": "struct"
        },
        "1:3393:3005": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "stdio",
                "StdoutLock"
            ],
            "kind": "struct"
        },
        "6:1064:8948": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "ifaddrs"
            ],
            "kind": "struct"
        },
        "2:3491:2851": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "index",
                "IndexMut"
            ],
            "kind": "trait"
        },
        "17:9781:12900": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "BinaryFormat"
            ],
            "kind": "enum"
        },
        "6:5190:11526": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "if_data"
            ],
            "kind": "struct"
        },
        "2:31954:7772": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "BitAndAssign"
            ],
            "kind": "trait"
        },
        "1:7144:18517": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "thread_local",
                "abort_on_dtor_unwind",
                "DtorUnwindGuard"
            ],
            "kind": "struct"
        },
        "2:35986:2798": {
            "crate_id": 2,
            "path": [
                "core",
                "result",
                "IterMut"
            ],
            "kind": "struct"
        },
        "2:32064:7774": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "BitXorAssign"
            ],
            "kind": "trait"
        },
        "16:7111:28808": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "lookup",
                "PubStuffHeader"
            ],
            "kind": "struct"
        },
        "6:3767:8589": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sigaction"
            ],
            "kind": "struct"
        },
        "2:37793:7394": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "RSplit"
            ],
            "kind": "struct"
        },
        "2:33361:7777": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "index_range",
                "IndexRange"
            ],
            "kind": "struct"
        },
        "17:11853:13100": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "file",
                "MachOComdat"
            ],
            "kind": "struct"
        },
        "2:38567:3229": {
            "crate_id": 2,
            "path": [
                "core",
                "time",
                "TryFromFloatSecsError"
            ],
            "kind": "struct"
        },
        "2:46821:3321": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "f64x8"
            ],
            "kind": "struct"
        },
        "16:6342:29154": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "dwarf",
                "RangeIterInner"
            ],
            "kind": "enum"
        },
        "1:8668:3140": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "StripPrefixError"
            ],
            "kind": "struct"
        },
        "6:4577:11356": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "attrlist"
            ],
            "kind": "struct"
        },
        "2:38699:219": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "ready",
                "Ready"
            ],
            "kind": "struct"
        },
        "17:11825:13078": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "file",
                "MachOFile"
            ],
            "kind": "struct"
        },
        "17:12572:12917": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "symbol",
                "SymbolTable"
            ],
            "kind": "struct"
        },
        "16:7559:12794": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "pubtypes",
                "PubTypesEntry"
            ],
            "kind": "struct"
        },
        "17:15102:17296": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageSymbolEx"
            ],
            "kind": "struct"
        },
        "17:11788:13097": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "dyld_cache",
                "DyldSubCache"
            ],
            "kind": "struct"
        },
        "1:9222:162": {
            "crate_id": 1,
            "path": [
                "std",
                "time",
                "Instant"
            ],
            "kind": "struct"
        },
        "2:4723:221": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "RefCell"
            ],
            "kind": "struct"
        },
        "17:16249:17525": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "DwarfAux64"
            ],
            "kind": "struct"
        },
        "2:26044:2595": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "Sized"
            ],
            "kind": "trait"
        },
        "2:16768:24167": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "fmt",
                "Part"
            ],
            "kind": "enum"
        },
        "2:8260:7712": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "accum",
                "Product"
            ],
            "kind": "trait"
        },
        "2:16223:3367": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "num",
                "int",
                "SimdInt"
            ],
            "kind": "trait"
        },
        "1:11225:18316": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "wtf8",
                "Wtf8Buf"
            ],
            "kind": "struct"
        },
        "14:214:11729": {
            "crate_id": 14,
            "path": [
                "rustc_demangle",
                "TryDemangleError"
            ],
            "kind": "struct"
        },
        "2:35994:2622": {
            "crate_id": 2,
            "path": [
                "core",
                "result",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "16:4976:12484": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwLns"
            ],
            "kind": "struct"
        },
        "17:11634:13014": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "version",
                "VerdefIterator"
            ],
            "kind": "struct"
        },
        "16:7473:12788": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "Expression"
            ],
            "kind": "struct"
        },
        "2:37146:3135": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "sip",
                "State"
            ],
            "kind": "struct"
        },
        "1:5429:3147": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "ChildStdout"
            ],
            "kind": "struct"
        },
        "16:4352:12274": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwAt"
            ],
            "kind": "struct"
        },
        "18:410:17562": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "rabinkarp",
                "NeedleHash"
            ],
            "kind": "struct"
        },
        "2:34466:2848": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "by_ref_sized",
                "ByRefSized"
            ],
            "kind": "struct"
        },
        "2:37109:2954": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "sip",
                "SipHasher13"
            ],
            "kind": "struct"
        },
        "6:5184:11525": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "timeval32"
            ],
            "kind": "struct"
        },
        "1:6606:3183": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "poison",
                "TryLockError"
            ],
            "kind": "enum"
        },
        "11:2539:25063": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "bitmask",
                "BitMask"
            ],
            "kind": "struct"
        },
        "2:36419:90": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicIsize"
            ],
            "kind": "struct"
        },
        "1:6660:3188": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "reentrant_lock",
                "ReentrantLock"
            ],
            "kind": "struct"
        },
        "2:44223:4188": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly8x8_t"
            ],
            "kind": "struct"
        },
        "2:26574:7760": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "Mul"
            ],
            "kind": "trait"
        },
        "16:5995:12736": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "FrameDescriptionEntry"
            ],
            "kind": "struct"
        },
        "1:2705:2993": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "buffered",
                "bufwriter",
                "BufWriter"
            ],
            "kind": "struct"
        },
        "1:1637:2817": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "set",
                "SymmetricDifference"
            ],
            "kind": "struct"
        },
        "17:15445:17328": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageDynamicRelocation64V2"
            ],
            "kind": "struct"
        },
        "2:35018:3178": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "sources",
                "once",
                "Once"
            ],
            "kind": "struct"
        },
        "2:24424:7467": {
            "crate_id": 2,
            "path": [
                "core",
                "mem",
                "maybe_uninit",
                "MaybeUninit"
            ],
            "kind": "union"
        },
        "17:15720:17344": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageDebugDirectory"
            ],
            "kind": "struct"
        },
        "2:2613:7792": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "with_exposed_provenance_mut"
            ],
            "kind": "function"
        },
        "1:3303:19168": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "stdio",
                "StderrRaw"
            ],
            "kind": "struct"
        },
        "2:38157:7437": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "SearchStep"
            ],
            "kind": "enum"
        },
        "2:2803:195": {
            "crate_id": 2,
            "path": [
                "core",
                "cmp",
                "Ord"
            ],
            "kind": "trait"
        },
        "16:2612:11808": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugMacinfoOffset"
            ],
            "kind": "struct"
        },
        "1:9521:127": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "DirBuilder"
            ],
            "kind": "struct"
        },
        "1:11106:2758": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "sync",
                "thread_parking",
                "darwin",
                "Parker"
            ],
            "kind": "struct"
        },
        "1:675:2773": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace",
                "BacktraceSymbol"
            ],
            "kind": "struct"
        },
        "2:27538:7765": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "RemAssign"
            ],
            "kind": "trait"
        },
        "6:4831:11376": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "processor_set_load_info"
            ],
            "kind": "struct"
        },
        "1:1609:2797": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "set",
                "Iter"
            ],
            "kind": "struct"
        },
        "17:15836:17353": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageCor20Header"
            ],
            "kind": "struct"
        },
        "1:11239:18341": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "wtf8",
                "Wtf8"
            ],
            "kind": "struct"
        },
        "2:3669:7489": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "try_trait",
                "Residual"
            ],
            "kind": "trait"
        },
        "2:35833:2797": {
            "crate_id": 2,
            "path": [
                "core",
                "option",
                "Iter"
            ],
            "kind": "struct"
        },
        "2:8342:129": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "double_ended",
                "DoubleEndedIterator"
            ],
            "kind": "trait"
        },
        "2:38039:7423": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "LinesAny"
            ],
            "kind": "struct"
        },
        "17:10092:12907": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "SymbolFlags"
            ],
            "kind": "enum"
        },
        "1:11405:3032": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "net",
                "UdpSocket"
            ],
            "kind": "struct"
        },
        "5:4506:26410": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "drop",
                "Dropper"
            ],
            "kind": "struct"
        },
        "17:15333:17316": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageBoundForwarderRef"
            ],
            "kind": "struct"
        },
        "6:4588:11357": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "attrreference_t"
            ],
            "kind": "struct"
        },
        "16:867:29136": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "endian_slice",
                "DebugByte"
            ],
            "kind": "struct"
        },
        "6:4204:11324": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "in6_pktinfo"
            ],
            "kind": "struct"
        },
        "2:45025:4263": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "float32x4x4_t"
            ],
            "kind": "struct"
        },
        "6:4880:11381": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "if_data64"
            ],
            "kind": "struct"
        },
        "6:4299:11335": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_time_constraint_policy"
            ],
            "kind": "struct"
        },
        "17:13674:16519": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DyldCacheHeader"
            ],
            "kind": "struct"
        },
        "6:4410:11348": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "vm_statistics"
            ],
            "kind": "struct"
        },
        "16:2374:11797": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "Register"
            ],
            "kind": "struct"
        },
        "2:34794:2981": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "take",
                "Take"
            ],
            "kind": "struct"
        },
        "16:6231:12743": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "CallFrameInstructionIter"
            ],
            "kind": "struct"
        },
        "1:5254:203": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "Path"
            ],
            "kind": "struct"
        },
        "16:7061:12783": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "loclists",
                "LocationListEntry"
            ],
            "kind": "struct"
        },
        "16:2394:11798": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugAbbrevOffset"
            ],
            "kind": "struct"
        },
        "5:7158:264": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "Vec"
            ],
            "kind": "struct"
        },
        "2:44556:4216": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint8x8x2_t"
            ],
            "kind": "struct"
        },
        "5:5534:7365": {
            "crate_id": 5,
            "path": [
                "alloc",
                "slice",
                "Concat"
            ],
            "kind": "trait"
        },
        "16:7813:12809": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "DebugInfoUnitHeadersIter"
            ],
            "kind": "struct"
        },
        "2:10412:7345": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "LowerExp"
            ],
            "kind": "trait"
        },
        "2:38299:7443": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "CharPredicateSearcher"
            ],
            "kind": "struct"
        },
        "16:6120:12742": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "RegisterRule"
            ],
            "kind": "enum"
        },
        "16:2708:11812": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugRngListsBase"
            ],
            "kind": "struct"
        },
        "2:45770:3262": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i64x1"
            ],
            "kind": "struct"
        },
        "6:4250:11330": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sa_endpoints_t"
            ],
            "kind": "struct"
        },
        "5:7556:210": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "Range"
            ],
            "kind": "struct"
        },
        "1:8563:3135": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "State"
            ],
            "kind": "enum"
        },
        "2:38782:3373": {
            "crate_id": 2,
            "path": [
                "core",
                "task",
                "wake",
                "ContextBuilder"
            ],
            "kind": "struct"
        },
        "2:44406:4202": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint16x8_t"
            ],
            "kind": "struct"
        },
        "17:16050:16022": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "SectionHeader64"
            ],
            "kind": "struct"
        },
        "2:3289:7326": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "async_function",
                "AsyncFnMut"
            ],
            "kind": "trait"
        },
        "2:45085:4269": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int64x2x4_t"
            ],
            "kind": "struct"
        },
        "2:15452:26024": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "swizzle",
                "deinterleave",
                "Odd"
            ],
            "kind": "struct"
        },
        "2:11227:2798": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "IterMut"
            ],
            "kind": "struct"
        },
        "17:13387:16029": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Rel32"
            ],
            "kind": "struct"
        },
        "1:4769:3070": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "fd",
                "raw",
                "AsRawFd"
            ],
            "kind": "trait"
        },
        "6:4991:11389": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "__c_anonymous_ifk_data"
            ],
            "kind": "union"
        },
        "2:4884:2753": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "UnsafeCell"
            ],
            "kind": "struct"
        },
        "2:44322:4198": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int8x16_t"
            ],
            "kind": "struct"
        },
        "17:15116:17297": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageSymbolExBytes"
            ],
            "kind": "struct"
        },
        "6:4435:11350": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "rusage_info_v0"
            ],
            "kind": "struct"
        },
        "2:38692:150": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "future",
                "Future"
            ],
            "kind": "trait"
        },
        "2:2970:258": {
            "crate_id": 2,
            "path": [
                "core",
                "convert",
                "TryInto"
            ],
            "kind": "trait"
        },
        "16:6991:28926": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "loclists",
                "LocListsFormat"
            ],
            "kind": "enum"
        },
        "1:9214:3186": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "rwlock",
                "MappedRwLockWriteGuard"
            ],
            "kind": "struct"
        },
        "18:387:17560": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "prefilter",
                "PrefilterFn"
            ],
            "kind": "struct"
        },
        "17:14311:16555": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "LinkeditDataCommand"
            ],
            "kind": "struct"
        },
        "17:15138:17299": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageAuxSymbolFunction"
            ],
            "kind": "struct"
        },
        "17:11730:13048": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "attributes",
                "AttributesSubsubsectionIterator"
            ],
            "kind": "struct"
        },
        "17:10155:12719": {
            "crate_id": 17,
            "path": [
                "object",
                "endian",
                "LittleEndian"
            ],
            "kind": "struct"
        },
        "16:150:11771": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "util",
                "ArrayVec"
            ],
            "kind": "struct"
        },
        "17:9938:12904": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "RelocationKind"
            ],
            "kind": "enum"
        },
        "1:9503:2940": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "ReadDir"
            ],
            "kind": "struct"
        },
        "16:6317:12746": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "dwarf",
                "Unit"
            ],
            "kind": "struct"
        },
        "2:4796:7502": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "BorrowRef"
            ],
            "kind": "struct"
        },
        "17:12328:13111": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "export",
                "ExportTable"
            ],
            "kind": "struct"
        },
        "16:8155:12818": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "EntriesTree"
            ],
            "kind": "struct"
        },
        "2:24830:7542": {
            "crate_id": 2,
            "path": [
                "core",
                "cmp",
                "Reverse"
            ],
            "kind": "struct"
        },
        "6:5312:11540": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "align",
                "in6_addr"
            ],
            "kind": "struct"
        },
        "11:1580:11711": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "rustc_entry",
                "RustcOccupiedEntry"
            ],
            "kind": "struct"
        },
        "16:3014:11824": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DwarfFileType"
            ],
            "kind": "enum"
        },
        "5:1424:2814": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "entry",
                "OccupiedError"
            ],
            "kind": "struct"
        },
        "18:371:29976": {
            "crate_id": 18,
            "path": [
                "memchr",
                "cow",
                "Imp"
            ],
            "kind": "struct"
        },
        "2:34190:7528": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "convert",
                "CharTryFromError"
            ],
            "kind": "struct"
        },
        "1:5644:220": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "Receiver"
            ],
            "kind": "struct"
        },
        "17:12863:12925": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "SymbolMapName"
            ],
            "kind": "struct"
        },
        "16:3196:11826": {
            "crate_id": 16,
            "path": [
                "gimli",
                "arch",
                "AArch64"
            ],
            "kind": "struct"
        },
        "2:10770:7887": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "sort",
                "InsertionHole"
            ],
            "kind": "struct"
        },
        "1:6379:186": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mutex",
                "Mutex"
            ],
            "kind": "struct"
        },
        "16:5037:12499": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwLnct"
            ],
            "kind": "struct"
        },
        "5:7767:7450": {
            "crate_id": 5,
            "path": [
                "alloc",
                "string",
                "FromUtf16Error"
            ],
            "kind": "struct"
        },
        "6:1309:9089": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "timezone"
            ],
            "kind": "enum"
        },
        "5:1586:2799": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "Keys"
            ],
            "kind": "struct"
        },
        "17:16093:17513": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "Symbol64"
            ],
            "kind": "struct"
        },
        "2:46647:3288": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u16x32"
            ],
            "kind": "struct"
        },
        "2:35858:3120": {
            "crate_id": 2,
            "path": [
                "core",
                "panic",
                "location",
                "Location"
            ],
            "kind": "struct"
        },
        "2:16577:24587": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "bignum",
                "tests",
                "Big8x3"
            ],
            "kind": "struct"
        },
        "2:7619:2630": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "zip",
                "zip"
            ],
            "kind": "function"
        },
        "2:37879:7398": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "SplitN"
            ],
            "kind": "struct"
        },
        "2:37117:24592": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "sip",
                "SipHasher24"
            ],
            "kind": "struct"
        },
        "1:8498:3115": {
            "crate_id": 1,
            "path": [
                "std",
                "panic",
                "BacktraceStyle"
            ],
            "kind": "enum"
        },
        "16:6648:12768": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "LineRows"
            ],
            "kind": "struct"
        },
        "17:10661:12915": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "ComdatIterator"
            ],
            "kind": "struct"
        },
        "5:7534:26348": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "merge_iter",
                "Peeked"
            ],
            "kind": "enum"
        },
        "6:1040:8946": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "sockaddr_in6"
            ],
            "kind": "struct"
        },
        "5:7548:2622": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "1:9072:115": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "context",
                "Context"
            ],
            "kind": "struct"
        },
        "17:11510:12985": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "comdat",
                "ElfComdat"
            ],
            "kind": "struct"
        },
        "2:34659:7731": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "skip_while",
                "SkipWhile"
            ],
            "kind": "struct"
        },
        "17:15635:17339": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageAlphaRuntimeFunctionEntry"
            ],
            "kind": "struct"
        },
        "2:16311:24909": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "ptr",
                "const_ptr",
                "SimdConstPtr",
                "with_addr"
            ],
            "kind": "function"
        },
        "16:7168:12785": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "Operation"
            ],
            "kind": "enum"
        },
        "17:15410:17324": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageDynamicRelocationTable"
            ],
            "kind": "struct"
        },
        "16:6849:12773": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "IncompleteLineProgram"
            ],
            "kind": "struct"
        },
        "2:12989:7406": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "ReverseSearcher"
            ],
            "kind": "trait"
        },
        "5:4307:2963": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "into_iter",
                "try_fold",
                "Guard"
            ],
            "kind": "struct"
        },
        "17:11443:12994": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "symbol",
                "ElfSymbolTable"
            ],
            "kind": "struct"
        },
        "16:6047:12738": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "UnwindTable"
            ],
            "kind": "struct"
        },
        "18:485:29974": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "twoway",
                "SuffixKind"
            ],
            "kind": "enum"
        },
        "13:101:28705": {
            "crate_id": 13,
            "path": [
                "std_detect",
                "detect",
                "arch",
                "aarch64",
                "Feature"
            ],
            "kind": "enum"
        },
        "11:835:2806": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "RawEntryBuilderMut"
            ],
            "kind": "struct"
        },
        "2:44280:4193": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint32x2_t"
            ],
            "kind": "struct"
        },
        "2:44249:4190": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint16x4_t"
            ],
            "kind": "struct"
        },
        "2:44625:4223": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly8x8x3_t"
            ],
            "kind": "struct"
        },
        "0:9:2314": {
            "crate_id": 0,
            "path": [
                "usage",
                "Test2"
            ],
            "kind": "struct"
        },
        "1:11188:3135": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "thread_local",
                "fast_local",
                "eager",
                "State"
            ],
            "kind": "enum"
        },
        "17:11089:12952": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "section",
                "CoffSegmentIterator"
            ],
            "kind": "struct"
        },
        "5:3940:2802": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "linked_list",
                "ExtractIf"
            ],
            "kind": "struct"
        },
        "16:8073:12814": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "Attribute"
            ],
            "kind": "struct"
        },
        "10:36:28661": {
            "crate_id": 10,
            "path": [
                "adler",
                "algo",
                "U32X4"
            ],
            "kind": "struct"
        },
        "17:13986:16534": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DylibCommand"
            ],
            "kind": "struct"
        },
        "17:597:12899": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "Symbol"
            ],
            "kind": "struct"
        },
        "2:44905:4251": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int32x4x4_t"
            ],
            "kind": "struct"
        },
        "2:45055:4266": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int64x1x4_t"
            ],
            "kind": "struct"
        },
        "2:14001:2824": {
            "crate_id": 2,
            "path": [
                "core",
                "alloc",
                "Allocator"
            ],
            "kind": "trait"
        },
        "16:6927:12776": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "FileEntryFormat"
            ],
            "kind": "struct"
        },
        "1:2719:18531": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "buffered",
                "bufwriter",
                "flush_buf",
                "BufGuard"
            ],
            "kind": "struct"
        },
        "2:15435:26021": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "swizzle",
                "interleave",
                "Hi"
            ],
            "kind": "struct"
        },
        "1:9936:18360": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "os",
                "EnvStrDebug"
            ],
            "kind": "struct"
        },
        "2:12783:7400": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "SplitInclusive"
            ],
            "kind": "struct"
        },
        "2:38067:7410": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "EncodeUtf16"
            ],
            "kind": "struct"
        },
        "2:34576:7734": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "intersperse",
                "Intersperse"
            ],
            "kind": "struct"
        },
        "16:6758:11739": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "LineRow"
            ],
            "kind": "struct"
        },
        "2:26103:7741": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "PhantomPinned"
            ],
            "kind": "struct"
        },
        "6:4825:11375": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "processor_set_basic_info"
            ],
            "kind": "struct"
        },
        "2:36183:87": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicI32"
            ],
            "kind": "struct"
        },
        "2:10659:2955": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "BuildHasherDefault"
            ],
            "kind": "struct"
        },
        "1:8931:3155": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "ExitStatusError"
            ],
            "kind": "struct"
        },
        "17:11227:12947": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "comdat",
                "CoffComdat"
            ],
            "kind": "struct"
        },
        "17:10828:29964": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SymbolIteratorInternal"
            ],
            "kind": "enum"
        },
        "1:3557:2963": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "Guard"
            ],
            "kind": "struct"
        },
        "2:16733:23960": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "flt2dec",
                "decoder",
                "FullDecoded"
            ],
            "kind": "enum"
        },
        "5:1604:2803": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "ValuesMut"
            ],
            "kind": "struct"
        },
        "17:12150:13064": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "symbol",
                "MachOSymbol"
            ],
            "kind": "struct"
        },
        "17:11166:12955": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "symbol",
                "CoffSymbolTable"
            ],
            "kind": "struct"
        },
        "17:16105:17514": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "FileAux32"
            ],
            "kind": "struct"
        },
        "1:11853:13": {
            "crate_id": 1,
            "path": [
                "std",
                "fn"
            ],
            "kind": "primitive"
        },
        "17:10534:29955": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SegmentIteratorInternal"
            ],
            "kind": "enum"
        },
        "1:11798:2779": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace_rs",
                "types",
                "BytesOrWideString"
            ],
            "kind": "enum"
        },
        "5:7206:26423": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "retain_mut",
                "BackshiftOnDrop"
            ],
            "kind": "struct"
        },
        "2:46692:3259": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i32x16"
            ],
            "kind": "struct"
        },
        "2:36222:94": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicU32"
            ],
            "kind": "struct"
        },
        "2:12974:7405": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "Pattern"
            ],
            "kind": "trait"
        },
        "2:37349:7903": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "sort",
                "TimSortRun"
            ],
            "kind": "struct"
        },
        "2:2136:7803": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "metadata",
                "Thin"
            ],
            "kind": "trait_alias"
        },
        "1:3391:3004": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "stdio",
                "Stdout"
            ],
            "kind": "struct"
        },
        "1:9054:3176": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "condvar",
                "WaitTimeoutResult"
            ],
            "kind": "struct"
        },
        "17:11063:12961": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "file",
                "CoffFile"
            ],
            "kind": "struct"
        },
        "17:15078:12956": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageSymbol"
            ],
            "kind": "struct"
        },
        "17:13325:16025": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Sym32"
            ],
            "kind": "struct"
        },
        "6:1050:8947": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "passwd"
            ],
            "kind": "struct"
        },
        "2:36339:85": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicI128"
            ],
            "kind": "struct"
        },
        "6:1313:9090": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "qos_class_t"
            ],
            "kind": "enum"
        },
        "1:11845:1856": {
            "crate_id": 1,
            "path": [
                "std",
                "u8"
            ],
            "kind": "primitive"
        },
        "17:12213:13144": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "file",
                "PeComdatSectionIterator"
            ],
            "kind": "struct"
        },
        "17:14788:17282": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageVxdHeader"
            ],
            "kind": "struct"
        },
        "17:14079:16541": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "ThreadCommand"
            ],
            "kind": "struct"
        },
        "17:13473:16035": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Dyn32"
            ],
            "kind": "struct"
        },
        "17:12929:12928": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "Import"
            ],
            "kind": "struct"
        },
        "17:16187:17520": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "ExpAux"
            ],
            "kind": "struct"
        },
        "11:430:28683": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "RawIterHash"
            ],
            "kind": "struct"
        },
        "11:396:28663": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "RawDrain"
            ],
            "kind": "struct"
        },
        "2:45784:3312": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "f32x2"
            ],
            "kind": "struct"
        },
        "17:12043:13061": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "segment",
                "MachOSegment"
            ],
            "kind": "struct"
        },
        "5:1636:210": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "Range"
            ],
            "kind": "struct"
        },
        "1:11061:2737": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "sync",
                "rwlock",
                "queue",
                "PanicGuard"
            ],
            "kind": "struct"
        },
        "2:44535:4214": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int8x16x3_t"
            ],
            "kind": "struct"
        },
        "5:7514:2823": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "binary_heap",
                "DrainSorted"
            ],
            "kind": "struct"
        },
        "5:6506:3379": {
            "crate_id": 5,
            "path": [
                "alloc",
                "task",
                "Wake"
            ],
            "kind": "trait"
        },
        "17:15023:17293": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "AnonObjectHeaderV2"
            ],
            "kind": "struct"
        },
        "17:11661:13015": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "version",
                "VerneedIterator"
            ],
            "kind": "struct"
        },
        "17:12399:13149": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "import",
                "DelayLoadDescriptorIterator"
            ],
            "kind": "struct"
        },
        "17:13187:16018": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "FileHeader32"
            ],
            "kind": "struct"
        },
        "5:7504:2801": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "binary_heap",
                "Drain"
            ],
            "kind": "struct"
        },
        "2:35060:7710": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "sources",
                "successors",
                "Successors"
            ],
            "kind": "struct"
        },
        "16:5367:12718": {
            "crate_id": 16,
            "path": [
                "gimli",
                "endianity",
                "RunTimeEndian"
            ],
            "kind": "enum"
        },
        "17:14356:16558": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "EncryptionInfoCommand64"
            ],
            "kind": "struct"
        },
        "2:38709:227": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "ResumeTy"
            ],
            "kind": "struct"
        },
        "17:13344:16026": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Sym64"
            ],
            "kind": "struct"
        },
        "2:46093:23990": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "m64x2"
            ],
            "kind": "struct"
        },
        "2:37702:7392": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "RChunksExactMut"
            ],
            "kind": "struct"
        },
        "6:3970:11307": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "termios"
            ],
            "kind": "struct"
        },
        "2:16397:2948": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "ptr",
                "sealed",
                "Sealed"
            ],
            "kind": "trait"
        },
        "1:527:2737": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "PanicGuard"
            ],
            "kind": "struct"
        },
        "16:6665:12769": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "LineInstruction"
            ],
            "kind": "enum"
        },
        "1:3839:3027": {
            "crate_id": 1,
            "path": [
                "std",
                "net",
                "socket_addr",
                "ToSocketAddrs"
            ],
            "kind": "trait"
        },
        "1:11473:18272": {
            "crate_id": 1,
            "path": [
                "std",
                "panicking",
                "panic_count",
                "MustAbort"
            ],
            "kind": "enum"
        },
        "17:11128:12949": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "section",
                "CoffSection"
            ],
            "kind": "struct"
        },
        "2:37368:7374": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "ascii",
                "EscapeAscii"
            ],
            "kind": "struct"
        },
        "1:758:154": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "HashMap"
            ],
            "kind": "struct"
        },
        "16:5914:28896": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "AugmentationData"
            ],
            "kind": "struct"
        },
        "17:12969:12875": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "CodeView"
            ],
            "kind": "struct"
        },
        "0:14:2315": {
            "crate_id": 0,
            "path": [
                "usage",
                "it_works"
            ],
            "kind": "function"
        },
        "17:11256:12976": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "import",
                "ImportFile"
            ],
            "kind": "struct"
        },
        "17:9984:12905": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "RelocationEncoding"
            ],
            "kind": "enum"
        },
        "16:7711:210": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "rnglists",
                "Range"
            ],
            "kind": "struct"
        },
        "2:44925:4253": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint32x2x3_t"
            ],
            "kind": "struct"
        },
        "2:2032:671": {
            "crate_id": 2,
            "path": [
                "core",
                "mem",
                "drop"
            ],
            "kind": "function"
        },
        "17:10251:12908": {
            "crate_id": 17,
            "path": [
                "object",
                "endian",
                "U64Bytes"
            ],
            "kind": "struct"
        },
        "1:9118:18423": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "select",
                "Token"
            ],
            "kind": "struct"
        },
        "2:9863:84": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicBool"
            ],
            "kind": "struct"
        },
        "2:45603:3284": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u16x2"
            ],
            "kind": "struct"
        },
        "2:37164:24577": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "sip",
                "Sip24Rounds"
            ],
            "kind": "struct"
        },
        "17:15058:17278": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageSectionHeader"
            ],
            "kind": "struct"
        },
        "18:461:24590": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "twoway",
                "TwoWay"
            ],
            "kind": "struct"
        },
        "2:3688:24989": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "try_trait",
                "NeverShortCircuitResidual"
            ],
            "kind": "enum"
        },
        "17:11915:13102": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "load_command",
                "LoadCommandVariant"
            ],
            "kind": "enum"
        },
        "2:2961:76": {
            "crate_id": 2,
            "path": [
                "core",
                "convert",
                "AsMut"
            ],
            "kind": "trait"
        },
        "6:4909:11382": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "if_msghdr2"
            ],
            "kind": "struct"
        },
        "16:2838:11818": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugTypeSignature"
            ],
            "kind": "struct"
        },
        "2:44755:4236": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint16x4x4_t"
            ],
            "kind": "struct"
        },
        "2:24456:24123": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "alignment",
                "AlignmentEnum"
            ],
            "kind": "enum"
        },
        "5:5139:2963": {
            "crate_id": 5,
            "path": [
                "alloc",
                "rc",
                "from_iter_exact",
                "Guard"
            ],
            "kind": "struct"
        },
        "17:12056:13062": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "segment",
                "MachOSegmentInternal"
            ],
            "kind": "struct"
        },
        "6:4741:11366": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "dirent"
            ],
            "kind": "struct"
        },
        "16:7006:12780": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "loclists",
                "RawLocListIter"
            ],
            "kind": "struct"
        },
        "2:16084:3235": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "vector",
                "SimdElement"
            ],
            "kind": "trait"
        },
        "16:5817:12729": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "BaseAddresses"
            ],
            "kind": "struct"
        },
        "2:45556:3277": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u8x2"
            ],
            "kind": "struct"
        },
        "2:2809:202": {
            "crate_id": 2,
            "path": [
                "core",
                "cmp",
                "PartialOrd"
            ],
            "kind": "trait"
        },
        "1:949:2804": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "IntoKeys"
            ],
            "kind": "struct"
        },
        "17:14503:16568": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "SourceVersionCommand"
            ],
            "kind": "struct"
        },
        "5:7757:7449": {
            "crate_id": 5,
            "path": [
                "alloc",
                "string",
                "FromUtf8Error"
            ],
            "kind": "struct"
        },
        "18:591:17548": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "SearcherKind"
            ],
            "kind": "enum"
        },
        "5:1645:2834": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "RangeMut"
            ],
            "kind": "struct"
        },
        "16:2684:11811": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "RangeListsOffset"
            ],
            "kind": "struct"
        },
        "17:403:12897": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "Segment"
            ],
            "kind": "struct"
        },
        "2:38272:7442": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "CharSliceSearcher"
            ],
            "kind": "struct"
        },
        "6:4162:11320": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sockaddr_dl"
            ],
            "kind": "struct"
        },
        "16:2323:11794": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "Vendor"
            ],
            "kind": "enum"
        },
        "2:44605:4221": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint8x16x4_t"
            ],
            "kind": "struct"
        },
        "2:34567:7725": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "inspect",
                "Inspect"
            ],
            "kind": "struct"
        },
        "1:11836:737": {
            "crate_id": 1,
            "path": [
                "std",
                "f16"
            ],
            "kind": "primitive"
        },
        "16:7509:12790": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "Evaluation"
            ],
            "kind": "struct"
        },
        "5:3097:26401": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "node",
                "marker",
                "Immut"
            ],
            "kind": "struct"
        },
        "2:10611:153": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "Hash"
            ],
            "kind": "trait"
        },
        "1:8307:2947": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "SeekFrom"
            ],
            "kind": "enum"
        },
        "2:4806:7503": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "Ref"
            ],
            "kind": "struct"
        },
        "16:2636:11809": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugMacroOffset"
            ],
            "kind": "struct"
        },
        "11:2366:11713": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "table",
                "AbsentEntry"
            ],
            "kind": "struct"
        },
        "2:6986:24236": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "map_windows",
                "Buffer"
            ],
            "kind": "struct"
        },
        "17:12362:13148": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "import",
                "ImportThunkList"
            ],
            "kind": "struct"
        },
        "2:4464:109": {
            "crate_id": 2,
            "path": [
                "core",
                "asserting",
                "Capture"
            ],
            "kind": "struct"
        },
        "16:8301:12825": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "StoreOnHeap"
            ],
            "kind": "struct"
        },
        "7:31:11556": {
            "crate_id": 7,
            "path": [
                "unwind",
                "libunwind",
                "_Unwind_Reason_Code"
            ],
            "kind": "enum"
        },
        "1:3434:3000": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "stdio",
                "Stderr"
            ],
            "kind": "struct"
        },
        "11:708:2804": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "IntoKeys"
            ],
            "kind": "struct"
        },
        "2:45205:4281": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly64x2x4_t"
            ],
            "kind": "struct"
        },
        "1:11488:11753": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace_rs",
                "backtrace",
                "libunwind",
                "Frame"
            ],
            "kind": "enum"
        },
        "2:35745:3024": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "socket_addr",
                "SocketAddr"
            ],
            "kind": "enum"
        },
        "11:830:2803": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "ValuesMut"
            ],
            "kind": "struct"
        },
        "17:11392:12989": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "section",
                "ElfSectionIterator"
            ],
            "kind": "struct"
        },
        "6:1134:8955": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "regmatch_t"
            ],
            "kind": "struct"
        },
        "1:4744:3106": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "macos",
                "fs",
                "FileTimesExt"
            ],
            "kind": "trait"
        },
        "6:4092:11314": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "xucred"
            ],
            "kind": "struct"
        },
        "17:15822:17352": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImportObjectHeader"
            ],
            "kind": "struct"
        },
        "2:8304:165": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "collect",
                "IntoIterator"
            ],
            "kind": "trait"
        },
        "2:35599:3023": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "ip_addr",
                "Ipv6MulticastScope"
            ],
            "kind": "enum"
        },
        "17:14868:17285": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageDataDirectory"
            ],
            "kind": "struct"
        },
        "2:38493:7913": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "CharEscapeDebugContinue"
            ],
            "kind": "struct"
        },
        "17:14912:17287": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageRomOptionalHeader"
            ],
            "kind": "struct"
        },
        "5:2594:26494": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "node",
                "NodeRef"
            ],
            "kind": "struct"
        },
        "5:3729:2798": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "linked_list",
                "IterMut"
            ],
            "kind": "struct"
        },
        "2:3259:3225": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "Add"
            ],
            "kind": "trait"
        },
        "6:4280:11332": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ntptimeval"
            ],
            "kind": "struct"
        },
        "2:37825:7429": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "SplitTerminator"
            ],
            "kind": "struct"
        },
        "6:5025:11392": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ifreq"
            ],
            "kind": "struct"
        },
        "11:488:154": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "HashMap"
            ],
            "kind": "struct"
        },
        "17:12900:12927": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "ObjectMapEntry"
            ],
            "kind": "struct"
        },
        "1:9182:187": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mutex",
                "MutexGuard"
            ],
            "kind": "struct"
        },
        "1:8280:3009": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "util",
                "Empty"
            ],
            "kind": "struct"
        },
        "1:8026:139": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "FileType"
            ],
            "kind": "struct"
        },
        "2:45186:4279": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly64x2x2_t"
            ],
            "kind": "struct"
        },
        "2:12013:7382": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "ChunkBy"
            ],
            "kind": "struct"
        },
        "17:11647:13044": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "version",
                "VerdauxIterator"
            ],
            "kind": "struct"
        },
        "6:563:8544": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "iovec"
            ],
            "kind": "struct"
        },
        "1:9003:3197": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "TryRecvError"
            ],
            "kind": "enum"
        },
        "6:4674:11363": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "semid_ds"
            ],
            "kind": "struct"
        },
        "17:14463:16565": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "IdentCommand"
            ],
            "kind": "struct"
        },
        "11:1888:2801": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "Drain"
            ],
            "kind": "struct"
        },
        "17:15624:17338": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageAlpha64RuntimeFunctionEntry"
            ],
            "kind": "struct"
        },
        "17:13526:16039": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Verdaux"
            ],
            "kind": "struct"
        },
        "2:16847:2948": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "Sealed"
            ],
            "kind": "trait"
        },
        "5:2304:26467": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "navigate",
                "LeafRange"
            ],
            "kind": "struct"
        },
        "2:8450:178": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "iterator",
                "Iterator"
            ],
            "kind": "trait"
        },
        "2:4915:7506": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "SyncUnsafeCell"
            ],
            "kind": "struct"
        },
        "2:11445:7395": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "RSplitMut"
            ],
            "kind": "struct"
        },
        "18:536:17552": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "Finder"
            ],
            "kind": "struct"
        },
        "2:34353:2894": {
            "crate_id": 2,
            "path": [
                "core",
                "ffi",
                "c_str",
                "FromBytesWithNulError"
            ],
            "kind": "struct"
        },
        "2:816:3038": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "ZeroablePrimitive"
            ],
            "kind": "trait"
        },
        "1:4199:3060": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "fs",
                "FileTypeExt"
            ],
            "kind": "trait"
        },
        "2:2157:7801": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "metadata",
                "DynMetadata"
            ],
            "kind": "struct"
        },
        "5:6122:3172": {
            "crate_id": 5,
            "path": [
                "alloc",
                "sync",
                "Weak"
            ],
            "kind": "struct"
        },
        "1:11847:1844": {
            "crate_id": 1,
            "path": [
                "std",
                "u32"
            ],
            "kind": "primitive"
        },
        "2:16906:23937": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroU32Inner"
            ],
            "kind": "struct"
        },
        "1:11832:1726": {
            "crate_id": 1,
            "path": [
                "std",
                "str"
            ],
            "kind": "primitive"
        },
        "17:15324:17315": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageBoundImportDescriptor"
            ],
            "kind": "struct"
        },
        "2:38193:7439": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "MultiCharEqSearcher"
            ],
            "kind": "struct"
        },
        "1:8337:2981": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "Take"
            ],
            "kind": "struct"
        },
        "1:9078:2742": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "context",
                "Inner"
            ],
            "kind": "struct"
        },
        "1:10463:2941": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "FileTimes"
            ],
            "kind": "struct"
        },
        "6:4716:11116": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "statfs"
            ],
            "kind": "struct"
        },
        "2:45115:4272": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint64x1x4_t"
            ],
            "kind": "struct"
        },
        "1:8439:3107": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "macos",
                "raw",
                "stat"
            ],
            "kind": "struct"
        },
        "2:44685:4229": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int16x4x3_t"
            ],
            "kind": "struct"
        },
        "16:7604:12798": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "rnglists",
                "DebugRngLists"
            ],
            "kind": "struct"
        },
        "6:5272:11535": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "aarch64",
                "align",
                "__darwin_arm_exception_state64"
            ],
            "kind": "struct"
        },
        "2:11500:7396": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "RSplitN"
            ],
            "kind": "struct"
        },
        "2:2223:189": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "non_null",
                "NonNull"
            ],
            "kind": "struct"
        },
        "1:3436:3001": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "stdio",
                "StderrLock"
            ],
            "kind": "struct"
        },
        "2:12087:7379": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "raw",
                "from_raw_parts"
            ],
            "kind": "function"
        },
        "6:569:8545": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "pollfd"
            ],
            "kind": "struct"
        },
        "2:46779:3265": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i64x8"
            ],
            "kind": "struct"
        },
        "2:38808:7315": {
            "crate_id": 2,
            "path": [
                "core",
                "alloc",
                "layout",
                "LayoutError"
            ],
            "kind": "struct"
        },
        "6:617:8552": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "protoent"
            ],
            "kind": "struct"
        },
        "6:4621:11362": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "tcp_connection_info"
            ],
            "kind": "struct"
        },
        "5:5538:7366": {
            "crate_id": 5,
            "path": [
                "alloc",
                "slice",
                "Join"
            ],
            "kind": "trait"
        },
        "11:1049:2813": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "VacantEntry"
            ],
            "kind": "struct"
        },
        "5:994:2821": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "binary_heap",
                "Hole"
            ],
            "kind": "struct"
        },
        "6:3754:11289": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "siginfo_t"
            ],
            "kind": "struct"
        },
        "2:33539:7484": {
            "crate_id": 2,
            "path": [
                "core",
                "array",
                "TryFromSliceError"
            ],
            "kind": "struct"
        },
        "6:522:8540": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "rlimit"
            ],
            "kind": "struct"
        },
        "2:36144:93": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicU16"
            ],
            "kind": "struct"
        },
        "17:15596:17335": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageHotPatchHashes"
            ],
            "kind": "struct"
        },
        "5:3318:26387": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "DifferenceInner"
            ],
            "kind": "enum"
        },
        "11:2137:2812": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "OccupiedEntry"
            ],
            "kind": "struct"
        },
        "1:4773:3073": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "fd",
                "raw",
                "IntoRawFd"
            ],
            "kind": "trait"
        },
        "17:11773:13096": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "dyld_cache",
                "DyldCache"
            ],
            "kind": "struct"
        },
        "2:12483:7875": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "SlicePattern"
            ],
            "kind": "trait"
        },
        "2:3294:7327": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "async_function",
                "AsyncFnOnce"
            ],
            "kind": "trait"
        },
        "6:5241:11530": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "aarch64",
                "malloc_zone_t"
            ],
            "kind": "struct"
        },
        "17:15342:17317": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageDelayloadDescriptor"
            ],
            "kind": "struct"
        },
        "17:14599:16574": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "ScatteredRelocationInfo"
            ],
            "kind": "struct"
        },
        "1:2483:2928": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "read_link"
            ],
            "kind": "function"
        },
        "6:4228:11327": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "arphdr"
            ],
            "kind": "struct"
        },
        "17:12264:13114": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "section",
                "PeSection"
            ],
            "kind": "struct"
        },
        "5:0:309": {
            "crate_id": 5,
            "path": [
                "alloc"
            ],
            "kind": "module"
        },
        "2:28202:7770": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "Shl"
            ],
            "kind": "trait"
        },
        "18:113:17539": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memchr",
                "iter",
                "Memchr3"
            ],
            "kind": "struct"
        },
        "2:37843:7428": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "RSplitTerminator"
            ],
            "kind": "struct"
        },
        "17:12851:12924": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "SymbolMap"
            ],
            "kind": "struct"
        },
        "2:36845:7336": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "rt",
                "Alignment"
            ],
            "kind": "enum"
        },
        "2:4732:7495": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "BorrowMutError"
            ],
            "kind": "struct"
        },
        "2:10395:119": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Debug"
            ],
            "kind": "trait"
        },
        "17:14752:17281": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageOs2Header"
            ],
            "kind": "struct"
        },
        "17:11493:12999": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "relocation",
                "RelocationSections"
            ],
            "kind": "struct"
        },
        "17:16032:16021": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "SectionHeader32"
            ],
            "kind": "struct"
        },
        "2:8072:3167": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "sources",
                "once",
                "once"
            ],
            "kind": "function"
        },
        "1:8907:199": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "Output"
            ],
            "kind": "struct"
        },
        "2:45096:4270": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint64x1x2_t"
            ],
            "kind": "struct"
        },
        "2:37156:24589": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "sip",
                "Sip13Rounds"
            ],
            "kind": "struct"
        },
        "2:13866:115": {
            "crate_id": 2,
            "path": [
                "core",
                "task",
                "wake",
                "Context"
            ],
            "kind": "struct"
        },
        "2:37364:23928": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "ascii",
                "EscapeByte"
            ],
            "kind": "struct"
        },
        "2:10868:24251": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "sort",
                "merge_sort",
                "RunVec"
            ],
            "kind": "struct"
        },
        "1:9067:18300": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "array",
                "ArrayToken"
            ],
            "kind": "struct"
        },
        "16:7686:12802": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "rnglists",
                "RngListIter"
            ],
            "kind": "struct"
        },
        "2:3434:2831": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "deref",
                "DerefMut"
            ],
            "kind": "trait"
        },
        "17:13046:12884": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "CompressedFileRange"
            ],
            "kind": "struct"
        },
        "2:3421:124": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "deref",
                "Deref"
            ],
            "kind": "trait"
        },
        "11:2440:2801": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "table",
                "Drain"
            ],
            "kind": "struct"
        },
        "2:44715:4232": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int16x8x3_t"
            ],
            "kind": "struct"
        },
        "1:11846:1838": {
            "crate_id": 1,
            "path": [
                "std",
                "u16"
            ],
            "kind": "primitive"
        },
        "2:13710:205": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "pending",
                "Pending"
            ],
            "kind": "struct"
        },
        "1:11256:18657": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "wtf8",
                "EncodeWide"
            ],
            "kind": "struct"
        },
        "2:4506:7491": {
            "crate_id": 2,
            "path": [
                "core",
                "async_iter",
                "async_iter",
                "IntoAsyncIterator"
            ],
            "kind": "trait"
        },
        "17:14575:12887": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "Relocation"
            ],
            "kind": "struct"
        },
        "5:1595:2800": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "Values"
            ],
            "kind": "struct"
        },
        "17:15126:17298": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageAuxSymbolTokenDef"
            ],
            "kind": "struct"
        },
        "16:6433:12753": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "abbrev",
                "Abbreviations"
            ],
            "kind": "struct"
        },
        "6:4615:11361": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ifconf"
            ],
            "kind": "struct"
        },
        "6:1075:8949": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "fd_set"
            ],
            "kind": "struct"
        },
        "8:0:2448": {
            "crate_id": 8,
            "path": [
                "cfg_if"
            ],
            "kind": "module"
        },
        "18:526:17551": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "FindRevIter"
            ],
            "kind": "struct"
        },
        "16:6480:12757": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "aranges",
                "DebugAranges"
            ],
            "kind": "struct"
        },
        "2:44595:4220": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint8x16x3_t"
            ],
            "kind": "struct"
        },
        "16:7618:12799": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "rnglists",
                "RangeLists"
            ],
            "kind": "struct"
        },
        "2:37979:7426": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "Matches"
            ],
            "kind": "struct"
        },
        "16:8202:12821": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "DebugTypes"
            ],
            "kind": "struct"
        },
        "2:1829:7659": {
            "crate_id": 2,
            "path": [
                "core",
                "intrinsics",
                "AggregateRawPtr"
            ],
            "kind": "trait"
        },
        "1:8014:2938": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "Permissions"
            ],
            "kind": "struct"
        },
        "2:44526:4213": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int8x16x2_t"
            ],
            "kind": "struct"
        },
        "1:7216:18554": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "lazy_box",
                "LazyBox"
            ],
            "kind": "struct"
        },
        "6:4810:11373": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "processor_cpu_load_info"
            ],
            "kind": "struct"
        },
        "1:10597:18551": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_inner",
                "posix_spawn",
                "PosixSpawnFileActions"
            ],
            "kind": "struct"
        },
        "2:16695:24137": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "dec2flt",
                "FloatErrorKind"
            ],
            "kind": "enum"
        },
        "11:1920:2818": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "Union"
            ],
            "kind": "struct"
        },
        "17:15646:17340": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageRuntimeFunctionEntry"
            ],
            "kind": "struct"
        },
        "1:3656:18979": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "Write",
                "write_fmt",
                "Adapter"
            ],
            "kind": "struct"
        },
        "5:7492:2822": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "binary_heap",
                "IntoIterSorted"
            ],
            "kind": "struct"
        },
        "17:12993:12930": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "RelocationTarget"
            ],
            "kind": "enum"
        },
        "1:9033:3198": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "TrySendError"
            ],
            "kind": "enum"
        },
        "17:14271:16552": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "PrebindCksumCommand"
            ],
            "kind": "struct"
        },
        "2:16179:3366": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "num",
                "float",
                "SimdFloat"
            ],
            "kind": "trait"
        },
        "1:10898:18525": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "sync",
                "condvar",
                "pthread",
                "AllocatedCondvar"
            ],
            "kind": "struct"
        },
        "6:3733:11286": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "pthread_mutexattr_t"
            ],
            "kind": "struct"
        },
        "17:14436:16563": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "LinkerOptionCommand"
            ],
            "kind": "struct"
        },
        "6:4237:11328": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "in_addr"
            ],
            "kind": "struct"
        },
        "17:14529:16570": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "NoteCommand"
            ],
            "kind": "struct"
        },
        "16:2660:11810": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "RawRangeListsOffset"
            ],
            "kind": "struct"
        },
        "11:328:28675": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "RawIter"
            ],
            "kind": "struct"
        },
        "5:3347:2815": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "Intersection"
            ],
            "kind": "struct"
        },
        "17:10710:12916": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "ComdatSectionIterator"
            ],
            "kind": "struct"
        },
        "1:8067:2994": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "buffered",
                "IntoInnerError"
            ],
            "kind": "struct"
        },
        "6:3673:11284": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "glob_t"
            ],
            "kind": "struct"
        },
        "17:11537:13006": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "note",
                "NoteIterator"
            ],
            "kind": "struct"
        },
        "17:15206:17305": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageLinenumber"
            ],
            "kind": "struct"
        },
        "1:10989:18536": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "sync",
                "once",
                "queue",
                "WaiterQueue"
            ],
            "kind": "struct"
        },
        "2:26009:23044": {
            "crate_id": 2,
            "path": [
                "core",
                "error",
                "private",
                "Internal"
            ],
            "kind": "struct"
        },
        "1:4827:3074": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "fd",
                "owned",
                "OwnedFd"
            ],
            "kind": "struct"
        },
        "1:10434:18431": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fd",
                "FileDesc"
            ],
            "kind": "struct"
        },
        "1:8004:2941": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "FileTimes"
            ],
            "kind": "struct"
        },
        "2:36949:7338": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Arguments"
            ],
            "kind": "struct"
        },
        "2:16645:25076": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "dec2flt",
                "decimal",
                "Decimal"
            ],
            "kind": "struct"
        },
        "17:10018:12878": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "FileFlags"
            ],
            "kind": "enum"
        },
        "1:7882:2778": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace",
                "RawFrame"
            ],
            "kind": "enum"
        },
        "17:14475:16566": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "FvmfileCommand"
            ],
            "kind": "struct"
        },
        "9:445:11585": {
            "crate_id": 9,
            "path": [
                "miniz_oxide",
                "MZError"
            ],
            "kind": "enum"
        },
        "2:16795:25372": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "fmt",
                "Formatted"
            ],
            "kind": "struct"
        },
        "5:1548:2798": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "IterMut"
            ],
            "kind": "struct"
        },
        "2:8768:7711": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "marker",
                "TrustedStep"
            ],
            "kind": "trait"
        },
        "2:10853:18531": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "sort",
                "merge_sort",
                "BufGuard"
            ],
            "kind": "struct"
        },
        "2:13909:3374": {
            "crate_id": 2,
            "path": [
                "core",
                "task",
                "wake",
                "LocalWaker"
            ],
            "kind": "struct"
        },
        "17:14876:17286": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageOptionalHeader32"
            ],
            "kind": "struct"
        },
        "2:44545:4215": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int8x16x4_t"
            ],
            "kind": "struct"
        },
        "6:3688:11285": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "addrinfo"
            ],
            "kind": "struct"
        },
        "2:16082:2948": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "vector",
                "sealed",
                "Sealed"
            ],
            "kind": "trait"
        },
        "17:10573:29960": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SegmentInternal"
            ],
            "kind": "enum"
        },
        "16:7379:29137": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "EvaluationState"
            ],
            "kind": "enum"
        },
        "15:394:11756": {
            "crate_id": 15,
            "path": [
                "addr2line",
                "DebugFile"
            ],
            "kind": "enum"
        },
        "6:3910:11303": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ifma_msghdr2"
            ],
            "kind": "struct"
        },
        "16:5006:12491": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwLne"
            ],
            "kind": "struct"
        },
        "2:38092:7421": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "EscapeUnicode"
            ],
            "kind": "struct"
        },
        "16:7888:12812": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "DebuggingInformationEntry"
            ],
            "kind": "struct"
        },
        "2:12669:7922": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "SplitInternal"
            ],
            "kind": "struct"
        },
        "2:46055:23968": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "m16x8"
            ],
            "kind": "struct"
        },
        "17:14414:16562": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DyldInfoCommand"
            ],
            "kind": "struct"
        },
        "2:44193:4187": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int8x8_t"
            ],
            "kind": "struct"
        },
        "2:24392:2830": {
            "crate_id": 2,
            "path": [
                "core",
                "mem",
                "manually_drop",
                "ManuallyDrop"
            ],
            "kind": "struct"
        },
        "17:12342:13113": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "import",
                "ImportTable"
            ],
            "kind": "struct"
        },
        "2:34516:133": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "enumerate",
                "Enumerate"
            ],
            "kind": "struct"
        },
        "17:9737:12872": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "SubArchitecture"
            ],
            "kind": "enum"
        },
        "2:0:563": {
            "crate_id": 2,
            "path": [
                "core"
            ],
            "kind": "module"
        },
        "2:36874:24489": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "rt",
                "Flag"
            ],
            "kind": "enum"
        },
        "5:7650:2794": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "TryReserveErrorKind"
            ],
            "kind": "enum"
        },
        "16:5400:12720": {
            "crate_id": 16,
            "path": [
                "gimli",
                "endianity",
                "BigEndian"
            ],
            "kind": "struct"
        },
        "15:288:11744": {
            "crate_id": 15,
            "path": [
                "addr2line",
                "LocationRangeIter"
            ],
            "kind": "struct"
        },
        "1:974:2808": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "RawOccupiedEntryMut"
            ],
            "kind": "struct"
        },
        "2:13621:7724": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "async_drop",
                "Fuse"
            ],
            "kind": "struct"
        },
        "2:44478:4208": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint64x2_t"
            ],
            "kind": "struct"
        },
        "1:5583:3150": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "exit"
            ],
            "kind": "function"
        },
        "16:5846:12731": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "CfiEntriesIter"
            ],
            "kind": "struct"
        },
        "17:16198:17521": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "BlockAux32"
            ],
            "kind": "struct"
        },
        "17:15944:16019": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "FileHeader64"
            ],
            "kind": "struct"
        },
        "2:6981:25393": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "map_windows",
                "MapWindowsInner"
            ],
            "kind": "struct"
        },
        "2:34446:7371": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "array_chunks",
                "ArrayChunks"
            ],
            "kind": "struct"
        },
        "1:11211:18342": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "wtf8",
                "CodePoint"
            ],
            "kind": "struct"
        },
        "11:434:28686": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "RawIterHashInner"
            ],
            "kind": "struct"
        },
        "1:6181:18550": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "waker",
                "SyncWaker"
            ],
            "kind": "struct"
        },
        "1:7992:2940": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "ReadDir"
            ],
            "kind": "struct"
        },
        "2:34558:7724": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "fuse",
                "Fuse"
            ],
            "kind": "struct"
        },
        "6:4816:11374": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "processor_basic_info"
            ],
            "kind": "struct"
        },
        "2:44946:4255": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint32x4x2_t"
            ],
            "kind": "struct"
        },
        "2:3663:146": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "try_trait",
                "FromResidual"
            ],
            "kind": "trait"
        },
        "17:15190:17303": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageAuxSymbolCrc"
            ],
            "kind": "struct"
        },
        "2:36066:96": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicU8"
            ],
            "kind": "struct"
        },
        "16:2355:11796": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "LineEncoding"
            ],
            "kind": "struct"
        },
        "6:1156:8956": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "utsname"
            ],
            "kind": "struct"
        },
        "5:789:250": {
            "crate_id": 5,
            "path": [
                "alloc",
                "borrow",
                "ToOwned"
            ],
            "kind": "trait"
        },
        "2:35004:24502": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "sources",
                "from_coroutine",
                "FromCoroutine"
            ],
            "kind": "struct"
        },
        "17:13363:16027": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Syminfo32"
            ],
            "kind": "struct"
        },
        "17:11755:13050": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "attributes",
                "AttributeIndexIterator"
            ],
            "kind": "struct"
        },
        "11:2380:2797": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "table",
                "Iter"
            ],
            "kind": "struct"
        },
        "1:592:2745": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "JoinHandle"
            ],
            "kind": "struct"
        },
        "2:2134:7802": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "metadata",
                "Pointee"
            ],
            "kind": "trait"
        },
        "1:5990:3190": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "counter",
                "Sender"
            ],
            "kind": "struct"
        },
        "2:4:1259": {
            "crate_id": 2,
            "path": [
                "core",
                "panic"
            ],
            "kind": "macro"
        },
        "2:34544:24512": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "flatten",
                "FlattenCompat"
            ],
            "kind": "struct"
        },
        "17:12557:12957": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "section",
                "SectionTable"
            ],
            "kind": "struct"
        },
        "2:44995:4260": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "float32x2x4_t"
            ],
            "kind": "struct"
        },
        "17:12949:12929": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "Export"
            ],
            "kind": "struct"
        },
        "6:3781:11291": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "fstore_t"
            ],
            "kind": "struct"
        },
        "2:4727:7494": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "BorrowError"
            ],
            "kind": "struct"
        },
        "17:10284:12909": {
            "crate_id": 17,
            "path": [
                "object",
                "endian",
                "I16Bytes"
            ],
            "kind": "struct"
        },
        "5:2157:2835": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "Cursor"
            ],
            "kind": "struct"
        },
        "17:13999:16535": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "SubFrameworkCommand"
            ],
            "kind": "struct"
        },
        "1:432:185": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "local",
                "LocalKey"
            ],
            "kind": "struct"
        },
        "11:854:2808": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "RawOccupiedEntryMut"
            ],
            "kind": "struct"
        },
        "6:5038:11394": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "semun"
            ],
            "kind": "union"
        },
        "2:44935:4254": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint32x2x4_t"
            ],
            "kind": "struct"
        },
        "2:36890:24476": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "rt",
                "ArgumentType"
            ],
            "kind": "enum"
        },
        "17:12289:13110": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "data_directory",
                "DataDirectories"
            ],
            "kind": "struct"
        },
        "11:1601:11712": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "rustc_entry",
                "RustcVacantEntry"
            ],
            "kind": "struct"
        },
        "17:14545:16571": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "Nlist32"
            ],
            "kind": "struct"
        },
        "6:3818:8496": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "statvfs"
            ],
            "kind": "struct"
        },
        "1:8051:2795": {
            "crate_id": 1,
            "path": [
                "std",
                "hash",
                "random",
                "DefaultHasher"
            ],
            "kind": "struct"
        },
        "2:6086:2963": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "filter_map",
                "next_chunk",
                "Guard"
            ],
            "kind": "struct"
        },
        "17:12597:13166": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "symbol",
                "XcoffSymbolTable"
            ],
            "kind": "struct"
        },
        "17:11764:13051": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "attributes",
                "AttributeReader"
            ],
            "kind": "struct"
        },
        "1:6268:3190": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "Sender"
            ],
            "kind": "struct"
        },
        "6:4355:11343": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sched_param"
            ],
            "kind": "struct"
        },
        "1:8991:3194": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "RecvError"
            ],
            "kind": "struct"
        },
        "2:45571:3242": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i8x2"
            ],
            "kind": "struct"
        },
        "17:10419:12873": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "util",
                "ByteString"
            ],
            "kind": "struct"
        },
        "1:9934:18305": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "os",
                "Env"
            ],
            "kind": "struct"
        },
        "2:38224:7441": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "CharArrayRefSearcher"
            ],
            "kind": "struct"
        },
        "1:2076:197": {
            "crate_id": 1,
            "path": [
                "std",
                "ffi",
                "os_str",
                "OsStr"
            ],
            "kind": "struct"
        },
        "1:980:2809": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "RawVacantEntryMut"
            ],
            "kind": "struct"
        },
        "2:45066:4267": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int64x2x2_t"
            ],
            "kind": "struct"
        },
        "2:27683:7766": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "BitAnd"
            ],
            "kind": "trait"
        },
        "2:35011:7704": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "sources",
                "from_fn",
                "FromFn"
            ],
            "kind": "struct"
        },
        "2:3703:7328": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "unsize",
                "CoerceUnsized"
            ],
            "kind": "trait"
        },
        "1:9195:2963": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "poison",
                "Guard"
            ],
            "kind": "struct"
        },
        "1:915:2800": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "Values"
            ],
            "kind": "struct"
        },
        "17:14325:16556": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "FilesetEntryCommand"
            ],
            "kind": "struct"
        },
        "17:12127:13066": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "symbol",
                "MachOSymbolTable"
            ],
            "kind": "struct"
        },
        "5:7744:243": {
            "crate_id": 5,
            "path": [
                "alloc",
                "string",
                "String"
            ],
            "kind": "struct"
        },
        "2:37572:7385": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "Windows"
            ],
            "kind": "struct"
        },
        "2:15924:2948": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "to_bytes",
                "sealed",
                "Sealed"
            ],
            "kind": "trait"
        },
        "17:13252:16021": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "SectionHeader32"
            ],
            "kind": "struct"
        },
        "6:496:8536": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "group"
            ],
            "kind": "struct"
        },
        "16:4882:12459": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwDsc"
            ],
            "kind": "struct"
        },
        "1:8641:3138": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "Components"
            ],
            "kind": "struct"
        },
        "1:9508:18552": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "Dir"
            ],
            "kind": "struct"
        },
        "2:38505:7918": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "IsWhitespace"
            ],
            "kind": "struct"
        },
        "17:16212:17522": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "BlockAux64"
            ],
            "kind": "struct"
        },
        "6:3900:11302": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ifma_msghdr"
            ],
            "kind": "struct"
        },
        "17:0:2456": {
            "crate_id": 17,
            "path": [
                "object"
            ],
            "kind": "module"
        },
        "6:1107:8952": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "cmsghdr"
            ],
            "kind": "struct"
        },
        "17:12107:12917": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "symbol",
                "SymbolTable"
            ],
            "kind": "struct"
        },
        "17:13922:16530": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "Section64"
            ],
            "kind": "struct"
        },
        "6:4197:11323": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "in_pktinfo"
            ],
            "kind": "struct"
        },
        "5:3101:26402": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "node",
                "marker",
                "Mut"
            ],
            "kind": "struct"
        },
        "1:10691:2951": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "time",
                "SystemTime"
            ],
            "kind": "struct"
        },
        "2:44306:4196": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint64x1_t"
            ],
            "kind": "struct"
        },
        "1:9085:18075": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "error",
                "SendTimeoutError"
            ],
            "kind": "enum"
        },
        "1:11849:1832": {
            "crate_id": 1,
            "path": [
                "std",
                "u128"
            ],
            "kind": "primitive"
        },
        "17:10818:12918": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SymbolIterator"
            ],
            "kind": "struct"
        },
        "16:7014:12781": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "loclists",
                "RawLocListEntry"
            ],
            "kind": "enum"
        },
        "11:740:2805": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "IntoValues"
            ],
            "kind": "struct"
        },
        "16:7910:12813": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "AttributeValue"
            ],
            "kind": "enum"
        },
        "2:45015:4262": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "float32x4x3_t"
            ],
            "kind": "struct"
        },
        "17:16176:17519": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "FunAux64"
            ],
            "kind": "struct"
        },
        "2:38543:130": {
            "crate_id": 2,
            "path": [
                "core",
                "time",
                "Duration"
            ],
            "kind": "struct"
        },
        "17:10887:29947": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "DynamicRelocationIteratorInternal"
            ],
            "kind": "enum"
        },
        "17:13024:12931": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "CompressionFormat"
            ],
            "kind": "enum"
        },
        "2:37775:2983": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "Split"
            ],
            "kind": "struct"
        },
        "2:44469:4207": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int64x2_t"
            ],
            "kind": "struct"
        },
        "17:15769:17348": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageFunctionEntry64"
            ],
            "kind": "struct"
        },
        "17:9858:12901": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "ComdatKind"
            ],
            "kind": "enum"
        },
        "17:15814:17351": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageArchitectureEntry"
            ],
            "kind": "struct"
        },
        "17:13553:16041": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Vernaux"
            ],
            "kind": "struct"
        },
        "2:12928:2914": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "traits",
                "FromStr"
            ],
            "kind": "trait"
        },
        "17:10317:12910": {
            "crate_id": 17,
            "path": [
                "object",
                "endian",
                "I32Bytes"
            ],
            "kind": "struct"
        },
        "1:3297:23916": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "stdio",
                "StdinRaw"
            ],
            "kind": "struct"
        },
        "1:11793:23270": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace_rs",
                "symbolize",
                "gimli",
                "Cache"
            ],
            "kind": "struct"
        },
        "1:8327:2980": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "Chain"
            ],
            "kind": "struct"
        },
        "17:10769:29950": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SymbolTableInternal"
            ],
            "kind": "enum"
        },
        "5:2377:26501": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "navigate",
                "LazyLeafRange"
            ],
            "kind": "struct"
        },
        "5:6704:26406": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "drain",
                "drop",
                "DropGuard"
            ],
            "kind": "struct"
        },
        "2:44955:4256": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint32x4x3_t"
            ],
            "kind": "struct"
        },
        "2:15651:2948": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "masks",
                "sealed",
                "Sealed"
            ],
            "kind": "trait"
        },
        "2:45618:3243": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i8x4"
            ],
            "kind": "struct"
        },
        "1:5844:2781": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "lazy_lock",
                "LazyLock"
            ],
            "kind": "struct"
        },
        "17:12030:13063": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "segment",
                "MachOSegmentIterator"
            ],
            "kind": "struct"
        },
        "2:37925:7424": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "MatchIndices"
            ],
            "kind": "struct"
        },
        "2:45165:4277": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly64x1x3_t"
            ],
            "kind": "struct"
        },
        "11:798:2801": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "Drain"
            ],
            "kind": "struct"
        },
        "2:44766:4237": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint16x8x2_t"
            ],
            "kind": "struct"
        },
        "16:8118:12816": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "EntriesRaw"
            ],
            "kind": "struct"
        },
        "5:5490:26406": {
            "crate_id": 5,
            "path": [
                "alloc",
                "slice",
                "hack",
                "to_vec",
                "DropGuard"
            ],
            "kind": "struct"
        },
        "2:3053:137": {
            "crate_id": 2,
            "path": [
                "core",
                "error",
                "Error"
            ],
            "kind": "trait"
        },
        "1:9209:3185": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "rwlock",
                "MappedRwLockReadGuard"
            ],
            "kind": "struct"
        },
        "2:44796:4240": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly16x4x2_t"
            ],
            "kind": "struct"
        },
        "2:3218:2755": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "PhantomData"
            ],
            "kind": "struct"
        },
        "5:3373:2818": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "Union"
            ],
            "kind": "struct"
        },
        "17:11557:13041": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "note",
                "GnuPropertyIterator"
            ],
            "kind": "struct"
        },
        "2:38049:7412": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "SplitWhitespace"
            ],
            "kind": "struct"
        },
        "17:11595:13043": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "version",
                "VersionIndex"
            ],
            "kind": "struct"
        },
        "5:3095:27678": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "node",
                "marker",
                "Dying"
            ],
            "kind": "enum"
        },
        "2:38501:7914": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "CharEscapeDefault"
            ],
            "kind": "struct"
        },
        "2:33519:7779": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "try_trait",
                "Yeet"
            ],
            "kind": "struct"
        },
        "17:16079:17512": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "Symbol32"
            ],
            "kind": "struct"
        },
        "2:44421:4203": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly16x8_t"
            ],
            "kind": "struct"
        },
        "17:10982:12938": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "archive",
                "Members"
            ],
            "kind": "enum"
        },
        "5:291:26406": {
            "crate_id": 5,
            "path": [
                "alloc",
                "boxed",
                "thin",
                "drop",
                "DropGuard"
            ],
            "kind": "struct"
        },
        "17:12464:13152": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "resource",
                "ResourceDirectoryEntryData"
            ],
            "kind": "enum"
        },
        "2:45045:4265": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int64x1x3_t"
            ],
            "kind": "struct"
        },
        "17:10068:12885": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "SectionFlags"
            ],
            "kind": "enum"
        },
        "17:10137:12871": {
            "crate_id": 17,
            "path": [
                "object",
                "endian",
                "Endianness"
            ],
            "kind": "enum"
        },
        "11:2400:2798": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "table",
                "IterMut"
            ],
            "kind": "struct"
        },
        "9:328:11641": {
            "crate_id": 9,
            "path": [
                "miniz_oxide",
                "inflate",
                "core",
                "LocalVars"
            ],
            "kind": "struct"
        },
        "16:6456:12755": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "abbrev",
                "Attributes"
            ],
            "kind": "enum"
        },
        "1:9159:18653": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "utils",
                "CachePadded"
            ],
            "kind": "struct"
        },
        "2:11407:7394": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "RSplit"
            ],
            "kind": "struct"
        },
        "2:45799:3318": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "f64x1"
            ],
            "kind": "struct"
        },
        "2:45895:3245": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i8x16"
            ],
            "kind": "struct"
        },
        "1:11829:1317": {
            "crate_id": 1,
            "path": [
                "std",
                "pointer"
            ],
            "kind": "primitive"
        },
        "2:16994:24056": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroI128Inner"
            ],
            "kind": "struct"
        },
        "17:15701:17343": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageEnclaveImport"
            ],
            "kind": "struct"
        },
        "17:15799:17350": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "NonPagedDebugInfo"
            ],
            "kind": "struct"
        },
        "17:14968:17289": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageNtHeaders64"
            ],
            "kind": "struct"
        },
        "0:4:2311": {
            "crate_id": 0,
            "path": [
                "usage",
                "Test"
            ],
            "kind": "struct"
        },
        "14:165:11721": {
            "crate_id": 14,
            "path": [
                "rustc_demangle",
                "DemangleStyle"
            ],
            "kind": "enum"
        },
        "2:46800:3300": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u64x8"
            ],
            "kind": "struct"
        },
        "18:554:17554": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "FinderBuilder"
            ],
            "kind": "struct"
        },
        "2:3094:2892": {
            "crate_id": 2,
            "path": [
                "core",
                "error",
                "Request"
            ],
            "kind": "struct"
        },
        "16:4830:12453": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwInl"
            ],
            "kind": "struct"
        },
        "11:1884:2622": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "17:12388:13139": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "import",
                "DelayLoadImportTable"
            ],
            "kind": "struct"
        },
        "2:38771:24616": {
            "crate_id": 2,
            "path": [
                "core",
                "task",
                "wake",
                "ExtData"
            ],
            "kind": "enum"
        },
        "5:3306:2797": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "Iter"
            ],
            "kind": "struct"
        },
        "1:11837:740": {
            "crate_id": 1,
            "path": [
                "std",
                "f32"
            ],
            "kind": "primitive"
        },
        "2:36378:92": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicU128"
            ],
            "kind": "struct"
        },
        "2:2767:201": {
            "crate_id": 2,
            "path": [
                "core",
                "cmp",
                "PartialEq"
            ],
            "kind": "trait"
        },
        "2:38083:2768": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "EscapeDefault"
            ],
            "kind": "struct"
        },
        "5:2171:2836": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "CursorMut"
            ],
            "kind": "struct"
        },
        "17:13568:16042": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "NoteHeader32"
            ],
            "kind": "struct"
        },
        "6:609:8551": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "servent"
            ],
            "kind": "struct"
        },
        "6:3991:11308": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sf_hdtr"
            ],
            "kind": "struct"
        },
        "2:2597:672": {
            "crate_id": 2,
            "path": [
                "core",
                "ptr",
                "drop_in_place"
            ],
            "kind": "function"
        },
        "2:36027:89": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicI8"
            ],
            "kind": "struct"
        },
        "2:10351:2889": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Write"
            ],
            "kind": "trait"
        },
        "2:3206:7324": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "Unsize"
            ],
            "kind": "trait"
        },
        "2:16826:3051": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "error",
                "IntErrorKind"
            ],
            "kind": "enum"
        },
        "6:4101:11315": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "mach_header"
            ],
            "kind": "struct"
        },
        "17:11674:13045": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "version",
                "VernauxIterator"
            ],
            "kind": "struct"
        },
        "2:13683:25893": {
            "crate_id": 2,
            "path": [
                "core",
                "future",
                "join",
                "MaybeDone"
            ],
            "kind": "enum"
        },
        "2:6277:7716": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "flatten",
                "Flatten"
            ],
            "kind": "struct"
        },
        "1:7817:2320": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "Builder"
            ],
            "kind": "struct"
        },
        "2:9429:3122": {
            "crate_id": 2,
            "path": [
                "core",
                "panic",
                "unwind_safe",
                "AssertUnwindSafe"
            ],
            "kind": "struct"
        },
        "2:44646:4225": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly8x16x2_t"
            ],
            "kind": "struct"
        },
        "1:10525:18324": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_common",
                "ProgramKind"
            ],
            "kind": "enum"
        },
        "1:8952:2797": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "Iter"
            ],
            "kind": "struct"
        },
        "6:528:8541": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "rusage"
            ],
            "kind": "struct"
        },
        "2:4487:7322": {
            "crate_id": 2,
            "path": [
                "core",
                "async_iter",
                "async_iter",
                "AsyncIterator"
            ],
            "kind": "trait"
        },
        "16:6976:12779": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "loclists",
                "LocationLists"
            ],
            "kind": "struct"
        },
        "2:37692:7391": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "RChunksExact"
            ],
            "kind": "struct"
        },
        "1:11842:900": {
            "crate_id": 1,
            "path": [
                "std",
                "i32"
            ],
            "kind": "primitive"
        },
        "1:1620:2802": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "set",
                "ExtractIf"
            ],
            "kind": "struct"
        },
        "1:3904:3030": {
            "crate_id": 1,
            "path": [
                "std",
                "net",
                "tcp",
                "TcpListener"
            ],
            "kind": "struct"
        },
        "1:9018:3195": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "RecvTimeoutError"
            ],
            "kind": "enum"
        },
        "16:6442:12754": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "abbrev",
                "Abbreviation"
            ],
            "kind": "struct"
        },
        "16:4614:12375": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwVis"
            ],
            "kind": "struct"
        },
        "5:2275:26357": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "merge_iter",
                "MergeIterInner"
            ],
            "kind": "struct"
        },
        "16:6160:11765": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "CallFrameInstruction"
            ],
            "kind": "enum"
        },
        "5:4491:265": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "VecDeque"
            ],
            "kind": "struct"
        },
        "17:14372:16559": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "VersionMinCommand"
            ],
            "kind": "struct"
        },
        "17:13292:16023": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "CompressionHeader32"
            ],
            "kind": "struct"
        },
        "5:7681:2896": {
            "crate_id": 5,
            "path": [
                "alloc",
                "ffi",
                "c_str",
                "NulError"
            ],
            "kind": "struct"
        },
        "17:12478:13153": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "resource",
                "ResourceName"
            ],
            "kind": "struct"
        },
        "6:4801:11372": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sigevent"
            ],
            "kind": "struct"
        },
        "16:6066:12739": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "RegisterRuleIter"
            ],
            "kind": "struct"
        },
        "1:9342:2873": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "args",
                "Args"
            ],
            "kind": "struct"
        },
        "2:34610:7727": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "peekable",
                "Peekable"
            ],
            "kind": "struct"
        },
        "1:4209:3061": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "fs",
                "DirEntryExt"
            ],
            "kind": "trait"
        },
        "16:7823:12810": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "UnitType"
            ],
            "kind": "enum"
        },
        "17:513:12898": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "Comdat"
            ],
            "kind": "struct"
        },
        "6:1096:8951": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "msghdr"
            ],
            "kind": "struct"
        },
        "5:7733:7360": {
            "crate_id": 5,
            "path": [
                "alloc",
                "rc",
                "UniqueRc"
            ],
            "kind": "struct"
        },
        "17:10457:138": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "File"
            ],
            "kind": "enum"
        },
        "1:10490:2943": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "io",
                "IoSlice"
            ],
            "kind": "struct"
        },
        "16:6278:12744": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "dwarf",
                "Dwarf"
            ],
            "kind": "struct"
        },
        "5:6874:26406": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "into_iter",
                "drop",
                "DropGuard"
            ],
            "kind": "struct"
        },
        "6:4112:11316": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "mach_header_64"
            ],
            "kind": "struct"
        },
        "5:3860:2835": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "linked_list",
                "Cursor"
            ],
            "kind": "struct"
        },
        "1:11826:471": {
            "crate_id": 1,
            "path": [
                "std",
                "char"
            ],
            "kind": "primitive"
        },
        "2:44436:4204": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int32x4_t"
            ],
            "kind": "struct"
        },
        "17:13485:16036": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Dyn64"
            ],
            "kind": "struct"
        },
        "17:15931:16018": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "FileHeader32"
            ],
            "kind": "struct"
        },
        "5:6248:2963": {
            "crate_id": 5,
            "path": [
                "alloc",
                "sync",
                "from_iter_exact",
                "Guard"
            ],
            "kind": "struct"
        },
        "1:3340:3002": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "stdio",
                "Stdin"
            ],
            "kind": "struct"
        },
        "6:5255:11533": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "aarch64",
                "align",
                "ucontext_t"
            ],
            "kind": "struct"
        },
        "5:1011:2797": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "binary_heap",
                "Iter"
            ],
            "kind": "struct"
        },
        "2:15482:2948": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "cast",
                "sealed",
                "Sealed"
            ],
            "kind": "trait"
        },
        "2:38792:180": {
            "crate_id": 2,
            "path": [
                "core",
                "alloc",
                "layout",
                "Layout"
            ],
            "kind": "struct"
        },
        "2:34320:7526": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "ToUppercase"
            ],
            "kind": "struct"
        },
        "2:46203:3299": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u64x4"
            ],
            "kind": "struct"
        },
        "1:10454:18398": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "FilePermissions"
            ],
            "kind": "struct"
        },
        "5:7826:2802": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "extract_if",
                "ExtractIf"
            ],
            "kind": "struct"
        },
        "2:36616:7348": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "num",
                "UpperHex"
            ],
            "kind": "struct"
        },
        "2:26034:7836": {
            "crate_id": 2,
            "path": [
                "core",
                "error",
                "Source"
            ],
            "kind": "struct"
        },
        "5:4995:217": {
            "crate_id": 5,
            "path": [
                "alloc",
                "rc",
                "Rc"
            ],
            "kind": "struct"
        },
        "16:2902:11821": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "UnitSectionOffset"
            ],
            "kind": "enum"
        },
        "2:35900:3123": {
            "crate_id": 2,
            "path": [
                "core",
                "panic",
                "unwind_safe",
                "RefUnwindSafe"
            ],
            "kind": "trait"
        },
        "17:11583:13013": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "hash",
                "GnuHashTable"
            ],
            "kind": "struct"
        },
        "5:4217:2798": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "iter_mut",
                "IterMut"
            ],
            "kind": "struct"
        },
        "17:15778:17349": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageSeparateDebugHeader"
            ],
            "kind": "struct"
        },
        "6:4332:11341": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "malloc_statistics_t"
            ],
            "kind": "struct"
        },
        "17:11242:12975": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "comdat",
                "CoffComdatSectionIterator"
            ],
            "kind": "struct"
        },
        "16:5742:12724": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "ParsedEhFrameHdr"
            ],
            "kind": "struct"
        },
        "6:4289:11333": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_standard_policy"
            ],
            "kind": "struct"
        },
        "11:2533:28678": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "neon",
                "Group"
            ],
            "kind": "struct"
        },
        "2:44745:4235": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint16x4x3_t"
            ],
            "kind": "struct"
        },
        "2:37125:2956": {
            "crate_id": 2,
            "path": [
                "core",
                "hash",
                "sip",
                "SipHasher"
            ],
            "kind": "struct"
        },
        "11:842:2807": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "RawEntryMut"
            ],
            "kind": "enum"
        },
        "17:11354:12990": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "segment",
                "ElfSegment"
            ],
            "kind": "struct"
        },
        "1:9204:235": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "rwlock",
                "RwLockWriteGuard"
            ],
            "kind": "struct"
        },
        "18:574:17547": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "NeedleInfo"
            ],
            "kind": "struct"
        },
        "17:10170:12720": {
            "crate_id": 17,
            "path": [
                "object",
                "endian",
                "BigEndian"
            ],
            "kind": "struct"
        },
        "17:15400:17323": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageLoadConfigCodeIntegrity"
            ],
            "kind": "struct"
        },
        "17:12792:12881": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "SectionIndex"
            ],
            "kind": "struct"
        },
        "6:5231:11528": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "pthread_attr_t"
            ],
            "kind": "struct"
        },
        "1:928:2801": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "Drain"
            ],
            "kind": "struct"
        },
        "17:16259:16029": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "Rel32"
            ],
            "kind": "struct"
        },
        "1:2313:138": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "File"
            ],
            "kind": "struct"
        },
        "2:37745:7416": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "Chars"
            ],
            "kind": "struct"
        },
        "1:500:18519": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "spawn_unchecked_",
                "MaybeDangling"
            ],
            "kind": "struct"
        },
        "16:7580:12796": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "pubtypes",
                "PubTypesEntryIter"
            ],
            "kind": "struct"
        },
        "6:4530:11354": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "rusage_info_v4"
            ],
            "kind": "struct"
        },
        "5:7231:26454": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "dedup_by",
                "FillGapOnDrop"
            ],
            "kind": "struct"
        },
        "6:3662:11283": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "aiocb"
            ],
            "kind": "struct"
        },
        "14:40:16020": {
            "crate_id": 14,
            "path": [
                "rustc_demangle",
                "v0",
                "Ident"
            ],
            "kind": "struct"
        },
        "1:10177:3153": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_common",
                "CommandArgs"
            ],
            "kind": "struct"
        },
        "18:96:17538": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memchr",
                "iter",
                "Memchr2"
            ],
            "kind": "struct"
        },
        "6:3938:11305": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "rt_msghdr"
            ],
            "kind": "struct"
        },
        "1:11839:735": {
            "crate_id": 1,
            "path": [
                "std",
                "f128"
            ],
            "kind": "primitive"
        },
        "2:45075:4268": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int64x2x3_t"
            ],
            "kind": "struct"
        },
        "2:45880:3298": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u64x2"
            ],
            "kind": "struct"
        },
        "17:9671:12874": {
            "crate_id": 17,
            "path": [
                "object",
                "common",
                "Architecture"
            ],
            "kind": "enum"
        },
        "1:10214:18556": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "stack_overflow",
                "Handler"
            ],
            "kind": "struct"
        },
        "1:11684:18553": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace_rs",
                "symbolize",
                "gimli",
                "mmap",
                "Mmap"
            ],
            "kind": "struct"
        },
        "2:5990:2963": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "filter",
                "next_chunk",
                "Guard"
            ],
            "kind": "struct"
        },
        "2:12729:7921": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "MatchIndicesInternal"
            ],
            "kind": "struct"
        },
        "2:37673:7390": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "RChunks"
            ],
            "kind": "struct"
        },
        "2:26786:7759": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "Div"
            ],
            "kind": "trait"
        },
        "1:8968:2622": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "5:5935:251": {
            "crate_id": 5,
            "path": [
                "alloc",
                "string",
                "ToString"
            ],
            "kind": "trait"
        },
        "9:422:11587": {
            "crate_id": 9,
            "path": [
                "miniz_oxide",
                "MZStatus"
            ],
            "kind": "enum"
        },
        "6:4404:11347": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "proc_vnodepathinfo"
            ],
            "kind": "struct"
        },
        "6:4259:11331": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "timex"
            ],
            "kind": "struct"
        },
        "1:2495:2934": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "read_dir"
            ],
            "kind": "function"
        },
        "1:5322:128": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "Display"
            ],
            "kind": "struct"
        },
        "2:9542:7405": {
            "crate_id": 2,
            "path": [
                "core",
                "panicking",
                "assert_matches_failed",
                "Pattern"
            ],
            "kind": "struct"
        },
        "17:15582:17334": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageHotPatchBase"
            ],
            "kind": "struct"
        },
        "1:11480:11753": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace_rs",
                "backtrace",
                "Frame"
            ],
            "kind": "struct"
        },
        "6:4210:11325": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "ipc_perm"
            ],
            "kind": "struct"
        },
        "2:27471:7763": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "arith",
                "DivAssign"
            ],
            "kind": "trait"
        },
        "2:38336:7444": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "StrSearcher"
            ],
            "kind": "struct"
        },
        "2:4653:7361": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "Cell"
            ],
            "kind": "struct"
        },
        "17:10218:12877": {
            "crate_id": 17,
            "path": [
                "object",
                "endian",
                "U32Bytes"
            ],
            "kind": "struct"
        },
        "1:6006:220": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "counter",
                "Receiver"
            ],
            "kind": "struct"
        },
        "2:38750:3375": {
            "crate_id": 2,
            "path": [
                "core",
                "task",
                "wake",
                "RawWaker"
            ],
            "kind": "struct"
        },
        "1:10070:113": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_common",
                "Command"
            ],
            "kind": "struct"
        },
        "2:46182:3293": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u32x8"
            ],
            "kind": "struct"
        },
        "2:37682:7393": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "RChunksMut"
            ],
            "kind": "struct"
        },
        "6:601:8550": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "tms"
            ],
            "kind": "struct"
        },
        "11:698:2622": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "6:4027:11310": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "proc_taskinfo"
            ],
            "kind": "struct"
        },
        "1:10086:19290": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_common",
                "Argv"
            ],
            "kind": "struct"
        },
        "2:45126:4273": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint64x2x2_t"
            ],
            "kind": "struct"
        },
        "17:15734:17345": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageCoffSymbolsHeader"
            ],
            "kind": "struct"
        },
        "2:44345:4199": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint8x16_t"
            ],
            "kind": "struct"
        },
        "2:16717:23973": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "flt2dec",
                "decoder",
                "Decoded"
            ],
            "kind": "struct"
        },
        "2:5095:7517": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "REPLACEMENT_CHARACTER"
            ],
            "kind": "constant"
        },
        "18:515:17550": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "FindIter"
            ],
            "kind": "struct"
        },
        "17:11574:11703": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "hash",
                "HashTable"
            ],
            "kind": "struct"
        },
        "16:7857:12811": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "UnitHeader"
            ],
            "kind": "struct"
        },
        "17:13738:16521": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DyldCacheImageInfo"
            ],
            "kind": "struct"
        },
        "17:2175:13027": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "relocation",
                "ElfRelaIterator"
            ],
            "kind": "enum"
        },
        "5:7709:2897": {
            "crate_id": 5,
            "path": [
                "alloc",
                "ffi",
                "c_str",
                "FromVecWithNulError"
            ],
            "kind": "struct"
        },
        "7:0:1906": {
            "crate_id": 7,
            "path": [
                "unwind"
            ],
            "kind": "module"
        },
        "2:3658:254": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "try_trait",
                "Try"
            ],
            "kind": "trait"
        },
        "17:13855:16527": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "SegmentCommand32"
            ],
            "kind": "struct"
        },
        "2:51245:4286": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "aarch64",
                "neon",
                "float64x1x4_t"
            ],
            "kind": "struct"
        },
        "17:11743:13049": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "attributes",
                "AttributesSubsubsection"
            ],
            "kind": "struct"
        },
        "2:15535:2948": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "lane_count",
                "sealed",
                "Sealed"
            ],
            "kind": "trait"
        },
        "17:15521:17332": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageLoadConfigDirectory64"
            ],
            "kind": "struct"
        },
        "2:3675:7488": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "try_trait",
                "NeverShortCircuit"
            ],
            "kind": "struct"
        },
        "2:44976:4258": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "float32x2x2_t"
            ],
            "kind": "struct"
        },
        "1:2541:2464": {
            "crate_id": 1,
            "path": [
                "std",
                "io"
            ],
            "kind": "module"
        },
        "1:4552:3087": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "process",
                "CommandExt"
            ],
            "kind": "trait"
        },
        "5:7484:2622": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "binary_heap",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "16:5927:12734": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "CommonInformationEntry"
            ],
            "kind": "struct"
        },
        "1:8149:18382": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "error",
                "SimpleMessage"
            ],
            "kind": "struct"
        },
        "1:8420:3084": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "net",
                "ucred",
                "UCred"
            ],
            "kind": "struct"
        },
        "2:16961:24170": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroI16Inner"
            ],
            "kind": "struct"
        },
        "2:37590:7388": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "ChunksMut"
            ],
            "kind": "struct"
        },
        "6:4759:11368": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "pthread_mutex_t"
            ],
            "kind": "struct"
        },
        "1:6316:220": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "Receiver"
            ],
            "kind": "struct"
        },
        "1:0:1718": {
            "crate_id": 1,
            "path": [
                "std"
            ],
            "kind": "module"
        },
        "17:11324:13005": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "file",
                "ElfFile"
            ],
            "kind": "struct"
        },
        "1:2003:2888": {
            "crate_id": 1,
            "path": [
                "std",
                "error",
                "Indented"
            ],
            "kind": "struct"
        },
        "11:2121:2811": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "Entry"
            ],
            "kind": "enum"
        },
        "6:3954:11306": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "rt_msghdr2"
            ],
            "kind": "struct"
        },
        "16:7727:12804": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "str",
                "DebugStr"
            ],
            "kind": "struct"
        },
        "2:3255:7740": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "FnPtr"
            ],
            "kind": "trait"
        },
        "1:4652:3105": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "thread",
                "JoinHandleExt"
            ],
            "kind": "trait"
        },
        "16:5700:12722": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "DebugFrame"
            ],
            "kind": "struct"
        },
        "5:3105:26400": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "node",
                "marker",
                "ValMut"
            ],
            "kind": "struct"
        },
        "11:1914:2817": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "set",
                "SymmetricDifference"
            ],
            "kind": "struct"
        },
        "17:15383:17321": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageResourceDirStringU"
            ],
            "kind": "struct"
        },
        "1:680:2774": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace",
                "BytesOrWide"
            ],
            "kind": "enum"
        },
        "1:10474:139": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "FileType"
            ],
            "kind": "struct"
        },
        "17:15151:17300": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageAuxSymbolFunctionBeginEnd"
            ],
            "kind": "struct"
        },
        "1:6674:3189": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "reentrant_lock",
                "ReentrantLockGuard"
            ],
            "kind": "struct"
        },
        "6:4124:11317": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "segment_command"
            ],
            "kind": "struct"
        },
        "17:10612:12914": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SectionIterator"
            ],
            "kind": "struct"
        },
        "2:34348:106": {
            "crate_id": 2,
            "path": [
                "core",
                "ffi",
                "c_str",
                "CStr"
            ],
            "kind": "struct"
        },
        "1:3342:3003": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "stdio",
                "StdinLock"
            ],
            "kind": "struct"
        },
        "16:8313:137": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "Error"
            ],
            "kind": "enum"
        },
        "2:16983:24156": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroI64Inner"
            ],
            "kind": "struct"
        },
        "1:4165:3059": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "fs",
                "MetadataExt"
            ],
            "kind": "trait"
        },
        "17:15569:17333": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageHotPatchInfo"
            ],
            "kind": "struct"
        },
        "2:45863:3292": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u32x4"
            ],
            "kind": "struct"
        },
        "6:1081:8950": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "tm"
            ],
            "kind": "struct"
        },
        "16:6606:12765": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "index",
                "UnitIndexSectionIterator"
            ],
            "kind": "struct"
        },
        "17:14131:16544": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "SymtabCommand"
            ],
            "kind": "struct"
        },
        "1:10708:18650": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "time",
                "Timespec"
            ],
            "kind": "struct"
        },
        "1:11199:18391": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "process",
                "CommandEnv"
            ],
            "kind": "struct"
        },
        "2:34164:7529": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "convert",
                "ParseCharError"
            ],
            "kind": "struct"
        },
        "1:1631:2816": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "set",
                "Difference"
            ],
            "kind": "struct"
        },
        "2:44289:4194": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "float32x2_t"
            ],
            "kind": "struct"
        },
        "2:37721:7422": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "error",
                "Utf8Error"
            ],
            "kind": "struct"
        },
        "2:12994:7404": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "DoubleEndedSearcher"
            ],
            "kind": "trait"
        },
        "2:34203:7530": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "decode",
                "DecodeUtf16"
            ],
            "kind": "struct"
        },
        "16:7397:29162": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "EvaluationWaiting"
            ],
            "kind": "enum"
        },
        "6:5265:11534": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "aarch64",
                "align",
                "__darwin_mcontext64"
            ],
            "kind": "struct"
        },
        "2:34364:7846": {
            "crate_id": 2,
            "path": [
                "core",
                "ffi",
                "c_str",
                "FromBytesWithNulErrorKind"
            ],
            "kind": "enum"
        },
        "2:44815:4242": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly16x4x4_t"
            ],
            "kind": "struct"
        },
        "1:2780:2995": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "buffered",
                "linewriter",
                "LineWriter"
            ],
            "kind": "struct"
        },
        "1:2322:2920": {
            "crate_id": 1,
            "path": [
                "std",
                "fs",
                "read_to_string"
            ],
            "kind": "function"
        },
        "17:11026:12941": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "archive",
                "MemberHeader"
            ],
            "kind": "enum"
        },
        "17:14025:16537": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "SubUmbrellaCommand"
            ],
            "kind": "struct"
        },
        "16:2478:11802": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugInfoOffset"
            ],
            "kind": "struct"
        },
        "17:12371:12928": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "import",
                "Import"
            ],
            "kind": "enum"
        },
        "1:4850:3069": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "fd",
                "owned",
                "AsFd"
            ],
            "kind": "trait"
        },
        "18:582:17555": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "SearcherConfig"
            ],
            "kind": "struct"
        },
        "17:11341:12991": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "segment",
                "ElfSegmentIterator"
            ],
            "kind": "struct"
        },
        "2:37943:7425": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "RMatchIndices"
            ],
            "kind": "struct"
        },
        "2:10369:143": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Formatter"
            ],
            "kind": "struct"
        },
        "11:2323:2812": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "table",
                "OccupiedEntry"
            ],
            "kind": "struct"
        },
        "2:37897:7396": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "RSplitN"
            ],
            "kind": "struct"
        },
        "17:12695:13162": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "segment",
                "XcoffSegment"
            ],
            "kind": "struct"
        },
        "16:2592:11807": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugLocListsIndex"
            ],
            "kind": "struct"
        },
        "1:9996:3159": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "pipe",
                "AnonPipe"
            ],
            "kind": "struct"
        },
        "2:34335:7523": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "TryFromCharError"
            ],
            "kind": "struct"
        },
        "2:37600:7386": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "ChunksExact"
            ],
            "kind": "struct"
        },
        "16:7549:12793": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "pubnames",
                "PubNamesEntryIter"
            ],
            "kind": "struct"
        },
        "1:9113:18420": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpmc",
                "list",
                "ListToken"
            ],
            "kind": "struct"
        },
        "6:1126:8954": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "regex_t"
            ],
            "kind": "struct"
        },
        "2:26020:24604": {
            "crate_id": 2,
            "path": [
                "core",
                "error",
                "tags",
                "MaybeSizedValue"
            ],
            "kind": "struct"
        },
        "2:16950:23966": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroI8Inner"
            ],
            "kind": "struct"
        },
        "16:3329:11827": {
            "crate_id": 16,
            "path": [
                "gimli",
                "arch",
                "LoongArch"
            ],
            "kind": "struct"
        },
        "2:35889:3121": {
            "crate_id": 2,
            "path": [
                "core",
                "panic",
                "panic_info",
                "PanicInfo"
            ],
            "kind": "struct"
        },
        "2:44565:4217": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint8x8x3_t"
            ],
            "kind": "struct"
        },
        "2:16802:3037": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "error",
                "TryFromIntError"
            ],
            "kind": "struct"
        },
        "2:44775:4238": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint16x8x3_t"
            ],
            "kind": "struct"
        },
        "2:3042:123": {
            "crate_id": 2,
            "path": [
                "core",
                "default",
                "Default"
            ],
            "kind": "trait"
        },
        "17:13766:13105": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "FatHeader"
            ],
            "kind": "struct"
        },
        "1:10510:3149": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_common",
                "Stdio"
            ],
            "kind": "enum"
        },
        "17:13899:16529": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "Section32"
            ],
            "kind": "struct"
        },
        "1:2741:2984": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "buffered",
                "bufwriter",
                "WriterPanicked"
            ],
            "kind": "struct"
        },
        "16:6026:12737": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "UnwindContext"
            ],
            "kind": "struct"
        },
        "2:36602:7340": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "num",
                "Octal"
            ],
            "kind": "struct"
        },
        "14:202:7448": {
            "crate_id": 14,
            "path": [
                "rustc_demangle",
                "v0",
                "ParseError"
            ],
            "kind": "enum"
        },
        "2:45135:4274": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint64x2x3_t"
            ],
            "kind": "struct"
        },
        "2:36928:137": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Error"
            ],
            "kind": "struct"
        },
        "2:3937:2801": {
            "crate_id": 2,
            "path": [
                "core",
                "array",
                "drain",
                "Drain"
            ],
            "kind": "struct"
        },
        "2:38074:7420": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "EscapeDebug"
            ],
            "kind": "struct"
        },
        "6:4975:11387": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sockaddr_vm"
            ],
            "kind": "struct"
        },
        "16:2768:11815": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugStrOffsetsBase"
            ],
            "kind": "struct"
        },
        "1:871:2797": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "Iter"
            ],
            "kind": "struct"
        },
        "1:10662:3155": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_inner",
                "ExitStatusError"
            ],
            "kind": "struct"
        },
        "17:1098:12954": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "symbol",
                "CoffSymbolIterator"
            ],
            "kind": "struct"
        },
        "16:5107:12523": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwRle"
            ],
            "kind": "struct"
        },
        "2:10195:7337": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "builders",
                "FormatterFn"
            ],
            "kind": "struct"
        },
        "16:6412:12751": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "abbrev",
                "AbbreviationsCacheStrategy"
            ],
            "kind": "enum"
        },
        "17:13877:16528": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "SegmentCommand64"
            ],
            "kind": "struct"
        },
        "2:10050:25212": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "builders",
                "PadAdapter"
            ],
            "kind": "struct"
        },
        "1:6485:3178": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "once",
                "Once"
            ],
            "kind": "struct"
        },
        "1:8154:18436": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "error",
                "Custom"
            ],
            "kind": "struct"
        },
        "2:44886:4249": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int32x4x2_t"
            ],
            "kind": "struct"
        },
        "17:10439:12912": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "util",
                "StringTable"
            ],
            "kind": "struct"
        },
        "17:11567:13042": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "note",
                "GnuProperty"
            ],
            "kind": "struct"
        },
        "2:11046:2948": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "index",
                "private_slice_index",
                "Sealed"
            ],
            "kind": "trait"
        },
        "1:8960:3199": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "TryIter"
            ],
            "kind": "struct"
        },
        "2:44314:4197": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly64x1_t"
            ],
            "kind": "struct"
        },
        "1:3647:2889": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "Write"
            ],
            "kind": "trait"
        },
        "6:576:8546": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "winsize"
            ],
            "kind": "struct"
        },
        "2:35033:3010": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "sources",
                "repeat",
                "Repeat"
            ],
            "kind": "struct"
        },
        "6:5250:11532": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "b64",
                "aarch64",
                "align",
                "max_align_t"
            ],
            "kind": "struct"
        },
        "2:11295:7400": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "SplitInclusive"
            ],
            "kind": "struct"
        },
        "11:2559:28676": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "TableLayout"
            ],
            "kind": "struct"
        },
        "17:13015:12887": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "Relocation"
            ],
            "kind": "struct"
        },
        "2:35921:7860": {
            "crate_id": 2,
            "path": [
                "core",
                "panicking",
                "AssertKind"
            ],
            "kind": "enum"
        },
        "2:44368:4200": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly8x16_t"
            ],
            "kind": "struct"
        },
        "5:3094:2683": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "node",
                "marker",
                "Owned"
            ],
            "kind": "enum"
        },
        "17:11605:13038": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "version",
                "Version"
            ],
            "kind": "struct"
        },
        "2:3248:7738": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "Freeze"
            ],
            "kind": "trait"
        },
        "11:881:2810": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "RawEntryBuilder"
            ],
            "kind": "struct"
        },
        "2:17457:236": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "saturating",
                "Saturating"
            ],
            "kind": "struct"
        },
        "1:7903:2877": {
            "crate_id": 1,
            "path": [
                "std",
                "env",
                "JoinPathsError"
            ],
            "kind": "struct"
        },
        "2:44826:4243": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "poly16x8x2_t"
            ],
            "kind": "struct"
        },
        "2:2711:102": {
            "crate_id": 2,
            "path": [
                "core",
                "borrow",
                "Borrow"
            ],
            "kind": "trait"
        },
        "5:7584:2622": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "linked_list",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "17:4821:13165": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "symbol",
                "XcoffSymbolIterator"
            ],
            "kind": "struct"
        },
        "6:4784:11371": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "utmpx"
            ],
            "kind": "struct"
        },
        "16:2418:11799": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugAddrBase"
            ],
            "kind": "struct"
        },
        "16:7799:12808": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "DebugInfo"
            ],
            "kind": "struct"
        },
        "16:860:29135": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "endian_slice",
                "DebugBytes"
            ],
            "kind": "struct"
        },
        "16:7132:29053": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "lookup",
                "PubStuffParser"
            ],
            "kind": "struct"
        },
        "2:10410:206": {
            "crate_id": 2,
            "path": [
                "core",
                "fmt",
                "Pointer"
            ],
            "kind": "trait"
        },
        "17:15301:17313": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageTlsDirectory32"
            ],
            "kind": "struct"
        },
        "2:38361:7446": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "EmptyNeedle"
            ],
            "kind": "struct"
        },
        "17:3473:13065": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "symbol",
                "MachOSymbolIterator"
            ],
            "kind": "struct"
        },
        "1:1642:2818": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "set",
                "Union"
            ],
            "kind": "struct"
        },
        "2:15543:3236": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "lane_count",
                "SupportedLaneCount"
            ],
            "kind": "trait"
        },
        "2:6975:7718": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "map_windows",
                "MapWindows"
            ],
            "kind": "struct"
        },
        "11:102:28691": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "Bucket"
            ],
            "kind": "struct"
        },
        "16:7098:29101": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "lookup",
                "LookupEntryIter"
            ],
            "kind": "struct"
        },
        "17:13412:16031": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Rel64"
            ],
            "kind": "struct"
        },
        "17:12711:137": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "Error"
            ],
            "kind": "struct"
        },
        "16:4940:12471": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwDefaulted"
            ],
            "kind": "struct"
        },
        "6:4307:11336": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_precedence_policy"
            ],
            "kind": "struct"
        },
        "2:15963:26027": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "vector",
                "splat",
                "Splat"
            ],
            "kind": "struct"
        },
        "12:0:2452": {
            "crate_id": 12,
            "path": [
                "rustc_std_workspace_alloc"
            ],
            "kind": "module"
        },
        "1:986:2810": {
            "crate_id": 1,
            "path": [
                "std",
                "collections",
                "hash",
                "map",
                "RawEntryBuilder"
            ],
            "kind": "struct"
        },
        "2:36261:88": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicI64"
            ],
            "kind": "struct"
        },
        "1:4213:3062": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "unix",
                "fs",
                "DirEntryExt2"
            ],
            "kind": "trait"
        },
        "2:34327:7527": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "CaseMappingIter"
            ],
            "kind": "struct"
        },
        "2:37997:7427": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "RMatches"
            ],
            "kind": "struct"
        },
        "18:403:17561": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "prefilter",
                "PrefilterState"
            ],
            "kind": "struct"
        },
        "2:38717:207": {
            "crate_id": 2,
            "path": [
                "core",
                "task",
                "poll",
                "Poll"
            ],
            "kind": "enum"
        },
        "2:38525:7934": {
            "crate_id": 2,
            "path": [
                "core",
                "time",
                "Nanoseconds"
            ],
            "kind": "struct"
        },
        "17:1207:12962": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "relocation",
                "CoffRelocationIterator"
            ],
            "kind": "struct"
        },
        "2:36003:196": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "Ordering"
            ],
            "kind": "enum"
        },
        "16:7648:12800": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "rnglists",
                "RawRngListIter"
            ],
            "kind": "struct"
        },
        "1:7738:18513": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace_rs",
                "print",
                "BacktraceFrameFmt"
            ],
            "kind": "struct"
        },
        "16:3842:11856": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwUt"
            ],
            "kind": "struct"
        },
        "17:12508:13155": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "rich",
                "RichHeaderEntry"
            ],
            "kind": "struct"
        },
        "2:44586:4219": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint8x16x2_t"
            ],
            "kind": "struct"
        },
        "17:12251:13115": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "section",
                "PeSectionIterator"
            ],
            "kind": "struct"
        },
        "2:16261:3368": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "simd",
                "num",
                "uint",
                "SimdUint"
            ],
            "kind": "trait"
        },
        "17:12707:12921": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "traits",
                "NoDynamicRelocationIterator"
            ],
            "kind": "struct"
        },
        "16:2508:11803": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugLineOffset"
            ],
            "kind": "struct"
        },
        "5:798:118": {
            "crate_id": 5,
            "path": [
                "alloc",
                "borrow",
                "Cow"
            ],
            "kind": "enum"
        },
        "17:14489:16567": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "EntryPointCommand"
            ],
            "kind": "struct"
        },
        "2:45703:3297": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u64x1"
            ],
            "kind": "struct"
        },
        "16:6813:12772": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "LineProgramHeader"
            ],
            "kind": "struct"
        },
        "2:44965:4257": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint32x4x4_t"
            ],
            "kind": "struct"
        },
        "17:12824:12923": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "SymbolSection"
            ],
            "kind": "enum"
        },
        "6:4186:11322": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sockaddr_ctl"
            ],
            "kind": "struct"
        },
        "2:5375:980": {
            "crate_id": 2,
            "path": [
                "core",
                "iter"
            ],
            "kind": "module"
        },
        "5:3716:2797": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "linked_list",
                "Iter"
            ],
            "kind": "struct"
        },
        "16:8188:12820": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "EntriesTreeIter"
            ],
            "kind": "struct"
        },
        "2:38497:7915": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "CharEscapeUnicode"
            ],
            "kind": "struct"
        },
        "2:15555:3233": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "masks",
                "mask_impl",
                "Mask"
            ],
            "kind": "struct"
        },
        "17:3597:13083": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "relocation",
                "MachORelocationIterator"
            ],
            "kind": "struct"
        },
        "16:7355:12786": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "Piece"
            ],
            "kind": "struct"
        },
        "1:5409:3146": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "ChildStdin"
            ],
            "kind": "struct"
        },
        "6:3841:11297": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sockaddr_in"
            ],
            "kind": "struct"
        },
        "1:10542:3156": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_common",
                "ExitCode"
            ],
            "kind": "struct"
        },
        "16:6263:29096": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "PointerEncodingParameters"
            ],
            "kind": "struct"
        },
        "11:1005:2811": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "Entry"
            ],
            "kind": "enum"
        },
        "6:4294:11334": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "thread_extended_policy"
            ],
            "kind": "struct"
        },
        "16:6895:12775": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "line",
                "FileEntry"
            ],
            "kind": "struct"
        },
        "2:8762:2828": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "marker",
                "TrustedLen"
            ],
            "kind": "trait"
        },
        "1:1897:2867": {
            "crate_id": 1,
            "path": [
                "std",
                "env",
                "SplitPaths"
            ],
            "kind": "struct"
        },
        "11:2566:2793": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "TryReserveError"
            ],
            "kind": "enum"
        },
        "1:10649:3154": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "process",
                "process_inner",
                "ExitStatus"
            ],
            "kind": "struct"
        },
        "1:10330:2748": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "thread",
                "Thread"
            ],
            "kind": "struct"
        },
        "1:656:2770": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace",
                "Backtrace"
            ],
            "kind": "struct"
        },
        "17:13173:13202": {
            "crate_id": 17,
            "path": [
                "object",
                "archive",
                "AixMemberOffset"
            ],
            "kind": "struct"
        },
        "2:46398:24058": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "m16x16"
            ],
            "kind": "struct"
        },
        "11:364:28665": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "RawIntoIter"
            ],
            "kind": "struct"
        },
        "17:15281:17311": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageThunkData32"
            ],
            "kind": "struct"
        },
        "5:938:2820": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "binary_heap",
                "RebuildOnDrop"
            ],
            "kind": "struct"
        },
        "1:8465:3071": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "fd",
                "owned",
                "BorrowedFd"
            ],
            "kind": "struct"
        },
        "17:10905:12920": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "SectionRelocationIterator"
            ],
            "kind": "struct"
        },
        "6:4594:11358": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "vol_capabilities_attr_t"
            ],
            "kind": "struct"
        },
        "17:12584:12918": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "symbol",
                "SymbolIterator"
            ],
            "kind": "struct"
        },
        "2:7789:24503": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "GenericShunt"
            ],
            "kind": "struct"
        },
        "2:34804:7732": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "take_while",
                "TakeWhile"
            ],
            "kind": "struct"
        },
        "2:13042:7433": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "pattern",
                "MultiCharEqPattern"
            ],
            "kind": "struct"
        },
        "6:3878:11300": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "if_msghdr"
            ],
            "kind": "struct"
        },
        "11:1158:2814": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "OccupiedError"
            ],
            "kind": "struct"
        },
        "17:11367:12957": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "section",
                "SectionTable"
            ],
            "kind": "struct"
        },
        "2:37751:7415": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "iter",
                "CharIndices"
            ],
            "kind": "struct"
        },
        "17:14449:16564": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "SymsegCommand"
            ],
            "kind": "struct"
        },
        "2:3286:7325": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "async_function",
                "AsyncFn"
            ],
            "kind": "trait"
        },
        "17:13774:13103": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "FatArch32"
            ],
            "kind": "struct"
        },
        "6:4664:11118": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "kevent"
            ],
            "kind": "struct"
        },
        "5:4337:2963": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "vec_deque",
                "into_iter",
                "try_rfold",
                "Guard"
            ],
            "kind": "struct"
        },
        "1:3665:2946": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "Seek"
            ],
            "kind": "trait"
        },
        "18:393:17557": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "prefilter",
                "Prefilter"
            ],
            "kind": "enum"
        },
        "17:16151:17517": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "CsectAux64"
            ],
            "kind": "struct"
        },
        "5:2825:26502": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "node",
                "Handle"
            ],
            "kind": "struct"
        },
        "6:4600:11359": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "attribute_set_t"
            ],
            "kind": "struct"
        },
        "13:0:2446": {
            "crate_id": 13,
            "path": [
                "std_detect"
            ],
            "kind": "module"
        },
        "2:15929:3239": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "to_bytes",
                "ToBytes"
            ],
            "kind": "trait"
        },
        "2:16661:24139": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "dec2flt",
                "number",
                "Number"
            ],
            "kind": "struct"
        },
        "1:7801:2948": {
            "crate_id": 1,
            "path": [
                "std",
                "sealed",
                "Sealed"
            ],
            "kind": "trait"
        },
        "16:7321:3120": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "Location"
            ],
            "kind": "enum"
        },
        "17:437:11768": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "any",
                "Section"
            ],
            "kind": "struct"
        },
        "2:44725:4233": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int16x8x4_t"
            ],
            "kind": "struct"
        },
        "1:3065:226": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "error",
                "Result"
            ],
            "kind": "type_alias"
        },
        "1:623:2766": {
            "crate_id": 1,
            "path": [
                "std",
                "ascii",
                "AsciiExt"
            ],
            "kind": "trait"
        },
        "18:480:29996": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "twoway",
                "Suffix"
            ],
            "kind": "struct"
        },
        "2:36458:97": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicUsize"
            ],
            "kind": "struct"
        },
        "17:11269:12977": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "import",
                "ImportName"
            ],
            "kind": "enum"
        },
        "18:562:7407": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "Searcher"
            ],
            "kind": "struct"
        },
        "17:11153:12918": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "symbol",
                "SymbolIterator"
            ],
            "kind": "struct"
        },
        "2:3648:7778": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "range",
                "OneSidedRange"
            ],
            "kind": "trait"
        },
        "2:34506:7720": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "cycle",
                "Cycle"
            ],
            "kind": "struct"
        },
        "3:223:226": {
            "crate_id": 3,
            "path": [
                "compiler_builtins",
                "float",
                "cmp",
                "Result"
            ],
            "kind": "enum"
        },
        "17:16223:17523": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "StatAux"
            ],
            "kind": "struct"
        },
        "2:15464:26032": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "swizzle",
                "resize",
                "Resize"
            ],
            "kind": "struct"
        },
        "2:44496:4210": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int8x8x2_t"
            ],
            "kind": "struct"
        },
        "2:15484:3237": {
            "crate_id": 2,
            "path": [
                "core",
                "core_simd",
                "cast",
                "SimdCast"
            ],
            "kind": "trait"
        },
        "6:3700:11062": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "mach_timebase_info"
            ],
            "kind": "struct"
        },
        "2:19857:267": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "wrapping",
                "Wrapping"
            ],
            "kind": "struct"
        },
        "5:1410:2812": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "entry",
                "OccupiedEntry"
            ],
            "kind": "struct"
        },
        "1:5461:113": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "Command"
            ],
            "kind": "struct"
        },
        "1:7822:2750": {
            "crate_id": 1,
            "path": [
                "std",
                "thread",
                "ThreadId"
            ],
            "kind": "struct"
        },
        "1:11838:756": {
            "crate_id": 1,
            "path": [
                "std",
                "f64"
            ],
            "kind": "primitive"
        },
        "2:35027:7706": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "sources",
                "once_with",
                "OnceWith"
            ],
            "kind": "struct"
        },
        "1:10952:18526": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "sync",
                "mutex",
                "pthread",
                "PthreadMutexAttr"
            ],
            "kind": "struct"
        },
        "2:34240:7420": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "EscapeDebug"
            ],
            "kind": "struct"
        },
        "11:2228:11703": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "table",
                "HashTable"
            ],
            "kind": "struct"
        },
        "1:11851:1916": {
            "crate_id": 1,
            "path": [
                "std",
                "usize"
            ],
            "kind": "primitive"
        },
        "17:11898:13077": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "load_command",
                "LoadCommandData"
            ],
            "kind": "struct"
        },
        "2:6786:7735": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "intersperse",
                "IntersperseWith"
            ],
            "kind": "struct"
        },
        "2:5295:24445": {
            "crate_id": 2,
            "path": [
                "core",
                "ffi",
                "sealed_trait",
                "VaArgSafe"
            ],
            "kind": "trait"
        },
        "2:16972:24135": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "nonzero",
                "private",
                "NonZeroI32Inner"
            ],
            "kind": "struct"
        },
        "17:13308:16024": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "CompressionHeader64"
            ],
            "kind": "struct"
        },
        "2:36300:95": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "atomic",
                "AtomicU64"
            ],
            "kind": "struct"
        },
        "2:45962:3263": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "i64x2"
            ],
            "kind": "struct"
        },
        "2:2964:163": {
            "crate_id": 2,
            "path": [
                "core",
                "convert",
                "Into"
            ],
            "kind": "trait"
        },
        "17:12225:13117": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "section",
                "PeSegmentIterator"
            ],
            "kind": "struct"
        },
        "6:3982:8418": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "flock"
            ],
            "kind": "struct"
        },
        "5:6658:2801": {
            "crate_id": 5,
            "path": [
                "alloc",
                "vec",
                "drain",
                "Drain"
            ],
            "kind": "struct"
        },
        "6:5032:11393": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "__c_anonymous_ifc_ifcu"
            ],
            "kind": "union"
        },
        "1:5445:3148": {
            "crate_id": 1,
            "path": [
                "std",
                "process",
                "ChildStderr"
            ],
            "kind": "struct"
        },
        "6:3921:11304": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "rt_metrics"
            ],
            "kind": "struct"
        },
        "2:44865:4247": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int32x2x3_t"
            ],
            "kind": "struct"
        },
        "1:11250:18668": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "wtf8",
                "Wtf8CodePoints"
            ],
            "kind": "struct"
        },
        "16:6543:12761": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "aranges",
                "ArangeEntry"
            ],
            "kind": "struct"
        },
        "2:45650:3279": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "u8x8"
            ],
            "kind": "struct"
        },
        "2:38521:7912": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "UnsafeBytesToStr"
            ],
            "kind": "struct"
        },
        "2:34401:2899": {
            "crate_id": 2,
            "path": [
                "core",
                "ffi",
                "c_char"
            ],
            "kind": "type_alias"
        },
        "2:24803:196": {
            "crate_id": 2,
            "path": [
                "core",
                "cmp",
                "Ordering"
            ],
            "kind": "enum"
        },
        "18:445:29975": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memmem",
                "twoway",
                "Forward"
            ],
            "kind": "struct"
        },
        "17:12443:13141": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "resource",
                "ResourceDirectory"
            ],
            "kind": "struct"
        },
        "17:15434:17327": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageDynamicRelocation32V2"
            ],
            "kind": "struct"
        },
        "2:46332:3314": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "simd",
                "f32x8"
            ],
            "kind": "struct"
        },
        "17:13753:16522": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DyldSubCacheInfo"
            ],
            "kind": "struct"
        },
        "2:44391:4201": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int16x8_t"
            ],
            "kind": "struct"
        },
        "2:38384:7430": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "lossy",
                "Utf8Chunk"
            ],
            "kind": "struct"
        },
        "17:13785:13104": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "FatArch64"
            ],
            "kind": "struct"
        },
        "5:3313:2816": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "set",
                "Difference"
            ],
            "kind": "struct"
        },
        "6:4242:11329": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "sockaddr_ndrv"
            ],
            "kind": "struct"
        },
        "2:24169:3034": {
            "crate_id": 2,
            "path": [
                "core",
                "num",
                "FpCategory"
            ],
            "kind": "enum"
        },
        "2:34669:7719": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "step_by",
                "StepBy"
            ],
            "kind": "struct"
        },
        "17:11075:12957": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "coff",
                "section",
                "SectionTable"
            ],
            "kind": "struct"
        },
        "17:11688:13011": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "elf",
                "attributes",
                "AttributesSection"
            ],
            "kind": "struct"
        },
        "20:23:2310": {
            "crate_id": 20,
            "path": [
                "lazy_to_map_derive",
                "lazy_map"
            ],
            "kind": "macro"
        },
        "2:34286:7525": {
            "crate_id": 2,
            "path": [
                "core",
                "char",
                "ToLowercase"
            ],
            "kind": "struct"
        },
        "2:4605:2752": {
            "crate_id": 2,
            "path": [
                "core",
                "cell",
                "once",
                "OnceCell"
            ],
            "kind": "struct"
        },
        "17:16269:16031": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "Rel64"
            ],
            "kind": "struct"
        },
        "11:0:2451": {
            "crate_id": 11,
            "path": [
                "hashbrown"
            ],
            "kind": "module"
        },
        "2:26043:237": {
            "crate_id": 2,
            "path": [
                "core",
                "marker",
                "Send"
            ],
            "kind": "trait"
        },
        "17:13235:16020": {
            "crate_id": 17,
            "path": [
                "object",
                "elf",
                "Ident"
            ],
            "kind": "struct"
        },
        "17:12659:13158": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "comdat",
                "XcoffComdat"
            ],
            "kind": "struct"
        },
        "2:1956:2963": {
            "crate_id": 2,
            "path": [
                "core",
                "mem",
                "maybe_uninit",
                "Guard"
            ],
            "kind": "struct"
        },
        "2:45145:4275": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint64x2x4_t"
            ],
            "kind": "struct"
        },
        "2:37521:24509": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "iter",
                "GenericSplitN"
            ],
            "kind": "struct"
        },
        "2:12499:7877": {
            "crate_id": 2,
            "path": [
                "core",
                "slice",
                "GetManyMutError"
            ],
            "kind": "struct"
        },
        "1:11840:912": {
            "crate_id": 1,
            "path": [
                "std",
                "i8"
            ],
            "kind": "primitive"
        },
        "16:3899:11890": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwCfa"
            ],
            "kind": "struct"
        },
        "18:80:17537": {
            "crate_id": 18,
            "path": [
                "memchr",
                "memchr",
                "iter",
                "Memchr"
            ],
            "kind": "struct"
        },
        "17:12318:12929": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "export",
                "Export"
            ],
            "kind": "struct"
        },
        "16:2728:11813": {
            "crate_id": 16,
            "path": [
                "gimli",
                "common",
                "DebugRngListsIndex"
            ],
            "kind": "struct"
        },
        "5:898:2819": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "binary_heap",
                "PeekMut"
            ],
            "kind": "struct"
        },
        "6:3740:11287": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "apple",
                "pthread_condattr_t"
            ],
            "kind": "struct"
        },
        "6:1120:8880": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "if_nameindex"
            ],
            "kind": "struct"
        },
        "17:14177:16546": {
            "crate_id": 17,
            "path": [
                "object",
                "macho",
                "DylibTableOfContents"
            ],
            "kind": "struct"
        },
        "5:735:26370": {
            "crate_id": 5,
            "path": [
                "alloc",
                "boxed",
                "from",
                "StringError"
            ],
            "kind": "struct"
        },
        "2:24430:7681": {
            "crate_id": 2,
            "path": [
                "core",
                "mem",
                "transmutability",
                "Assume"
            ],
            "kind": "struct"
        },
        "16:7497:12789": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "op",
                "OperationIter"
            ],
            "kind": "struct"
        },
        "1:3675:2974": {
            "crate_id": 1,
            "path": [
                "std",
                "io",
                "BufRead"
            ],
            "kind": "trait"
        },
        "16:6335:12747": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "dwarf",
                "RangeIter"
            ],
            "kind": "struct"
        },
        "17:11812:13056": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "macho",
                "dyld_cache",
                "DyldCacheImage"
            ],
            "kind": "struct"
        },
        "17:15456:17329": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImagePrologueDynamicRelocationHeader"
            ],
            "kind": "struct"
        },
        "17:16235:17524": {
            "crate_id": 17,
            "path": [
                "object",
                "xcoff",
                "DwarfAux32"
            ],
            "kind": "struct"
        },
        "1:8651:2797": {
            "crate_id": 1,
            "path": [
                "std",
                "path",
                "Iter"
            ],
            "kind": "struct"
        },
        "17:12454:13151": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "pe",
                "resource",
                "ResourceDirectoryTable"
            ],
            "kind": "struct"
        },
        "17:15313:17314": {
            "crate_id": 17,
            "path": [
                "object",
                "pe",
                "ImageImportDescriptor"
            ],
            "kind": "struct"
        },
        "11:685:2798": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "IterMut"
            ],
            "kind": "struct"
        },
        "2:35567:3021": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "ip_addr",
                "Ipv4Addr"
            ],
            "kind": "struct"
        },
        "16:7085:29099": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "lookup",
                "DebugLookup"
            ],
            "kind": "struct"
        },
        "2:3403:7329": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "coroutine",
                "Coroutine"
            ],
            "kind": "trait"
        },
        "6:1140:1246": {
            "crate_id": 6,
            "path": [
                "libc",
                "unix",
                "bsd",
                "option"
            ],
            "kind": "struct"
        },
        "11:809:2802": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "ExtractIf"
            ],
            "kind": "struct"
        },
        "1:7868:2777": {
            "crate_id": 1,
            "path": [
                "std",
                "backtrace",
                "BacktraceStatus"
            ],
            "kind": "enum"
        },
        "16:4718:12433": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwLang"
            ],
            "kind": "struct"
        },
        "2:2733:112": {
            "crate_id": 2,
            "path": [
                "core",
                "clone",
                "Clone"
            ],
            "kind": "trait"
        },
        "16:6098:12741": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "cfi",
                "CfaRule"
            ],
            "kind": "enum"
        },
        "16:8216:12822": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "unit",
                "DebugTypesUnitHeadersIter"
            ],
            "kind": "struct"
        },
        "1:5658:3191": {
            "crate_id": 1,
            "path": [
                "std",
                "sync",
                "mpsc",
                "SyncSender"
            ],
            "kind": "struct"
        },
        "2:36497:3173": {
            "crate_id": 2,
            "path": [
                "core",
                "sync",
                "exclusive",
                "Exclusive"
            ],
            "kind": "struct"
        },
        "1:11321:18541": {
            "crate_id": 1,
            "path": [
                "std",
                "sys_common",
                "net",
                "LookupHost"
            ],
            "kind": "struct"
        },
        "2:44458:4206": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "float32x4_t"
            ],
            "kind": "struct"
        },
        "1:4694:3059": {
            "crate_id": 1,
            "path": [
                "std",
                "os",
                "macos",
                "fs",
                "MetadataExt"
            ],
            "kind": "trait"
        },
        "5:1794:26406": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "drop",
                "DropGuard"
            ],
            "kind": "struct"
        },
        "17:4986:13171": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "relocation",
                "XcoffRelocationIterator"
            ],
            "kind": "struct"
        },
        "2:32119:7775": {
            "crate_id": 2,
            "path": [
                "core",
                "ops",
                "bit",
                "ShlAssign"
            ],
            "kind": "trait"
        },
        "1:1920:2873": {
            "crate_id": 1,
            "path": [
                "std",
                "env",
                "Args"
            ],
            "kind": "struct"
        },
        "11:1023:2812": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "map",
                "OccupiedEntry"
            ],
            "kind": "struct"
        },
        "2:35785:3026": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "socket_addr",
                "SocketAddrV6"
            ],
            "kind": "struct"
        },
        "2:45105:4271": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "uint64x1x3_t"
            ],
            "kind": "struct"
        },
        "2:13946:152": {
            "crate_id": 2,
            "path": [
                "core",
                "alloc",
                "global",
                "GlobalAlloc"
            ],
            "kind": "trait"
        },
        "2:45036:4264": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "arm_shared",
                "neon",
                "int64x1x2_t"
            ],
            "kind": "struct"
        },
        "2:8806:25216": {
            "crate_id": 2,
            "path": [
                "core",
                "net",
                "display_buffer",
                "DisplayBuffer"
            ],
            "kind": "struct"
        },
        "2:34597:7717": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "adapters",
                "map_while",
                "MapWhile"
            ],
            "kind": "struct"
        },
        "16:3925:11893": {
            "crate_id": 16,
            "path": [
                "gimli",
                "constants",
                "DwChildren"
            ],
            "kind": "struct"
        },
        "2:8759:149": {
            "crate_id": 2,
            "path": [
                "core",
                "iter",
                "traits",
                "marker",
                "FusedIterator"
            ],
            "kind": "trait"
        },
        "2:12515:7413": {
            "crate_id": 2,
            "path": [
                "core",
                "str",
                "converts",
                "from_utf8"
            ],
            "kind": "function"
        },
        "17:13064:12883": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "CompressedData"
            ],
            "kind": "struct"
        },
        "2:33526:7476": {
            "crate_id": 2,
            "path": [
                "core",
                "any",
                "TypeId"
            ],
            "kind": "struct"
        },
        "5:1564:2622": {
            "crate_id": 5,
            "path": [
                "alloc",
                "collections",
                "btree",
                "map",
                "IntoIter"
            ],
            "kind": "struct"
        },
        "2:2938:7546": {
            "crate_id": 2,
            "path": [
                "core",
                "convert",
                "num",
                "FloatToInt"
            ],
            "kind": "trait"
        },
        "16:6620:12766": {
            "crate_id": 16,
            "path": [
                "gimli",
                "read",
                "index",
                "UnitIndexSection"
            ],
            "kind": "struct"
        },
        "1:9695:18549": {
            "crate_id": 1,
            "path": [
                "std",
                "sys",
                "pal",
                "unix",
                "fs",
                "copy",
                "FreeOnDrop"
            ],
            "kind": "struct"
        },
        "11:299:28684": {
            "crate_id": 11,
            "path": [
                "hashbrown",
                "raw",
                "RawIterRange"
            ],
            "kind": "struct"
        },
        "17:12621:13164": {
            "crate_id": 17,
            "path": [
                "object",
                "read",
                "xcoff",
                "symbol",
                "XcoffSymbol"
            ],
            "kind": "struct"
        },
        "2:51226:4284": {
            "crate_id": 2,
            "path": [
                "core",
                "core_arch",
                "aarch64",
                "neon",
                "float64x1x2_t"
            ],
            "kind": "struct"
        }
    },
    "external_crates": {
        "20": {
            "name": "lazy_to_map_derive",
            "html_root_url": null
        },
        "17": {
            "name": "object",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "14": {
            "name": "rustc_demangle",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "11": {
            "name": "hashbrown",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "8": {
            "name": "cfg_if",
            "html_root_url": "https://docs.rs/cfg-if/"
        },
        "5": {
            "name": "alloc",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "2": {
            "name": "core",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "19": {
            "name": "panic_unwind",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "16": {
            "name": "gimli",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "13": {
            "name": "std_detect",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "10": {
            "name": "adler",
            "html_root_url": "https://docs.rs/adler/1.0.2/"
        },
        "7": {
            "name": "unwind",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "4": {
            "name": "rustc_std_workspace_core",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "1": {
            "name": "std",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "18": {
            "name": "memchr",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "15": {
            "name": "addr2line",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "12": {
            "name": "rustc_std_workspace_alloc",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "9": {
            "name": "miniz_oxide",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "6": {
            "name": "libc",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        },
        "3": {
            "name": "compiler_builtins",
            "html_root_url": "https://doc.rust-lang.org/nightly/"
        }
    },
    "format_version": 29
}